namespace map_feedingtowerc {

	//============================================================================
	//FTC and FTD Music functions
	//============================================================================
	void FTC_Music_Ambient1() {
		thread PlayMapMusic( "snd_ft_c_ambient1", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftc.startSoundShader( "ft_c_ambient1", SND_SCRIPT_MUSIC_1 );
	}
	void FTC_Music_Ambient2() {
		thread PlayMapMusic( "snd_ft_c_ambient2", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftc.startSoundShader( "ft_c_ambient2", SND_SCRIPT_MUSIC_1 );
	}
	void FTC_Music_Ambient3() {
		thread PlayMapMusic( "snd_ft_c_ambient3", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftc.startSoundShader( "ft_c_ambient3", SND_SCRIPT_MUSIC_1 );
	}
	void FTC_Music_Possession() {
		thread PlayMapMusic( "snd_ft_c_possession", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftc.startSoundShader( "ft_c_possession", SND_SCRIPT_MUSIC_1 );
	}
	void FTD_Music_Elevator() {
		thread PlayMapMusic( "snd_ft_c_elevator", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftd.startSoundShader( "ft_c_elevator", SND_SCRIPT_MUSIC_1 );
	}
	void FTD_Music_TrackingJen() {
		thread PlayMapMusic( "snd_ft_c_tracking_jen", FALSE, MUS_TRANSITION_OVERLAP );
//		$music_ftd.startSoundShader( "ft_c_tracking_jen", SND_SCRIPT_MUSIC_1 );
	}

	//============================================================================
	//============================================================================
	void Jukebox_MusicSwitch() {
		
		$ftcHunterTalkNull.startSound( "snd_monster_hunter_jukeoff", SND_SCRIPT_0, 1 );
		sys.wait( 1.5 );
		$ftcJukebox.setTrack( 0 );
		$ftcJukebox.playSelected();
		sys.wait( 0.5 );
		
		$ftcJukebox.setTrack( 3 );
		$ftcJukebox.playSelected();
		sys.wait( 1 );
		$ftcHunterTalkNull.startSound( "snd_monster_hunter_jukeswitcha", SND_SCRIPT_0, 1 );
		sys.wait( 1.25 );
		$ftcHunterTalkNull.startSound( "snd_monster_hunter_jukeswitchb", SND_SCRIPT_1, 1 );
		sys.wait( 0.55 );
		$ftcHunterTalkNull.startSound( "snd_monster_hunter_jukeswitchb", SND_SCRIPT_1, 1 );
	}
	void Jukebox_MusicPreset() {
		$ftcJukebox.setTrack( 2 );
		$ftcJukebox.playSelected();
	}

	//============================================================================
	//============================================================================
	void HiderAttacksMutilated_Conversation() {
		PlayAnim_Blend( $hiderAttacks_hider, ANIMCHANNEL_HEAD, "lookout", 6 );
		PlayAnim_Blend( $hiderAttacks_hider, ANIMCHANNEL_LEGS, "point", 10 );
		//sys.waitForSilence( $hiderAttacks_hider.getHead(), 0.5 ); 
		sys.wait( $hiderAttacks_hider.animLength( ANIMCHANNEL_LEGS, "point" ) );
		PlayAnim_Blend( $hiderAttacks_hider, ANIMCHANNEL_LEGS, "flee", 12 );
		sys.wait( 1 );
		//TOMMY		Wait come back!
		$player1.startSoundShader( "ftc_tom_hiderreact02", SND_SCRIPT_0 );
		sys.wait( $hiderAttacks_hider.animLength( ANIMCHANNEL_LEGS, "flee" ) );
		$hiderAttacks_hider.remove();
	}
	
	//============================================================================
	//============================================================================
	void HiderAttacksMutilated() {
		SpawnProjectile_HiderShot( $hiderAttacks_gun, $gunTarget1 );
		sys.wait( 0.15 );
		SpawnProjectile_HiderShot( $hiderAttacks_gun, $gunTarget2 );
		sys.wait( 0.15 );
		SpawnProjectile_HiderShot( $hiderAttacks_gun, $gunTarget3 );
		sys.wait( 0.15 );
		SpawnProjectile_HiderShot( $hiderAttacks_gun, $gunTarget4 );
		sys.wait( 0.15 );
		SpawnProjectile_HiderShot( $hiderAttacks_gun, $gunTarget5 );
		sys.wait( 0.5 );
		//TOMMY		What the?
		$player1.startSoundShader( "ftc_tom_hiderkillsmutilated", SND_SCRIPT_0 );
	}
	
	//============================================================================
	//HiderAttacksMutilated_Setup()
	//============================================================================
	void HiderAttacksMutilated_Setup() {
		vector vGunPos;
		$ftcBoundHiderGun.moveToJoint( $hiderAttacks_hider, "Waist" );
		vGunPos = $ftcBoundHiderGun.getOrigin();
		vGunPos += '8 2 4';
		$ftcBoundHiderGun.setOrigin( vGunPos );
		sys.waitFrame();
		$ftcBoundHiderGun.setAngles( $hiderAttacks_hider.getJointAngle( $hiderAttacks_hider.getJointHandle( "Rattach_gun" ) ) + '90 90 0' );
		$ftcBoundHiderGun.bindToJoint( $hiderAttacks_hider, "Waist", 1 );
		sys.trigger( $hiderAttacks_hider );//unhide
		$hiderAttacks_mutilated.show();
		sys.waitFrame();
		sys.trigger( $hiderAttacks_mutilated );
		sys.wait( 0.25 );
		sys.trigger( $hiderAttacks_force );
		thread HiderAttacksMutilated();
		PlayCycle_Blend( $hiderAttacks_hider, ANIMCHANNEL_LEGS, "fleerightidle", 0 );
	}
	
	void vomit() {
		entity eVomit, ePlayerHead;
		vector vOffset, vPlayerLoc;
		
		ePlayerHead = $player1.getHead();
		vPlayerLoc = ePlayerHead.getWorldOrigin();
		sys.setSpawnArg( "origin", vPlayerLoc );
		sys.setSpawnArg( "triggered", 1 );
		sys.setSpawnArg( "removeWhenDone", 0 );
		sys.setSpawnArg( "toggle", 1 );
		sys.setSpawnArg( "fx", "fx/player_vomit.fx" );
		eVomit = sys.spawn( "func_fx" );
		sys.waitFrame();
		vOffset = ePlayerHead.getAngles();
  		eVomit.setAngles( vOffset );
		eVomit.bindToJoint( ePlayerHead, "Jaw", 1 );
		sys.waitFrame();
		$player1.startSoundShader( "ftc_tom_puke03", SND_SCRIPT_7 );//feedingc_tommyvomit
		sys.wait( 0.1 );
		sys.trigger( eVomit );//on 1
		sys.wait( 0.25 );
		sys.trigger( eVomit );//off
		sys.wait( 0.5 );
		sys.trigger( eVomit );//on 2
		sys.wait( 0.5 );//.25
		sys.trigger( eVomit );//off
		sys.wait( 1.7 );//1
		$player1.startSoundShader( "ftc_tom_puke04", SND_SCRIPT_7 );
//		sys.trigger( eVomit );//on 3
//		sys.wait( 0.25 );
//		sys.trigger( eVomit );//off
//		sys.wait( 0.6 );
//		sys.trigger( eVomit );//on 4
//		sys.wait( 1 );
//		sys.trigger( eVomit );//off
		sys.wait( 3 );
		eVomit.unbind();
		eVomit.remove();
	}
	
	void Conversation_GravityFlip_Check( entity eSelf ) {
		float fTimesFlipped;
		
		if ( eSelf.getIntKey( "finished" ) == FALSE ) {
			if ( eSelf.getIntKey( "isRunning" ) == FALSE ) {
				eSelf.setKey( "isRunning", TRUE );
				fTimesFlipped = eSelf.getIntKey( "fTimesFlipped" ) + 1;
				if ( fTimesFlipped == 1 ) {
					$player1.startSoundShader( "ftc_tom_puke01", SND_SCRIPT_7 );
				}
				else if ( fTimesFlipped == 3 ) {
					$player1.startSoundShader( "ftc_tom_puke02", SND_SCRIPT_7 );
				}
				else if ( fTimesFlipped == 5 ) {
					eSelf.setKey( "finished", TRUE );
					//M_blip, head, neck, Jaw
					thread vomit();
					return;
				}
				eSelf.setKey( "fTimesFlipped", fTimesFlipped );
				eSelf.setKey( "isRunning", FALSE );
			}
		}
	}
	
	//============================================================================
	//FtcGirlAttackedCry()
	//============================================================================
	void FtcGirlAttackedCry() {
		sys.wait( 1 );
		$fmftcGirlAttacked_GirlSpeaker2.startSound( "snd_cry1", SND_SCRIPT_0, 1 );//or momdad?
	}
	
	//============================================================================
	//FtcGirlAttackedMomDad()
	//============================================================================
	void FtcGirlAttackedMomDad() {
		$fmftcGirlAttacked_GirlSpeaker2.stopSound( SND_SCRIPT_0, 1 );//or momdad?
		$fmftcGirlAttacked_GirlSpeaker.startSound( "snd_momdad", SND_SCRIPT_0, 1 );//or momdad?
	}
	
	//============================================================================
	//FtcGirlAttacked()
	//
	//Desciption: a hound runs overhead and there are sounds of a girl being attacked
	//============================================================================
	void FtcGirlAttacked() {
		$fmftcGirlAttacked_GirlSpeaker.stopSound( SND_SCRIPT_0, 1 );//previously triggered
		$fmftcGirlAttacked_GirlSpeaker.startSound( "snd_cry2", SND_SCRIPT_0, 1 );
		sys.wait( 0.5 );
		$fmftcGirlAttacked_Hound.startSound( "snd_leapattack", SND_SCRIPT_0, 1 );
		sys.wait( 1.5 );
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_attack1", SND_SCRIPT_0, 1 );
		sys.wait( 1 );
		$fmftcGirlAttacked_GirlSpeaker.startSound( "snd_screams", SND_SCRIPT_0, 1 );
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_attack2", SND_SCRIPT_1, 1 );
		sys.wait( 0.5 );//1.5
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_chew", SND_SCRIPT_2, 1 );
		sys.wait( 0.75 );
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_chew", SND_SCRIPT_2, 1 );
		sys.trigger( $fmftcGirlAttacked_Debris1 );
		sys.wait( 0.75 );
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_chew", SND_SCRIPT_2, 1 );
		sys.wait( 2 );
		$fmftcGirlAttacked_HoundSpeaker.startSound( "snd_growl", SND_SCRIPT_1, 1 );
	}
	
	/*
	============================================================================
	void SphereBirthDustTrigger()
	============================================================================
	*/
	void SphereBirthDustTrigger( entity emitter ) {
		if ( !emitter.getFloatKey( "isRunning" ) ) {
			emitter.setKey( "isRunning", 1 );
			
			sys.trigger( emitter );
			
			sys.wait( 2 );
			emitter.setKey( "isRunning", 0 );		
		}
	}
	
	/*
	============================================================================
	void SphereBirthDustRun()
	============================================================================
	*/
	void SphereBirthDustRun() {
		float dustNum;
		
		while ( true ) {
			dustNum = int( sys.random( 9 ) ) + 1 ;
			thread SphereBirthDustTrigger( sys.getEntity( "spherebirthdust" + dustNum ) );
			sys.wait( 0.1 + sys.random( 0.2 ) );
		}
	}
	
	/*
	============================================================================
	void SphereBirthMove()
	============================================================================
	*/
	void SphereBirthMove() {
		entity sphereBaby = $sphereBaby;
		vector initalOrigin = sphereBaby.getOrigin();
		float dustThreadNum;
		
		sys.wait( 1 );
		sys.waitPVS( sphereBaby );
			
		sphereBaby.speed( 192 );
		sphereBaby.setAngularVelocity( '0 0 0.16' );
			
		while ( true ) {
			sys.waitPVS( sphereBaby );
			
			sphereBaby.move( UP, 2200 );
			sys.waitFor( sphereBaby );
			
			dustThreadNum = thread SphereBirthDustRun();
			
			sphereBaby.move( UP, 1800 );
			sys.waitFor( sphereBaby );
			
			SAFE_THREAD_TERMINATE( dustThreadNum );
			
			sphereBaby.move( UP, 3200 );
			sys.waitFor( sphereBaby );
			sphereBaby.setOrigin( initalOrigin );
		}
	}
	
	/*
	============================================================================
	void WWMoverToggle()
	============================================================================
	*/
	void WWMoverToggle() {
		if( !$ftcWallWalkMover.getFloatKey( "isRunning" ) ) {
			$ftcWallWalkMover.setKey( "isRunning", 1 );
			
			if( $ftcWallWalkMover.getFloatKey( "dirToggle" ) == 1 ) {
				$ftcWallWalkMover.move( SOUTH, 560 );
				$ftcWallWalkMover.setKey( "dirToggle", 0 );
			}	
			else {
				$ftcWallWalkMover.move( NORTH, 560 );	
				$ftcWallWalkMover.setKey( "dirToggle", 1 );
			}
			$ftcWallWalkMover.startSound( "snd_start", SND_CHANNEL_ANY, 1 );
			$ftcWallWalkMover.startSound( "snd_moving", SND_CHANNEL_ANY, 1 );
			sys.waitFor( $ftcWallWalkMover );
			$ftcWallWalkMover.stopSound( SND_CHANNEL_ANY, 1 );
			$ftcWallWalkMover.startSound( "snd_stopped", SND_CHANNEL_ANY, 1 );
			
			$ftcWallWalkMover.setKey( "isRunning", 0 );	
		}
	}
	
	//============================================================================
	//============================================================================
	void FeedCLeechGunStart() {
		TimeTweak( $FeedCLeechGunTrayMover, 1, 1, 4.5 );
		$FeedCLeechGunTrayMover.startSound( "snd_leechstarting", SND_CHANNEL_ANY, 1 );
		$FeedCLeechGunTrayMover.move( UP, 48 );
	}
	
	/*
	============================================================================
	void SlabSplitterInit()
	============================================================================
	*/
	void SlabSplitterInit() {
		TimeTweak( $ftSlabSplitter1Door1, 0.5, 1.5, 2 );
		TimeTweak( $ftSlabSplitter1Door2, 0.25, 1.25, 1.5 );
		TimeTweak( $ftSlabSplitter1Door3, 0.25, 1.25, 1.5 );
		
		TimeTweak( $ftSlabSplitter2Door1, 0.5, 1.5, 2 );
		TimeTweak( $ftSlabSplitter2Door2, 0.25, 1.25, 1.5 );
		TimeTweak( $ftSlabSplitter2Door3, 0.25, 1.25, 1.5 );
	}
	
	/*
	============================================================================
	void SlabSplitterOpen()
	============================================================================
	*/
	void SlabSplitterOpen( entity self ) {
		string prefix;
		
		entity door1,
			   door2,
			   door3;
		prefix = self.getKey( "prefix" );
			   
		door1 = sys.getEntity( prefix + "Door1" );
		door2 = sys.getEntity( prefix + "Door2" );
		door3 = sys.getEntity( prefix + "Door3" );
		
		door1.startSound( "snd_open", SND_CHANNEL_ANY, 1 );
		door1.rotateOnce( '-112 0 0' );
		door2.rotateOnce( '0 -36 0' );
		door3.rotateOnce( '0 36 0' );
	}
	
	/*
	============================================================================
	void SlabSplitterClose()
	============================================================================
	*/
	void SlabSplitterClose( entity self ) {		
		string prefix;
		
		entity door1,
			   door2,
			   door3;
		
		prefix = self.getKey( "prefix" );
			   
		door1 = sys.getEntity( prefix + "Door1" );
		door2 = sys.getEntity( prefix + "Door2" );
		door3 = sys.getEntity( prefix + "Door3" );
		
		door1.startSound( "snd_close", SND_CHANNEL_ANY, 1 );
		door1.rotateOnce( '112 0 0' );
		door2.rotateOnce( '0 36 0' );
		door3.rotateOnce( '0 -36 0' );
	}
	
	/*
	============================================================================
	void SlabConnecterToggle()
	============================================================================
	*/
	void SlabConnecterToggle( entity self ) {
		entity connecter;
		
		connecter = sys.getEntity( self.getKey( "connecter" ) );
		
		if ( connecter.getFloatKey( "isOn" ) ) {
			connecter.setShaderParm( 4, -sys.getTime() );
			connecter.setShaderParm( 5, 1 );
			connecter.setKey( "isOn", 0 );
		}
		else {
			connecter.setShaderParm( 4, -sys.getTime() );
			connecter.setShaderParm( 5, 0 );
			connecter.setKey( "isOn", 1 );
		}
	}
	
	/*
	============================================================================
	void MoveLight()
	============================================================================
	*/
	void MoveLight() {
		while ( TRUE ) {
			sys.trigger( $func_emitter_20 );
			sys.wait( 0.1 );
			sys.trigger( $func_idforcefield_1 );
			sys.wait( 4 + sys.random( 4 ) );
			sys.waitPVS( $func_idforcefield_1 );
		}
	}
	
	/*
	============================================================================
	void KidPossessedScale( float totalTime )
	============================================================================
	*/
	void KidPossessedScale( float totalTime ) {
		$ftcPossessedGirlSoul.setShaderParm( 9, 1 ); // scale deform
		
		float scale,
			  frac,
			  i,
			  dest = 2,
			  source = 1,
			  numTics;
		
		numTics = totalTime * sys.getTicsPerSecond();
		
		for ( i = 1; i <= numTics; i++ ) {
			frac = i / numTics;
			scale = dest * frac + source * ( 1 - frac );
			$ftcPossessedGirlSoul.setShaderParm( 10, scale );
			sys.waitFrame();
		}
	}	
	
	/*
	============================================================================
	void KidPossesedEffect()
	============================================================================
	*/
	void KidPossesedEffect() {
		//sys.trigger( $possessionFX );
		if ( $gorecheck.getIntKey( "bNoGore" ) == FALSE ) {
			PL( "gore enabled" );
			sys.trigger( $ftcPossessedGirlSoul );
			$ftcPossessedGirlSoulCtrlP.time( 2 );
			$ftcPossessedGirlSoulCtrlP.move( UP, 64 );
			thread fadeOutEnt( $ftcPossessedGirlSoul, '0.85 0.85 1', 1.5 );
			
			thread KidPossessedScale( 1.5 );
			
			$func_animate_10.setSkin( "skins/monster/possessedgirl" );
		}
		$func_animate_10.setShaderParm( 6, 0 );
		
		sys.trigger( $ftcPossessedGirlGib );
		sys.trigger( $ftcPossessedgirl_blood );
		$kidPossessedWraithLight.fadeInLight( 0.1 );
		sys.wait( 0.1 );
		$kidPossessedWraithLight.fadeOutLight( 0.5 );
	}
	
	void KidPossesedEffect_Thread() {
		thread KidPossesedEffect();
	}

	/*
	============================================================================
	void KidGlassDestroy()
	============================================================================
	*/
	void KidGlassDestroy() {
		sys.trigger( $kidGlassBreakRelay );
		$kidPossessedWraithLight2.fadeInLight( 0.1 );
		sys.wait( 0.1 );
		$kidPossessedWraithLight2.fadeOutLight( 0.25 );
	}
	
	void KidGlassDestroy_Thread() {
		thread KidGlassDestroy();
	}
	
	/*
	============================================================================
	void KidPossessedSpike()
	============================================================================
	*/
	void KidPossessedSpike() {
		sys.trigger( $girl2spike );
		sys.wait( 0.15 );
		sys.trigger( $kidPossessedBloodSplat );
		sys.wait( 0.1 );
		$kidPossessedSpike.setColor( 0.7608, 0.6078, 0.6078 );
		$kidPossessedSpikeLight1.setColor( 0.9, 0.88, 0.91 );
		$kidPossessedSpikeLight2.setColor( 0.41, 0.35, 0.34 );
		$kidSpikeBlood1.show();
		$kidSpikeBlood2.show();
		$kidSpikeBlood3.show();
		$kidSpikeBlood4.show();
		$kidSpikeBlood5.show();
		$kidSpikeBlood6.show();
		$kidSpikeBlood7.show();
	}
	void KidPossessedSpike_Thread() {
		thread KidPossessedSpike();
	}
	
	//============================================================================
	//FtcKidsIntroLight1()
	//
	//Desciption:
	//============================================================================
	void FtcKidsIntroLight1() {
		sys.trigger( $ftcKids_IntroSpeaker1 );//screams
		sys.trigger( $ftcKids_IntroSpeaker1b );//soundlight on
	
		sys.trigger( $ftcKids_IntroShadow1 );
		sys.wait( 0.25 );
		sys.trigger( $ftcKids_IntroShadow2 );
		sys.wait( 2.75 );
	
		thread Light_FadeLocal( $ftcKids_IntroLight2, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_IntroLight2Static,	6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_IntroLight3, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_IntroLight3Static,	6, 1, 0, 1, 24 );
	}
	
	//============================================================================
	//============================================================================
	void FtcKidsIntroLight2() {//gotme light
		sys.trigger( $ftcKidsLights1Mover1Relay );//start local movers
		sys.trigger( $ftcKids_GotMeSpeaker );
		sys.wait( 9 );
		thread Light_FadeLocal( $ftcKids_Intro2Light1, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro2Light2, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro2Light3, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro2LightPatch,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro2LightFlare,	6, 1, 0, 1, 24 );
	}
	
	//============================================================================
	//============================================================================
	void FtcKidsIntroLight3() {//BehindYou light
		sys.trigger( $ftcKidsLights3Mover1Relay );//start local movers
		sys.trigger( $ftcKids_BehindYou );
		sys.wait( 5 );
		thread Light_FadeLocal( $ftcKids_Intro3Light1, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro3LightPatch,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro3LightFlare,	6, 1, 0, 1, 24 );
	}
	
	//============================================================================
	//============================================================================
	void FtcKidsIntroLight4() {//NotFair light
		sys.trigger( $ftcKidsLights4Mover1Relay );//start local movers
		sys.trigger( $ftcKids_NotFair );
		sys.wait( 6 );
		thread Light_FadeLocal( $ftcKids_Intro4Light1, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro4Light2, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro4LightPatch,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro4LightFlare,	6, 1, 0, 1, 24 );
	}
	
	//============================================================================
	//============================================================================
	void FtcKidsIntroLight5() {//HelpMe light
		sys.trigger( $ftcKidsLights5Mover1Relay );//start local movers
		sys.trigger( $ftcKids_HelpMe );
		sys.wait( 2.25 );
		
		thread Light_FadeLocal( $ftcKids_Intro5Light1, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light2, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light3, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightPatch,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightFlare,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5Light3Model,	6, 1, 0, 1, 24 );
	}
	
	//============================================================================
	//FtcKidsEnterRoom()
	//
	//Desciption:
	//============================================================================
	void FtcKidsEnterRoom() {
		PL( "	FtcKidsEnterRoom ran" );
		sys.wait( 1.5 );
		thread FtcKidsIntroLight1();
		sys.wait( 0.5 );
		sys.trigger( $ftcKids_Murmur01 );//to go with back area
	}
	
	void FtcKidsEnterDoorClose() {
		TimeTweak( $ftcKidsBlastDoor, 3, 0, 4 );
		$ftcKidsBlastDoor.move( DOWN, 160 );
		sys.waitFor( $ftcKidsBlastDoor );
		$ftcKidsBlastDoor.closePortal();
	}
	
	//============================================================================
	//FtcKidsLightsOut()
	//
	//Desciption:
	//============================================================================
	void FtcKidsLightsOut() {
		thread Light_FadeLocal( $ftcKids_Intro2Light1, 		6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro2Light2, 		6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro2Light3, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro2LightPatch,	6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro2LightFlare,	6, 0.5, 1, 0, 24 );
		sys.wait( 0.5 );
		thread Light_FadeLocal( $ftcKids_Intro3Light1, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro3LightPatch,	6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro3LightFlare,	6, 0.5, 1, 0, 24 );
		sys.wait( 0.75 );
		thread Light_FadeLocal( $ftcKids_Intro4Light1, 		6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro4Light2, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro4LightPatch,	6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro4LightFlare,	6, 0.5, 1, 0, 24 );
		sys.wait( 0.65 );
		thread Light_FadeLocal( $ftcKids_Intro5Light1, 		6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light2, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightPatch,	6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightFlare,	6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light3, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5Light3Model,	6, 0.5, 1, 0, 24 );
	}
	
	//============================================================================
	//FtcKidsFinished()
	//
	//Desciption:
	//============================================================================
	void FtcKidsFinished() {
		PL( "	FtcKidsFinished ran" );
		$meatCarrier1.setKey( "isRunning", FALSE );
		sys.wait( 4 );
		FtcKidsLightsOut();
		sys.wait( 1.85 );
		$ftcKids_HelpMe.startSound( "snd_exitScreams", SND_SCRIPT_0, 1 );//8.35
		sys.wait( 3 );
		sys.trigger( $ftcKids_FinishMurmur01 );//door startup noises
		sys.wait( 3 );
		//sys.trigger( $ftcKidsLightRelay2 );
		sys.trigger( $ftcKids_FinishMurmur02 );
		sys.wait( 2.35 );
		thread Light_FadeLocal( $ftcKids_Intro5Light1, 		6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light2, 		6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightPatch,	6, 1, 0, 1, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightFlare,	6, 1, 0, 1, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light3, 		6, 1, 0, 1, 24 );	
		thread Parm_FadeLocal( $ftcKids_Intro5Light3Model,	6, 1, 0, 1, 24 );
		$ftcKids_HelpMe.startSound( "snd_exitScreams2", SND_SCRIPT_0, 1 );
		$ftcKidsBlastDoor.openPortal();
		TimeTweak( $ftcKidsBlastDoor, 2, 0.25, 3 );
		$ftcKidsBlastDoor.move( UP, 30 );//was 160
		sys.wait( 1 );
		sys.trigger( $ftcKidsDoorDust );
		sys.wait( 1 );
		sys.trigger( $ftcKids_exitKid1 );//these point to another master spawner that only spawns 2 additional ones when these die
		sys.wait( 1.2 );
		sys.trigger( $ftcKids_exitKid2 );
		sys.wait( 1 );
		sys.trigger( $ftcKidsFloorDust );//from the grate for atmospheric exit
		$ftcKids_HelpMe.startSound( "snd_exitScreams3", SND_SCRIPT_0, 1 );
	}
	
	
	//============================================================================
	//FtcKidsFinishedOpen()
	//
	//Desciption: the door opens the rest of the way
	//	base off of the first 2's death
	//============================================================================
	void FtcKidsFinishedOpen() {
		TimeTweak( $ftcKidsBlastDoor, 2.5, 0.25, 3 );
		$ftcKidsBlastDoor.move( UP, 30 );
	}
	//============================================================================
	//FtcKidsFinished2()
	//
	//Desciption: ok, it's really done now...you can leave
	//============================================================================
	void FtcKidsFinished2() {
		thread Light_FadeLocal( $ftcKids_Intro5Light1, 		6, 0.5, 1, 0, 24 );
		thread Light_FadeLocal( $ftcKids_Intro5Light2, 		6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightPatch,	6, 0.5, 1, 0, 24 );
		thread Parm_FadeLocal( $ftcKids_Intro5LightFlare,	6, 0.5, 1, 0, 24 );
		$ftcKidsLights1Mover1Null2.setKey( "bStop", 1 );
		$ftcKidsLights1Mover2Null2.setKey( "bStop", 1 );
		$ftcKidsLights3Mover1Null1.setKey( "bStop", 1 );
		$ftcKidsLights4Mover1Null1.setKey( "bStop", 1 );
		$ftcKidsLights5Mover1Null2.setKey( "bStop", 1 );
		$ftcKidsLights5Mover2Null2.setKey( "bStop", 1 );
	}
	
	
	//============================================================================
	//============================================================================
	void FtcKidsMeatMover( entity eMeatCarrier ) {
		eMeatCarrier.time( 39 );
		eMeatCarrier.startSound( "snd_move", SND_SCRIPT_0, 1 );
	
		while ( $meatCarrier1.getIntKey( "isRunning" ) ) {
			eMeatCarrier.startSpline( $meatCarrierSpline );
			sys.wait( 39 );
		}
		eMeatCarrier.stopSound( SND_SCRIPT_0, 1 );
	}
	
	//============================================================================
	//FtcKidsMeatCarriers()
	//
	//Desciption: possibly to be replaced by a fancier system with sparks, etc.
	//============================================================================
	void FtcKidsMeatCarriers() {
		sys.trigger( $ftcKids_CrateStartSpeaker );
		sys.wait( 2 );
		sys.trigger( $ftcKids_CrateStartSpeaker );//? one of these should be something else
		sys.wait( 4 );
		$meatCarrier1.setKey( "isRunning", TRUE );
		thread FtcKidsMeatMover( $meatCarrier1 );
		sys.wait( 13 );
		thread FtcKidsMeatMover( $meatCarrier2 );
		sys.wait( 13 );
		thread FtcKidsMeatMover( $meatCarrier3 );
	}
	
	//============================================================================
	//FtcKidsSpawnerStart()
	//
	//Desciption:
	//============================================================================
	void FtcKidsSpawnerStart() {
		$ftcKidsDoor1.setKey( "locked", 1 );
		PL( "	FtcKidsSpawnerStart ran" );
		thread FtcKidsMeatCarriers();
		thread FtcKidsIntroLight2();
		sys.wait( 0.85 );
		thread FtcKidsIntroLight3();
		sys.wait( 1.1 );
		thread FtcKidsIntroLight4();
		sys.wait( 0.35 );
		thread FtcKidsIntroLight5();
		sys.trigger( $ftcKidsSpawnerStart1 );//relay
		$ftcKids_IntroShadow3.remove();
		$ftcKids_IntroShadow4.remove();
	}
	
	/*
	============================================================================
	void VistaFodderKill()
	============================================================================
	*/
	void VistaFodderKill() {
		$vistaFodderPipeHit.On();
		$vistaFodder.kill();
		sys.wait( 0.1 );
		sys.trigger( $vistaFodderForcefield );//mf
		sys.wait( 1.0 );
		$vistaFodderPipeHit2.On();
	}
	
	/*
	============================================================================
	void VistaFodderRun()
	============================================================================
	*/
	void VistaFodderRun() {
		$vistaFodder.startSound( "snd_chatter", SND_CHANNEL_ANY, 1 );
		sys.wait( 2 );
		sys.trigger( $vistaFodder );
		$vistaFodder.startSound( "snd_sight", SND_CHANNEL_ANY, 1 );
	}
	
	/*
	============================================================================
	void VistaFodderPlaneTeleportFX()
	============================================================================
	*/
	void VistaFodderPlaneTeleportFX() {
		$vistaPlaneTeleSpeaker.On();
		sys.trigger( $vistaPlaneTeleFX );
		$vistaPlaneTeleCone5.show();
		thread Parm_FadeLocal( $vistaPlaneTeleCone5, 5, 1.5, 0, 1, 24 );
		$vistaPlaneTeleLight.On();
		thread Light_FadeColor( $vistaPlaneTeleLight, 1.5, '0 0 0', $vistaPlaneTeleLight.getVectorKey( "_color" ), 24 );
		$vistaPlaneTeleCone1.show();
		thread  Parm_FadeColorLocal( $vistaPlaneTeleCone1, 0.5, '0 0 0', $vistaPlaneTeleCone1.getVectorKey( "_color" ), 24 );
		sys.wait( 0.25 );
		$vistaPlaneTeleCone2.show();
		thread  Parm_FadeColorLocal( $vistaPlaneTeleCone2, 0.5, '0 0 0', $vistaPlaneTeleCone2.getVectorKey( "_color" ), 24 );
		sys.wait( 0.25 );
		$vistaPlaneTeleCone3.show();
		thread  Parm_FadeColorLocal( $vistaPlaneTeleCone3, 0.5, '0 0 0', $vistaPlaneTeleCone3.getVectorKey( "_color" ), 24 );
		sys.wait( 0.25 );
		$vistaPlaneTeleCone4.show();
		thread  Parm_FadeColorLocal( $vistaPlaneTeleCone4, 0.5, '0 0 0', $vistaPlaneTeleCone4.getVectorKey( "_color" ), 24 );
		
		sys.wait( 3.5 );
		thread Parm_FadeLocal( $vistaPlaneTeleCone5, 5, 1.5, 1, 0, 24 );
		thread Light_FadeColor( $vistaPlaneTeleLight, 4, $vistaPlaneTeleLight.getVectorKey( "_color" ), '0 0 0', 24 );
		thread Parm_FadeColorLocal( $vistaPlaneTeleCone1, 1, $vistaPlaneTeleCone1.getVectorKey( "_color" ), '0 0 0', 24 );
		sys.wait( 0.1 );
		thread Parm_FadeColorLocal( $vistaPlaneTeleCone2, 1, $vistaPlaneTeleCone2.getVectorKey( "_color" ), '0 0 0', 24 );
		sys.wait( 0.1 );
		thread Parm_FadeColorLocal( $vistaPlaneTeleCone3, 1, $vistaPlaneTeleCone3.getVectorKey( "_color" ), '0 0 0', 24 );
		sys.wait( 0.1 );
		thread Parm_FadeColorLocal( $vistaPlaneTeleCone4, 1.5, $vistaPlaneTeleCone4.getVectorKey( "_color" ), '0 0 0', 24 );
		sys.wait( 5 );
		$vistaPlaneTeleLight.Off();
		$vistaPlaneTeleCone1.hide();
		$vistaPlaneTeleCone2.hide();
		$vistaPlaneTeleCone3.hide();
		$vistaPlaneTeleCone4.hide();
		$vistaPlaneTeleCone5.hide();
	}
	
	/*
	============================================================================
	void VistaPlaneExplode()
	============================================================================
	*/
	void VistaPlaneExplode() {
		$vistaPlaneCrashSpeaker.On();
		$vistaPlaneRadio.Off();
		sys.trigger( $vistaPlaneEngineFire );
		$vistaPlaneEngineFireLight.On();
		sys.trigger( $vistaPlaneTailSpark );
		
		thread Light_FadeColor( $vistaPlaneExplodeLight, 0.05, '0 0 0', $vistaPlaneExplodeLight.getVectorKey( "_color" ), 16 );
		$vistaPlaneExplodeLight.On();
		sys.wait( 0.1 );
		thread Light_FadeColor( $vistaPlaneExplodeLight, 3, $vistaPlaneExplodeLight.getVectorKey( "_color" ), '0 0 0', 16 );
		sys.wait( 3.1 );
		$vistaPlaneExplodeLight.Off();		
	}
	
	/*
	============================================================================
	void VistaPlaneCrash()
	============================================================================
	*/
	void VistaPlaneCrash() {
		$ftcPlane.setAngles( '0 102 0' );
		
		thread VistaFodderPlaneTeleportFX();
			
		sys.wait( 2 );
		sys.trigger( $vistaHunter1 );
		$vistaHunter1.startSound( "snd_chatter", SND_CHANNEL_ANY, 1 );
		
		$ftcPlane.setShaderParm( 4, -sys.getTime() );
		$ftcPlane.setShaderParm( 5, 1 );
		$ftcPlane.show();
		$vistaPlaneRadio.On();
		$ftcPlane.startSound( "snd_fly", SND_CHANNEL_ANY, 1 );
		$ftcPlane.startSound( "snd_fly_rumble", SND_CHANNEL_ANY, 1 );
			
		TimeTweak( $ftcPlaneCtrlP, 0, 0, 12 );
		$ftcPlaneCtrlP.startSpline( $ftcPlaneSpline );
		sys.wait( 1.0 );
			
		TimeTweak( $ftcPlane, 2.5, 2.5, 4.0 );
		$ftcPlane.rotateOnce( '5 -2.5 -55' );
		sys.wait( 0.6 );
		
		sys.wait( 0.65 );
		
		sys.trigger( $vistaTower1Speaker );
		sys.trigger( $vistaTower1Sparks );
		
		$vistaTower1Piece4.hide();
		$vistaTower1Piece4b.show();
		sys.wait( 0.2 );
		
		sys.trigger( $vistaPlaneEngineFireStart );
		sys.trigger( $vistaPlaneEngineFire );
		$vistaPlaneEngineFireLight.On();
		
		sys.wait( 0.3 );
		$vistaShuttle2ActivateSpeaker.On();
		$vistaShuttle2.startSound( "snd_fly", SND_CHANNEL_ANY, 1 );
		$ftcPlane.startSound( "snd_flyby", SND_CHANNEL_ANY, 1 );
		sys.wait( 0.5 );
		$vistaShuttleActivateSpeaker.On();
		$vistaShuttle.startSound( "snd_fly", SND_CHANNEL_ANY, 1 );
		
		$vistaShuttle.show();
		$vistaShuttleThruster.show();
		sys.trigger( $vistaShuttleFX );
		TimeTweak( $vistaShuttle, 5, 2, 16 );
		$vistaShuttle.startSpline( $vistaShuttleSpline );
		
		$vistaShuttle2.show();
		$vistaShuttle2Thruster.show();
		sys.trigger( $vistaShuttle2FX );
		TimeTweak( $vistaShuttle2, 3.25, 2, 16 );
		$vistaShuttle2.startSpline( $vistaShuttle2Spline );
		
		sys.wait( 1 );
		sys.trigger( $vistaPlaneEngineFirePop );
		sys.trigger( $vistaPlaneEngineFirePopSpeaker );
		
		TimeTweak( $ftcPlane, 2, 2, 5.5 );
		$ftcPlane.rotateOnce( '-5 5 120' );	
		
		$vistaShuttle3.show();
		$vistaShuttle3Thruster.show();
		sys.trigger( $vistaShuttle3FX );
		TimeTweak( $vistaShuttle3, 3.25, 2, 25 );
		$vistaShuttle3.startSpline( $vistaShuttle3Spline );
		
		sys.wait( 2.75 );
		
		sys.trigger( $vistaPlaneTailSpark );
//		sys.trigger( $vistaPlaneTailSpeaker );//FIX ME : missing speaker :plane_tail_catwalk?
		
		sys.wait( 4.5 );
		thread VistaPlaneExplode();
	}
	
	/*
	============================================================================
	void VistaElevatorMove()
	============================================================================
	*/
	void VistaElevatorMove() {
		waitForLivingPlayer();
		$player1.dialogStart( TRUE, FALSE, FALSE );//bDisallowPlayerDeath
		$vistaElevator.startSound( "snd_start", SND_SCRIPT_0, 1 );
		$vistaElevator.startSound( "snd_moving", SND_SCRIPT_1, 1 );
		$ftcEleBeamSpeaker.On();
		$ftcEleBeamTouchSpeakerTrigger.enable();
		sys.trigger( $ftcEleBeam );
		sys.trigger( $ftcEleBeamClip );
	
		TimeTweak( $vistaElevator, 1, 2, 32 );
		$vistaElevator.move( UP, 912 );
		
		sys.wait( 30 );
		TimeTweak( $vistaElevatorCtrlP, 2, 2, 32 );
		$vistaElevatorCtrlP.move( UP, 632 );
		sys.wait( 30 );
		TimeTweak( $vistaElevator, 11, 4, 15 );
		$vistaElevator.move( UP, 704 );

		sys.waitFor( $vistaElevator );
		$vistaElevator.unbind();
		if ( $vistaElevator.getOrigin() != '-4640 -184 1224' ) {//safety
			PL( "readjusting elevator..." );
			TimeTweak( $vistaElevator, 2, 2, 10 );
			$vistaElevator.moveToPos( '-4640 -184 1224' );
			sys.waitFor( $vistaElevator );
		}

		$ftcEleBeamSpeaker.Off();
		$ftcEleBeamTouchSpeakerTrigger.disable();
		sys.trigger( $ftcEleBeam );
		sys.trigger( $ftcEleBeamClip );
		$vistaElevator.stopSound( SND_SCRIPT_1, 1 );
		$vistaElevator.startSound( "snd_stopping", SND_SCRIPT_0, 1 );
		$player1.dialogStop();
	}
	
	/*
	============================================================================
	void ElevatorSparkRun()
	============================================================================
	*/
	void ElevatorSparkRun() {
		while ( true ) {
			sys.trigger( $vistaElevatorSparkSpeaker );
			if ( int( sys.random( 2 ) ) ) {
				sys.trigger( $vistaElevatorSpark1 );
				$vistaElevatorSpark1Light.On();
				sys.wait( 0.1 );
				$vistaElevatorSpark1Light.Off();			
			}
			else {
				sys.trigger( $vistaElevatorSpark2 );
				$vistaElevatorSpark2Light.On();
				sys.wait( 0.1 );
				$vistaElevatorSpark2Light.Off();	
			}
			sys.wait( 1.5 + sys.random( 1 ) );
			sys.waitPVS( $vistaElevatorSpark1 );
		}
	}
	
	/*
	============================================================================
	void SurpriseAnimFadeCycle()
	============================================================================
	*/
	void SurpriseAnimFadeCycle( string prefix, float fadeMultiplier1, float fadeMultiplier2 ) {
		entity machine = sys.getEntity( prefix ),
			   light1 = sys.getEntity( prefix + "Light1" ),
			   light2 = sys.getEntity( prefix + "Light2" ),
			   emitter1 = sys.getEntity( prefix + "Emitter1" ),
			   emitter2 = sys.getEntity( prefix + "Emitter2" ),
			   bulb1 = sys.getEntity( prefix + "Bulb1" ),
			   bulb2 = sys.getEntity( prefix + "Bulb2" );
		
		vector machineColor = machine.getVectorKey( "_color" ),
			   light1Color = light1.getVectorKey( "_color" ),
			   light2Color = light2.getVectorKey( "_color" ),
			   emitter1Color = emitter1.getVectorKey( "_color" ),
			   emitter2Color = emitter2.getVectorKey( "_color" ),
			   bulb1Color = bulb1.getVectorKey( "_color" ),
			   bulb2Color = bulb1.getVectorKey( "_color" );
			   
		thread Parm_FadeColorLocal( machine,  0.05, machineColor * fadeMultiplier1,  machineColor * fadeMultiplier2,  16 );
		thread Light_FadeColor( 	light1,   0.05, light1Color * fadeMultiplier1,   light1Color * fadeMultiplier2,   16 );
		thread Light_FadeColor( 	light2,   0.05, light2Color * fadeMultiplier1,   light2Color * fadeMultiplier2,   16 );
		thread Parm_FadeColorLocal( emitter1, 0.05, emitter1Color * fadeMultiplier1, emitter1Color * fadeMultiplier2, 16 );
		thread Parm_FadeColorLocal( emitter2, 0.05, emitter2Color * fadeMultiplier1, emitter2Color * fadeMultiplier2, 16 );
		thread Parm_FadeColorLocal( bulb1,    0.05, bulb1Color * fadeMultiplier1,    bulb1Color * fadeMultiplier2,    16 );
		thread Parm_FadeColorLocal( bulb2,    0.05, bulb2Color * fadeMultiplier1,    bulb2Color * fadeMultiplier2,    16 );
	}
	
	/*
	============================================================================
	void SurpriseAnimFadeMachine()
	============================================================================
	*/
	void SurpriseAnimFadeMachine( string prefix ) {		  
		thread SurpriseAnimFadeCycle( prefix, 1, 0.5 );
		sys.wait( 0.06 );
		thread SurpriseAnimFadeCycle( prefix, 0.5, 0.75 );
		sys.wait( 0.06 );
		thread SurpriseAnimFadeCycle( prefix, 0.75, 0.1 );
		sys.wait( 0.5 );
		thread SurpriseAnimFadeCycle( prefix, 0.1, 1 );
	}
	
	/*
	============================================================================
	void SurpriseAnimPlay()
	============================================================================
	*/
	void SurpriseAnimPlay() {
		sys.trigger( $supriseAnim );
		
		TimeTweak( $ftcHallGirlGiggleSpeakerCtrl, 0, 0, 3.5 );//moving laughter for the girl
		$ftcHallGirlGiggleSpeakerCtrl.move( SOUTH, 672 );
		sys.trigger( $ftcHallGirlGiggleSpeaker );
	
		sys.wait( 0.4 );
		thread SurpriseAnimFadeMachine( "surpriseMachine1" );
		sys.wait( 0.5 );
		thread SurpriseAnimFadeMachine( "surpriseMachine2" );
		sys.wait( 0.5 );
		thread SurpriseAnimFadeMachine( "surpriseMachine3" );
		sys.wait( 0.5 );
		thread SurpriseAnimFadeMachine( "surpriseMachine4" );
	}
	
	/*
	============================================================================
	void CatwalkLightCycle()
	============================================================================
	*/
	void CatwalkLightCycle( entity light, entity node1, entity node2, float fspeed ) {
		light.speed( fspeed );
		light.setOrigin( node1.getOrigin() );
		light.moveTo( node2 );
		sys.waitFor( light );
	}
	
	/*
	============================================================================
	void Catwalk1LightRun()
	============================================================================
	*/
	void Catwalk1LightRun() {
		while( true ) {
			sys.waitPVS( $vistaCatwalkLight1 );
			thread CatwalkLightCycle( $vistaCatwalkLight1, $vistaCatwalkNode1, $vistaCatwalkNode2, 80 );
			sys.wait( 7 );
			thread CatwalkLightCycle( $vistaCatwalkLight2, $vistaCatwalkNode1, $vistaCatwalkNode2, 80 );
			sys.wait( 3 );
			thread CatwalkLightCycle( $vistaCatwalkLight3, $vistaCatwalkNode1, $vistaCatwalkNode2, 80 );
			sys.wait( 8 );
			thread CatwalkLightCycle( $vistaCatwalkLight4, $vistaCatwalkNode1, $vistaCatwalkNode2, 80 );
			sys.wait( 3 );
			thread CatwalkLightCycle( $vistaCatwalkLight5, $vistaCatwalkNode1, $vistaCatwalkNode2, 80 );
			sys.wait( 30 );
		}
	}
	
	/*
	============================================================================
	void Catwalk2LightRun()
	============================================================================
	*/
	void Catwalk2LightRun() {
		while( true ) {
			sys.waitPVS( $vistaCatwalk2Light1 );
			thread CatwalkLightCycle( $vistaCatwalk2Light1, $vistaCatwalk2Node1, $vistaCatwalk2Node2, 80 );
			sys.wait( 6 );
			thread CatwalkLightCycle( $vistaCatwalk2Light2, $vistaCatwalk2Node1, $vistaCatwalk2Node2, 80 );
			sys.wait( 4 );
			thread CatwalkLightCycle( $vistaCatwalk2Light3, $vistaCatwalk2Node1, $vistaCatwalk2Node2, 80 );
			sys.wait( 7 );
			thread CatwalkLightCycle( $vistaCatwalk2Light4, $vistaCatwalk2Node1, $vistaCatwalk2Node2, 80 );
			sys.wait( 5 );
			thread CatwalkLightCycle( $vistaCatwalk2Light5, $vistaCatwalk2Node1, $vistaCatwalk2Node2,  80 );
			sys.wait( 30 );
		}
	}
	
	//============================================================================
	//void WorkerSlideThread()
	//============================================================================
	void WorkerSlideThread() {
		$ftdMutilatedWorker1.slideTo( $ftbPickup2SlideTo.getOrigin(), 3.2 );
	}
	
	//============================================================================
	//void WorkerSlide()
	//============================================================================
	void WorkerSlide() {
		thread WorkerSlideThread();
	}
	
	//============================================================================
	//void MutilatedWorkerSetup()
	//============================================================================
	void MutilatedWorkerSetup() {
		thread map_feedingtowerb::WorkerCanSpawn( $ftbWorkerCan3Pickup );
		
		$ftbDrop2Source1.setColor( 0, 0, 0 );
		$ftbDrop2Source2.setColor( 0, 0, 0 );
		$ftbDrop2Flare1.setColor( 0, 0, 0 );
		$ftbDrop2Flare2.setColor( 0, 0, 0 );
		$ftbDrop2FX1.setColor( 0, 0, 0 );
		$ftbDrop2FX2.setColor( 0, 0, 0 );
		$ftbDrop2Cone.setColor( 0, 0, 0 );
	}
	
	//============================================================================
	//============================================================================
	void SlabSpeakerRandom( entity eSpeaker, float fTime ) {
		float n = 1;
		float x;
		
		sys.trigger( eSpeaker );
		sys.wait( fTime );
		while( TRUE ) {
			x = sys.random( n );
			if ( x < 0.75 ) {
				sys.trigger( eSpeaker );
			}
			sys.wait( fTime );
		}
	}

	//============================================================================
	//SlabJennySighting()
	//============================================================================
	void SlabJennySighting() {
		entity eJenny, eJennyHead;
		waitForLivingPlayer();
		$player1.dialogStart( TRUE, TRUE, FALSE );
		
		thread SlabNPCStartMove( $fmftcSlab4_1Relay );
		thread SlabNPCStartMove( $fmftcSlab4_2Relay );
		sys.waitFrame();
		//dialog
		eJenny = sys.getEntity( $fmftcSlab4_1Relay.getKey( "npc" ) );
		eJennyHead = eJenny.getHead();
		//JEN	Tommy! Oh my God, help me! Please!	uses facial anims
		eJenny.playAnim( ANIMCHANNEL_HEAD, "jn_feedingc_tommyoh" );
		sys.waitForSilence( eJennyHead, 0 );
		$player1.startSoundShader( "ftb_tom_jenonslab_04", SND_CHANNEL_VOICE );
		sys.waitForSilence( $player1, 0.5 );
		//JEN	Tommy! Don't let them take me!
		eJenny.playAnim( ANIMCHANNEL_HEAD, "jn_feedingc_tommydont" );
		sys.waitForSilence( eJennyHead, 3 );
		//JEN	You've got to help me!
		eJenny.playAnim( ANIMCHANNEL_HEAD, "jn_feedingc_youvegot" );
		sys.waitForSilence( eJennyHead, 3 );
		//JEN	Where are they taking me? Oh God, help!
		eJenny.playAnim( ANIMCHANNEL_HEAD, "jn_feedingc_whereare" );
		$player1.dialogStop();
	}
	
	//============================================================================
	//Underwear_WallPeer()
	//============================================================================
	void Underwear_WallPeer() {
		sys.trigger( $underwearPrePlane );
		sys.waitFrame();
		while ( $underwearPrePlane_Relay.getIntKey( "bInterupted" ) == FALSE ) {
			if ( $underwearPrePlane_Relay.getIntKey( "bInterupted" ) == FALSE ) {
				PlayAnim_Blend( $underwearPrePlane, ANIMCHANNEL_LEGS, "wallpeer", 6 );
			}
			sys.wait( $underwearPrePlane.animLength( ANIMCHANNEL_LEGS, "wallpeer" ) );
			if ( $underwearPrePlane_Relay.getIntKey( "bInterupted" ) == FALSE ) {
				PlayCycle_Blend( $underwearPrePlane, ANIMCHANNEL_LEGS, "wallpeer_idle", 6 );
			}
			sys.wait( sys.random( 2 ) + 1.25 );
		}
	}
	
	//============================================================================
	//============================================================================
	void Underwear_WallDead() {
		$underwearPrePlane_Relay.setKey( "bInterupted", TRUE );
		$underwearPrePlane_Relay.setKey( "bDead", TRUE );
	}
	
	//============================================================================
	//Underwear_WallPeer()
	//============================================================================
	void Underwear_WallGetAway() {
		$underwearPrePlane_Relay.setKey( "bInterupted", TRUE );
		if ( $underwearPrePlane_Relay.getIntKey( "bDead" ) == FALSE ) {
			PlayAnim_Blend( $underwearPrePlane, ANIMCHANNEL_HEAD, "getaway", 6 );
			PlayAnim_Blend( $underwearPrePlane, ANIMCHANNEL_LEGS, "wallpeer_ga", 6 );
			sys.wait( $underwearPrePlane.animLength( ANIMCHANNEL_LEGS, "wallpeer_ga" ) );
			if ( $underwearPrePlane_Relay.getIntKey( "bDead" ) == FALSE ) {
				PlayCycle_Blend( $underwearPrePlane, ANIMCHANNEL_LEGS, "wallpeer_idle", 6 );
			}
		}
	}
	
	
	//============================================================================
	//============================================================================
	void Underwear_ArtCornerDead() {
		$underwearArtCorner_Relay.setKey( "bDead", TRUE );
	}
	
	//============================================================================
	//Underwear_ArtCorner()
	//============================================================================
	void Underwear_ArtCorner() {
		if ( $underwearArtCorner_Relay.getIntKey( "bDead" ) == FALSE ) {
//			$underwearArtCorner.lookAt( $player1, 1 );
			PlayAnim_Blend( $underwearArtCorner, ANIMCHANNEL_LEGS, "idle_shh", 15 );
			sys.wait( 1.833 );
			if ( $underwearArtCorner_Relay.getIntKey( "bDead" ) == FALSE ) {
				PlayAnim_Blend( $underwearArtCorner, ANIMCHANNEL_HEAD, "hush", 6 );
				sys.wait( $underwearArtCorner.animLength( ANIMCHANNEL_LEGS, "idle_shh" ) - 1.833 );
			}
		}
		if ( $underwearArtCorner_Relay.getIntKey( "bDead" ) == FALSE ) {
			PlayCycle_Blend( $underwearArtCorner, ANIMCHANNEL_LEGS, "idle", 6 );
		}
	}

	//============================================================================
	//FTC_SphereVoice_LevelStart()
	//============================================================================
	void FTC_SphereVoice_LevelStart() {
		SphereVoice_Start();
		sys.trigger( $speaker_spherevoice_1 );
		sys.trigger( $trigger_relay_13 );
		sys.wait( 12.5 + 7 );//delays + last sample
		SphereVoice_Stop();
		sys.trigger( $podspawner_intro );
		FTC_Music_Ambient1();
	}

	//============================================================================
	//FTC_SphereVoice_Wraith()
	//============================================================================
	void FTC_SphereVoice_Wraith() {
		SphereVoice_Start();
		sys.trigger( $feedingtowerc_spherevoice_wraithcomment_speaker );
		sys.wait( 7.5 );
		SphereVoice_Stop();
	}
	
	//============================================================================
	//FTD_SphereVoice_LevelEnd()
	//============================================================================
	void FTD_SphereVoice_LevelEnd() {
		SphereVoice_Start();
		sys.wait( 1.25 );
		sys.trigger( $speaker_spherevoice_1 );
		sys.wait( 4.25 );
		SphereVoice_Stop();
	}
	
	//============================================================================
	//============================================================================
	void Conversation_HiderElevator() {
//		sys.wait( 0.5 );
		$elevator_hider_watching.lookAt( $player1, -1 );
		$elevator_hider_working.playAnim( ANIMCHANNEL_HEAD, "elev_thinkit" );
		sys.waitForSilence( $elevator_hider_working.getHead(), 1 );
		$elevator_hider_watching.playAnim( ANIMCHANNEL_HEAD, "elev_itwould" );
	}

	//============================================================================
	//void main_FeedingTowerD()
	//============================================================================
	void main_FeedingTowerD() {
		MutilatedWorkerSetup();
		thread Catwalk1LightRun();
		thread Catwalk2LightRun();
		
		TimeTweak( $ftcKidsBlastDoor, 0, 0, 0.1 );
		$ftcKidsBlastDoor.move( UP, 160 );
		
		thread ElevatorSparkRun();
	}

	//============================================================================
	//void main()
	//============================================================================
	void main() {
		MutilatedWorkerSetup();
		thread SlabSplitterInit();
		thread MoveLight();
//		thread SphereBirthLightCycle();
		
		TimeTweak( $ftcWallWalkMover, 2, 2, 12 );
	}
	
} // end namespace