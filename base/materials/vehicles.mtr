// vehicles.mtr
// all vehicle related materials

//-----------------------------------------------------------------------------
// shuttle materials
//-----------------------------------------------------------------------------
// shuttle parms:
//	parm4:	time offset for start of growth
//	parm5:	direction of growth
//	parm6:	time offset for right cannon fire (obsolete)
//	parm7:	time offset for left cannon fire (obsolete)
//	parm6:	direction of headlight fade (0=out, 1=in)
//	parm7:	time offset for start of headlight fade

// shuttle headlight parms:
//	parm4:	time offset for start of fade in/out
//	parm6:	direction of fade (0=out, 1=in)

// shuttle domelight parms:
//	parm4:	time offset for start of fade
//	parm7:	whether shuttle is dying (0=normal, 1=dying)


lights/shuttleheadlight
{
//	noshadows

	lightfalloffimage	makeintensity( lights/shuttleheadlight_f )
	{	if (parm6 != 0)		// fade in
		map lights/shuttleheadlight
		color	parm0 * headlightpulse[time*0.1] * growin[(time+parm4)*2],
				parm1 * headlightpulse[time*0.1] * growin[(time+parm4)*2],
				parm2 * headlightpulse[time*0.1] * growin[(time+parm4)*2],
				parm3
		zeroclamp
	}
	{	if (parm6 == 0)		// fade out
		map lights/shuttleheadlight
		color	parm0 * headlightpulse[time*0.1] * growout[(time+parm4)*2],
				parm1 * headlightpulse[time*0.1] * growout[(time+parm4)*2],
				parm2 * headlightpulse[time*0.1] * growout[(time+parm4)*2],
				parm3
		zeroclamp
	}
}

lights/shuttledomelight
{
	noshadows
//	spectrum 1
	lightfalloffimage	makeintensity( lights/squarelight1a )	// this will also be the falloff for any
																	// point light shaders that don't specify one
	{	if (parm7 == 0)
		map lights/shuttleheadlight
		color	parm0 * ( growin[(time+parm4) * 0.5]),
				parm1 * ( growin[(time+parm4) * 0.5]),
				parm2 * ( growin[(time+parm4) * 0.5]),
				parm3
		zeroclamp
	}
	{	if (parm7 != 0)		// set when shuttle is dying
		map lights/shuttleheadlight
		red		0.5 + domeflash[time]
		green	0
		blue	0
		zeroclamp
	}
}

// beam for headlight, visible externally
models/mapobjects/shuttle/headlight
{
	translucent
	noselfshadow
	noshadows
	nonsolid
	nooverlays
	twosided
	deform tube
	{	if (parm6 != 0)		// fade in
		blend add
		map models/mapobjects/shuttle/headlightbeam
		red		1.0 * headlightpulse[time*0.03] * growin[(time+parm7)*2]
		green	1.0 * headlightpulse[time*0.03] * growin[(time+parm7)*2]
		blue	1.0 * headlightpulse[time*0.03] * growin[(time+parm7)*2]
	}
	{	if (parm6 == 0)		// fade out
		blend add
		map models/mapobjects/shuttle/headlightbeam
		red		1.0 * headlightpulse[time*0.03] * growout[(time+parm7)*2]
		green	1.0 * headlightpulse[time*0.03] * growout[(time+parm7)*2]
		blue	1.0 * headlightpulse[time*0.03] * growout[(time+parm7)*2]
	}
	{	if (parm6 != 0)		// fade in
		blend add
		map models/mapobjects/shuttle/headlightbeam2
		red		1.0 * headlightpulse[time*1.1] * growin[(time+parm7)*2]
		green	0.8 * headlightpulse[time*1.1] * growin[(time+parm7)*2]
		blue	0.4 * headlightpulse[time*1.1] * growin[(time+parm7)*2]
		glowstage
		clamp
	}
	{	if (parm6 == 0)		// fade out
		blend add
		map models/mapobjects/shuttle/headlightbeam2
		red		1.0 * headlightpulse[time*1.1] * growout[(time+parm7)*2]
		green	0.8 * headlightpulse[time*1.1] * growout[(time+parm7)*2]
		blue	0.4 * headlightpulse[time*1.1] * growout[(time+parm7)*2]
		glowstage
		clamp
	}
	{	if (parm6 != 0)		// fade in
		blend add
		map models/mapobjects/shuttle/headlightbeam3
		red		0.5 * (headlightpulse [time*1.2] + 0.2) * growin[(time+parm7)*2]
		green	0.4 * (headlightpulse [time*1.2] + 0.2) * growin[(time+parm7)*2]
		blue	0.2 * (headlightpulse [time*1.2] + 0.2) * growin[(time+parm7)*2]
		glowstage
		clamp
	}
	{	if (parm6 == 0)		// fade out
		blend add
		map models/mapobjects/shuttle/headlightbeam3
		red		0.5 * (headlightpulse [time*1.2] + 0.2) * growout[(time+parm7)*2]
		green	0.4 * (headlightpulse [time*1.2] + 0.2) * growout[(time+parm7)*2]
		blue	0.2 * (headlightpulse [time*1.2] + 0.2) * growout[(time+parm7)*2]
		glowstage
		clamp
	}

}

// flare for headlight, visible externally
models/mapobjects/shuttle/headlightflare
{
	translucent
	noselfshadow
	nonsolid
	nooverlays
	noshadows
	twosided
	deform sprite
	{	if (parm6 != 0)		// fade in
		blend add
		map models/mapobjects/shuttle/headlightflare
		red		1.9 * headlightpulse[time*0.1] * growin[(time+parm7)*2]
		green	1.6 * headlightpulse[time*0.1] * growin[(time+parm7)*2]
		blue	1.2 * headlightpulse[time*0.1] * growin[(time+parm7)*2]
	}
	{	if (parm6 == 0)		// fade out
		blend add
		map models/mapobjects/shuttle/headlightflare
		red		1.9 * headlightpulse[time*0.1] * growout[(time+parm7)*2]
		green	1.6 * headlightpulse[time*0.1] * growout[(time+parm7)*2]
		blue	1.2 * headlightpulse[time*0.1] * growout[(time+parm7)*2]
	}

}

table cockpitburnin { clamp { 1, -1 } }
table cockpitburnout { clamp { -1, 1 } }
table testingburnin { { -1, 1 } }

// interior model - cockpit and hands
models/mapobjects/shuttle/shuttlecockpit
{
	noselfshadow
	noshadows
	renderbump  -size 1024 1024 -aa 1 -colormap models/mapobjects/shuttle/shuttlecockpit_local models/mapobjects/shuttle/shuttlecockpithi.lwo

	diffusemap	models/mapobjects/shuttle/shuttlecockpit
	bumpmap		models/mapobjects/shuttle/shuttlecockpit_local
	specularmap	models/mapobjects/shuttle/shuttlecockpit_s

/*	Screen space burnout (testing)
	{
		maskcolor
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (testingburnin[time*0.4] * 1.5) + 0.06
	}
	{
		privatePolygonOffset	-1		// stage-only polygon offset
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (testingburnin[time*0.4] * 1.5)
		color		0.62, 0.21, 0.85, 1
		glowStage
	}
*/

/*	Final burnouts
*/
	{	if (parm5 > 0 && (time+parm4 < 3))			// Fade in geometry
		maskcolor
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (cockpitburnin[(parm4+time)*0.4] * 1.5) + 0.06
	}
	{	if (parm5 > 0 && (time+parm4 < 3))			// Fade in highlight
		privatePolygonOffset -1
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (cockpitburnin[(parm4+time)*0.4] * 1.5)
		color		1.00, 0.65, 0.40, 1
		glowStage
	}

	{	if (parm5 < 0 && (time+parm4 < 3))			// Fade out geometry
		maskcolor
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (cockpitburnout[(parm4+time)*0.4] * 1.5) + 0.06
	}
	{	if (parm5 < 0 && (time+parm4 < 3))			// Fade out highlight
		privatePolygonOffset	-1
		map makealpha(models/mapobjects/shuttle/cockpitgrowth)
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest (cockpitburnout[(parm4+time)*0.4] * 1.5)
		color		1.00, 0.65, 0.40, 1
		glowStage
	}
}

models/mapobjects/shuttle/shuttlecontrolsphere
{
	noselfshadow
	noshadows

	forceoverlays

	renderbump  -size 1024 1024 -aa 1 -colormap models/mapobjects/shuttle/shuttlecockpit_local models/mapobjects/shuttle/shuttlecockpithi.lwo

//	diffusemap	models/mapobjects/shuttle/shuttlecockpit
	{	if ( parm5 > 0 )			// fade out
		blend diffusemap
		map models/mapobjects/shuttle/shuttlecockpit
		alphatest growin[ time + parm4 ]
	}
	{
		if ( parm5 < 0 )			// fade in
		blend diffusemap
		map models/mapobjects/shuttle/shuttlecockpit
		alphatest growout[ time + parm4 ]
	}
	bumpmap		models/mapobjects/shuttle/shuttlecockpit_local
	specularmap	models/mapobjects/shuttle/shuttlecockpit_s
}

models/mapobjects/shuttle/railshuttlecontrolsphere
{
	noselfshadow
	noshadows

	forceoverlays

	renderbump  -size 1024 1024 -aa 1 -colormap models/mapobjects/shuttle/shuttlecockpit_local models/mapobjects/shuttle/shuttlecockpithi.lwo

//	diffusemap	models/mapobjects/shuttle/shuttlecockpit
	{	if ( parm2 > 0 )			// fade out
		blend diffusemap
		map models/mapobjects/shuttle/shuttlecockpit
		alphatest growin[ time + parm3 ]
	}
	{
		if ( parm2 < 0 )			// fade in
		blend diffusemap
		map models/mapobjects/shuttle/shuttlecockpit
		alphatest growout[ time + parm3 ]
	}
	bumpmap		models/mapobjects/shuttle/shuttlecockpit_local
	specularmap	models/mapobjects/shuttle/shuttlecockpit_s
}

// thruster model - flamejet thrusters
models/mapobjects/shuttle/thruster
{
//cjr	forceshadows
	noshadows // cjr
	noselfshadow
	nooverlays

	qer_editorimage models/mapobjects/shuttle/thruster
	{
		blend add
		map	models/mapobjects/shuttle/thruster
		rgb	random [ time * 1 ]
		scroll 6 *  time * 6, 1 * thruster [time * 6]
//		glowStage
	}
}

// thruster model, inner cone
models/mapobjects/shuttle/thruster_inside
{
	noselfshadow
	noshadows
	twosided
	nooverlays

	qer_editorimage models/mapobjects/shuttle/thruster_inside
	{
		blend add
		map	models/mapobjects/shuttle/thruster_inside
		rgb	random [ time * 1 ]
		scroll 0 *  time * 6, 1 * thruster_inside [time * 6]
		glowStage
	}
}

table shuttlegui { clamp { 0, 0.9 } }

// shuttle console model
models/mapobjects/shuttlegui/shuttlegui
{
	noshadows // cjr
	noselfshadow
	matter_metal

	forceoverlays

	renderbump  -size 1024 1024 -aa 1 -trace .1  -colormap models/mapobjects/shuttlegui/shuttlegui_local models/mapobjects/shuttlegui/shuttleguihi.lwo

	// note: the alpha layer must vary between white(255,255,255) and near black(15,15,15)
	// alpha layer values of pure black will never become opaque

	{	if ( parm5 > 0 )			// fade out
		blend diffusemap
		map models/mapobjects/shuttlegui/shuttlegui
		alphatest growin[ time + parm4 ]
	}
	{
		if ( parm5 < 0 )			// fade in
		blend diffusemap
		map models/mapobjects/shuttlegui/shuttlegui
		alphatest growout[ time + parm4 ]
	}

	bumpmap	models/mapobjects/shuttlegui/shuttlegui_local
	specularmap models/mapobjects/shuttlegui/shuttlegui_s

	// additive band to highlight growth (one for each direction)
	{	if ( (parm5 > 0) && (parm4 + time < 1) )	// fade out
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, 1 - shuttlegui[ (time+parm4) ]
		glowStage
	}
	{	if ( (parm5 < 0) && (parm4 + time < 1) )	// fade in
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, shuttlegui[ (time+parm4) ]
		glowStage
	}
}

// shuttle console model
models/mapobjects/shuttlegui/railshuttlegui
{
	noshadows // cjr
	noselfshadow
	matter_metal

	forceoverlays

	renderbump  -size 1024 1024 -aa 1 -trace .1  -colormap models/mapobjects/shuttlegui/shuttlegui_local models/mapobjects/shuttlegui/shuttleguihi.lwo

	// note: the alpha layer must vary between white(255,255,255) and near black(15,15,15)
	// alpha layer values of pure black will never become opaque

	{	if ( parm2 > 0 )			// fade out
		blend diffusemap
		map models/mapobjects/shuttlegui/shuttlegui
		alphatest growin[ time + parm3 ]
	}
	{
		if ( parm2 < 0 )			// fade in
		blend diffusemap
		map models/mapobjects/shuttlegui/shuttlegui
		alphatest growout[ time + parm3 ]
	}

	bumpmap	models/mapobjects/shuttlegui/shuttlegui_local
	specularmap models/mapobjects/shuttlegui/shuttlegui_s

	// additive band to highlight growth (one for each direction)
	{	if ( (parm2 > 0) && (parm3 + time < 1) )	// fade out
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, 1 - shuttlegui[ (time+parm3) ]
		glowStage
	}
	{	if ( (parm2 < 0) && (parm3 + time < 1) )	// fade in
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, shuttlegui[ (time+parm3) ]
		glowStage
	}
}

// exterior model
models/mapobjects/shuttle/shuttlebody
{
	noshadows // cjr
	noselfshadow
	matter_flesh

	forceoverlays

	renderbump  -size 1024 1024 -aa 1 -trace .1  -colormap models/mapobjects/shuttle/shuttlebody_local models/mapobjects/shuttle/shuttlebodyhi.lwo

	// note: the alpha layer must vary between white(255,255,255) and near black(15,15,15)
	// alpha layer values of pure black will never become opaque
	{	if ( parm5 > 0 )		// grow in
		blend diffusemap
		map models/mapobjects/shuttle/shuttlebody
		alphatest growout[ time + parm4 ]
	}
	{	// (obsolete) stage not used since shuttle body doesn't fade out
		if ( parm5 < 0 )		// grow out
		blend diffusemap
		map models/mapobjects/shuttle/shuttlebody
		alphatest growin[ time + parm4 ]
	}

	bumpmap	models/mapobjects/shuttle/shuttlebody_local
	specularmap models/mapobjects/shuttle/shuttlebody_s

	{	// additive band to highlight growth
		if (parm4 + time < 0.95)
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, (time+parm4)
		glowStage
	}
	         	{
		blend add
		map	models/mapobjects/shuttle/shuttlebody_add_02
		rgb tenstagesnap  [time * 1 + 1 / 2] - .5
	//	scroll 0 *  time * 6, 1 * thruster_inside [time * 6]
		glowStage
	}
         	{
		blend add
		map	models/mapobjects/shuttle/shuttlebody_add_01
		rgb random [ time * 0 ]
	//	scroll 0 *  time * 6, 1 * thruster_inside [time * 6]
		glowStage
	}
	 { // Scope view texture
       blend add
       map textures/sfx/monsterSniperView
       rgb flicker5 [ time * 2.5 ]
       texgen screen
	   scroll 0.5, 0.5
	   scale 0.5, 0.5
       clamp
       glowStage
       scopeView    // Only visible in the rifle scope view
	}
}

// exterior model - windshield
models/mapobjects/shuttle/shuttleglass
{
	glass_macro
	twosided
//cjr	forceshadows
	noshadows // cjr
	noselfshadow

	// since alphatest and translucency can't coexist, fade the windshield in during growth
	{
		blend add
		map models/mapobjects/shuttle/shuttlewindshield
		rgb growin[ (time + parm4) ] * 0.05		// grow the shuttle when entered
	}
	{
		blend specularmap
		map models/mapobjects/shuttle/shuttlewindshield_s
		rgb growin[ (time + parm4) ]			// grow the shuttle when entered
	}

	{	// additive band to highlight growth
		if (parm4 + time < 1)
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, (time+parm4)
	}

	{ // Scope view texture
       blend add
       map textures/sfx/monsterSniperView
       rgb flicker5 [ time * 2.5 ]
       texgen screen
	   scroll 0.5, 0.5
	   scale 0.5, 0.5
       clamp
       glowStage
       scopeView    // Only visible in the rifle scope view
   }
}

models/mapobjects/shuttle/shuttleglass_opaque
{
	qer_editorimage textures/roadhouse/brass_01_d
	matter_glass
	noshadows // cjr
	noselfshadow

	bumpmap	models/mapobjects/shuttle/shuttlebody_local
	{	if ( parm5 > 0 )		// grow in
		blend diffusemap
		map models/mapobjects/shuttle/shuttlebody
		rgb 0.25
		alphatest growout[ time + parm4 ]
	}
	{
		blend specularmap
		map models/mapobjects/shuttle/shuttlebody_s
		rgb growin[ (time + parm4) ] 			// grow the shuttle when entered
	}
	{	// additive band to highlight growth
		if (parm4 + time < 1)
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, (time+parm4)
	}

	{ // Scope view texture
       blend add
       map textures/sfx/monsterSniperView
       rgb flicker5 [ time * 2.5 ]
       texgen screen
	   scroll 0.5, 0.5
	   scale 0.5, 0.5
       clamp
       glowStage
       scopeView    // Only visible in the rifle scope view
   }
}


// exterior model - cockpit interior
models/mapobjects/shuttle/shuttleinterior
{
	noselfshadow
	noshadows
	nooverlays
	matter_flesh

	{	// grow in
		blend diffusemap
		map models/mapobjects/shuttle/shuttleinterior
		alphatest growout[ time + parm4 ]
	}

	{	// additive band to highlight growth
		if (parm4 + time < 1)
		blend add
		map models/mapobjects/shuttle/growtheffect
		scroll 0, (time+parm4)
	}

	{ // Scope view texture
       blend add
       map textures/sfx/monsterSniperView
       rgb flicker5 [ time * 2.5 ]
       texgen screen
	   scroll 0.5, 0.5
	   scale 0.5, 0.5
       clamp
       glowStage
       scopeView    // Only visible in the rifle scope view
   }
}

models/mapobjects/shuttle/railshuttleinterior
{
	noselfshadow
	noshadows
	nooverlays

	renderbump  -size 1024 1024 -aa 1 -colormap models/mapobjects/shuttle/railshuttlecockpit_local models/mapobjects/shuttle/railshuttlecockpithi.lwo

	bumpmap 		addnormals (models/mapobjects/shuttle/railshuttlecockpit_local, heightmap (models/mapobjects/shuttle/railshuttlecockpit_h, 4))
	specularmap 	models/mapobjects/shuttle/railshuttlecockpit_s
	{
		if ( parm2 <= 0 && time + parm3 >= 1 )
		blend	diffusemap
		map		models/mapobjects/shuttle/railshuttlecockpit
		alphatest 0.5
	}
	{
		if ( parm2 > 0 && time + parm3 < 1 )
		maskColor
		map makealpha( models/mapobjects/shuttle/cockpitgrowth )
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest cockpitburnin[ ( parm4 + time ) * 0.8 ] + 0.06
	}
	{
		if ( parm2 > 0 && time + parm3 < 1 )
		privatePolygonOffset -1
		map makealpha( models/mapobjects/shuttle/cockpitgrowth )
		texgen screen
		scroll -0.5, -0.5
		scale 0.5, -0.5
		alphaTest cockpitburnin[ ( parm4 + time ) * 0.8 ]
		color		0.70, 0.45, 0.98, 1
		glowStage
	}
}

models/mapobjects/shuttle/railshuttleglass
{
	twosided
	noselfshadow
	translucent

	{
		blend diffusemap
		map models/mapobjects/shuttle/rail_shuttle_glass
		rgb parm0
	}
	{
		blend gl_one, gl_one_minus_src_color
		map models/mapobjects/shuttle/rail_shuttle_glass
		rgb parm0 * 0.2
	}
	{
		blend specularmap
		map models/mapobjects/shuttle/rail_shuttle_glass_s
		rgb parm0 * 0.5
	}
}

// ==========================================================================
// sphere brain rail shuttle
// work-in-progress

// parm4 = power level
// parm5 = fire time
// parm6 = jump-thrust distance
// parm7 = move time

table rail_hit { clamp { 1, 0.2, 0.2, 0.2, 0.2, 1 } }
table rail_move { clamp { 1, 0.3 } }
table rail_fire { clamp { 0.0, 0.1, .2, 1 } }

// background large round panel
models/mapobjects/shuttle/railshuttlegfx
{
	{
		blend add
		map models/mapobjects/shuttle/railshuttlecockpit_gfx
		rgb parm1 * rail_hit[ ( time + parm4 ) * 0.105 ]
	}
}

// small round, affected by firing
models/mapobjects/shuttle/railshuttlegfxsmall
{
	{
		blend add
		map models/mapobjects/shuttle/railshuttlecockpit_gfxsmall
		rgb parm1 * rail_fire[ ( time + parm5 ) * 0.6 ] * rail_hit[ ( time + parm4 ) * 0.105 ]
	}
}

// vertical patch on sides, affected by movement
models/mapobjects/shuttle/railshuttlegfx_add
{
	{
		blend add
		map models/mapobjects/shuttle/railshuttlecockpit_add
		rgb parm1 * rail_move[ ( time + parm7 ) * 1.1 ]
	}
}

// additive on large round panel, rotates with jumping
models/mapobjects/shuttle/railshuttlegfx_inner
{
	{
		blend add
		map models/mapobjects/shuttle/railshuttlecockpit_gfx_inner
		clamp
		//rotate time*0.1 + parm6*0.001
		rotate parm6*0.001
		rgb parm1 * rail_hit[ ( time + parm4 ) * 0.105 ]
	}
}

// ==========================================================================

// shuttle dock flare
textures/sfx/shuttledockflare
{
	qer_editorimage		textures/editor/flare
	discrete
	noshadows
	translucent
	nonsolid
	nooverlays
	deform flare 		16
	{
		blend		add
		map			_quadratic
		color		1,1,1,1
//		vertexcolor
	}
}

// shuttle dock model
models/mapobjects/shuttledock/shuttledock
{
	noselfshadow
	matter_metal

	renderbump  -size 1024 1024  -aa 1 -colormap models/mapobjects/shuttledock/shuttledock_local models/mapobjects/shuttledock/shuttledockhi.lwo
	diffusemap models/mapobjects/shuttledock/shuttledock
	bumpmap 		addnormals (models/mapobjects/shuttledock/shuttledock_local, heightmap (models/mapobjects/shuttledock/shuttledock_h, 4))
	specularmap models/mapobjects/shuttledock/shuttledock_s
	{
		blend		add
		map			models/mapobjects/shuttledock/shuttledock_add
		rgb 		(jitter1 [time * 2])
	}
	                {	// Shuttle view stage

                 blend add
		map textures/decals/shuttle_flicker_02_blue
                texgen screen
		 rgb (fade_pulse [time * .4] * 0.4)

                 scroll time * 10, time * 10.1 * ( parm7 + 10 )
                shuttleView
		glowstage
	}

                {	// Shuttle view stage

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/decals/shuttle_flicker
		texgen screen
                 rgb (fade_pulse [time * .4] * 0.2)
                scale ( forcefieldflicker[ time * 1.0 ] * .01 ) , 0.5
		scroll time * 10, time * 10.1 * ( parm7 + 10 )
		shuttleView
		glowstage
	}
}

models/mapobjects/shuttledock/shuttledockb
{
	noselfshadow
	matter_metal

//	renderbump  -size 512 512 -aa 0 -colormap models/mapobjects/shuttledock/shuttledock_local models/mapobjects/shuttledock/shuttledockhi.lwo
	diffusemap models/mapobjects/shuttledock/shuttledock_local_colo
	bumpmap	models/mapobjects/shuttledock/shuttledock_local
	//specularmap models/mapobjects/shuttledock/shuttledock_s
}

// shuttle view when going through a shuttleslingshot zone
table viewzoomtable { snap { 1, 0.98, 0.96, 0.94, 0.92, 0.9, 0.88, 0.86, 0.84, 0.82, 0.8, 0.78, 0.76, 0.74, 0.72, 0.7,
							0.68, 0.66, 0.64, 0.62, 0.6, 0.58, 0.56, 0.54, 0.52, 0.5, 0.48, 0.46, 0.44, 0.42, 0.4,
							0.38, 0.36, 0.34, 0.32, 0.3, 0.28, 0.26, 0.24, 0.22, 0.2, 0.18, 0.16, 0.14, 0.12, 0.1,
							0.08, 0.06, 0.04, 0.02, 0.01 } }

textures/sfx/shuttlespeedview
{
	noshadows
	noselfshadow

	{
		blend add
		map textures/decals/speedoverlay
		centerscale viewzoomtable[time * 2], viewzoomtable[time * 2]
		rgb 1.0 - viewzoomtable[time * 2]
	}
	{
		blend add
		map textures/decals/speedoverlay
		centerscale viewzoomtable[0.33 + time * 2], viewzoomtable[0.33 + time * 2]
		rotate 5
		rgb 1.0 - viewzoomtable[0.33 + time * 2]
	}
	{
		blend add
		map textures/decals/speedoverlay
		centerscale viewzoomtable[0.66 + time * 2], viewzoomtable[0.66 + time * 2]
		rotate 10
		rgb 1.0 - viewzoomtable[0.66 + time * 2]
	}
}


//-----------------------------------------------------------------------------
// docked gun materials
//-----------------------------------------------------------------------------

// small anchor that vehicle is tethered to
models/mapobjects/dockedgun/anchor
{
	nooverlays
	noshadows

	//todo: make a corona looking thing, only visible when dock is active

	{	if ( parm5 > 0 )			// dock active, fade in
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growin[ time + parm4 ]
	}
	{	if ( parm5 < 0 )			// dock inactive, fade out
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growout[ time + parm4 ]
	}
}

// docked gun vehicle itself (skin)
models/mapobjects/dockedgun/dockedgun
{
	translucent

	{	if ( parm5 > 0 )			// vehicle active, fade in
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growin[ time + parm4 ]
	}
	{	if ( parm5 < 0 )			// vehicle inactive, fade out
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growout[ time + parm4 ]
	}
}

// translucent shield portion of docked gun vehicle that protects the player
models/mapobjects/dockedgun/shield
{
	translucent
	nooverlays
	noshadows
	twosided

	{	if ( parm5 > 0 )			// vehicle active, fade in
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growin[ time + parm4 ] * 0.2
	}
	{	if ( parm5 < 0 )			// vehicle inactive, fade out
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growout[ time + parm4 ] * 0.2
	}
}

// the dock, made up of energy
models/mapobjects/dockedgun/dock
{
	translucent
	nooverlays
	noshadows
	twosided

	{	if ( parm5 > 0 )			// dock active, fade out
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growout[ time + parm4 ]
	}
	{	if ( parm5 < 0 )			// dock inactive, fade in
		blend blend
		map models/mapobjects/dockedgun/dock
		alpha growin[ time + parm4 ]
	}
}
