//screen overlay for whenever the sphere is talking to tommy

textures/special/spherevoice_intro
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		(random [ time * 4 ]) * .04, growIn [ ( time + parm0 ) * ( 1 / 0.5 ) ] * 0.3, .75	//blur size, blur strength, blur lerp
		fragmentparm	1		sin010 [ (time + parm0 ) * ( 1 / 0.5 ) ] * 6, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		growIn [ (time + parm0 ) * ( 1 / 1 ) ] * 3, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}

		//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.1 )

		blend add
		map textures/special/spherevoice
		centerscale 1.4, 1.4

		rgb 0.75 * sin010[ ( time + parm0 ) * ( 1 / 0.1 ) ]
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.1 )

		blend add
		map textures/special/spherevoice

		rgb 0.75 * sin010[ ( time + parm0 ) * ( 1 / 0.1 ) ]
	}

	//white edge
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time * 1 ], 1.2 * zerotoonesnap[ -0.50 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ 0.50 + time * -1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time * 1 ], 1.2 * zerotoonesnap[ 0.00 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ time * -1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time * -1 ], 1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.25 + time * 1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time * -1 ], 1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}
}

table sin010clamp { clamp {
0.000000, 0.024541, 0.049068, 0.073565, 0.098017, 0.122411, 0.146730, 0.170962,
0.195090, 0.219101, 0.242980, 0.266713, 0.290285, 0.313682, 0.336890, 0.359895,
0.382683, 0.405241, 0.427555, 0.449611, 0.471397, 0.492898, 0.514103, 0.534998,
0.555570, 0.575808, 0.595699, 0.615232, 0.634393, 0.653173, 0.671559, 0.689541,
0.707107, 0.724247, 0.740951, 0.757209, 0.773010, 0.788346, 0.803208, 0.817585,
0.831470, 0.844854, 0.857729, 0.870087, 0.881921, 0.893224, 0.903989, 0.914210,
0.923880, 0.932993, 0.941544, 0.949528, 0.956940, 0.963776, 0.970031, 0.975702,
0.980785, 0.985278, 0.989177, 0.992480, 0.995185, 0.997290, 0.998795, 0.999699,
1.000000, 0.999699, 0.998795, 0.997290, 0.995185, 0.992480, 0.989177, 0.985278,
0.980785, 0.975702, 0.970031, 0.963776, 0.956940, 0.949528, 0.941544, 0.932993,
0.923880, 0.914210, 0.903989, 0.893224, 0.881921, 0.870087, 0.857729, 0.844854,
0.831470, 0.817585, 0.803208, 0.788346, 0.773010, 0.757209, 0.740951, 0.724247,
0.707107, 0.689541, 0.671559, 0.653173, 0.634393, 0.615232, 0.595699, 0.575808,
0.555570, 0.534998, 0.514103, 0.492898, 0.471397, 0.449611, 0.427555, 0.405241,
0.382683, 0.359895, 0.336890, 0.313682, 0.290285, 0.266713, 0.242980, 0.219101,
0.195090, 0.170962, 0.146730, 0.122411, 0.098017, 0.073565, 0.049068, 0.024541,
0.000000 } }

//alternate intro

textures/special/spherevoice_intro2
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		sin010 [ (time + parm0 ) * ( 1 / 0.5 ) ] * .04, growIn [ ( time + parm0 ) * ( 1 / 0.5 ) ] * 0.3, .75	//blur size, blur strength, blur lerp
		fragmentparm	1		sin010clamp [ (time + parm0 ) * ( 0.125 + 1 / 0.25 ) ] * 10, 0			//pre scale, pre bias
		fragmentparm	2		sin010 [ (time + parm0 ) * ( 1 / -0.5 ) ] * 1				//desateration
		fragmentparm	3		sin010 [ (time + parm0 ) * ( 1 / 0.5 ) ] * 7, 0			//contrast, contrast center
		fragmentparm	4		0,0,0,0	//tint color

		fragmentparm	5		0,0,0	//post additive color
	}

			//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.1 )

		blend add
		map textures/special/spherevoice
		centerscale 1.4, 1.4

		rgb 0.75 * sin010[ ( time + parm0 ) * ( 1 / 0.1 ) ]
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.1 )

		blend add
		map textures/special/spherevoice

		rgb 0.75 * sin010[ ( time + parm0 ) * ( 1 / 0.1 ) ]
	}

	//white edge
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time * 1 ], 1.2 * zerotoonesnap[ -0.50 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ 0.50 + time * -1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time * 1 ], 1.2 * zerotoonesnap[ 0.00 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ time * -1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time * -1 ], 1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.25 + time * 1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time * -1 ], 1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}
}

textures/special/spherevoice_loop
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		(random [ time * 4 ]) * .04, (sin010 [ 0.5 + time / 3 ]) * 0.3, .75	//blur size, blur strength, blur lerp
		fragmentparm	1		1, 0			//pre scale, pre bias
		fragmentparm	2		1.04				//desateration
		fragmentparm	3		1.2, 0.1			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}

	//white edge
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time * 1 ], 1.2 * zerotoonesnap[ 0.00 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ time * -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time * -1 ], 1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.25 + time * 1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time * 1 ], 1.2 * zerotoonesnap[ -0.50 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ 0.50 + time * -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time * -1 ], 1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}
}

textures/special/spherevoice_outro
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		growOut [ time / 1.5 ] * .04, growOut [ (time + parm0 ) * ( 1 / 1.5 ) ] * 0.3, growIn [ (time + parm0 ) * ( 1 / 1.5 ) ] * 1	//blur size, blur strength, blur lerp
		fragmentparm	1		growOut [ (time + parm0 ) * ( 1 / 5 ) ] * 1.2, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		growOut [ (time + parm0 ) * ( 1 / 5 ) ] * 1.5, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}



	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.55 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time * 1 ], 1.2 * zerotoonesnap[ -0.50 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ 0.50 + time * -1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time * 1 ], 1.2 * zerotoonesnap[ 0.00 + time * 1 ]
		rgb		0.2 * zerotoonesnap[ time * -1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.65 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time * -1 ], 1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.25 + time * 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time * -1 ], 1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.25 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}
}

//
//screen overlays for spherebrain stage 4, when tommy replaces the sphere.
//

table rockin2 { { 0, 0.02, 0, -0.02 } }

table glyphjitter { snap { 1, 0.5 } }

table glyphjitter2 { snap { 0, 0.02, 0, -0.02 } }

textures/special/spherebrain_flash1 //blurry vision
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, 0.4, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		0.8, .01			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}
}

table spherebrainblur		{ clamp { 1.00, 0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.55, 0.50, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15, 0.10,
																	0.05, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
																	0.00, 0.00, 0.00, 0.00, 0.10, 0.20, 0.25, 0.30 } }


textures/special/spherebrain_white_flash1 //info and glyphs, flash of a hunter
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, spherebrainblur[ ( time + parm0 ) * ( 1 / 16.65 ) ] * 0.35, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}

	{ if ( time + parm0 > 0 && time + parm0 < 5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	{ if ( time + parm0 > 0 && time + parm0 < 2 ) //0 is start time in seconds, 2 is end time in seconds
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 2 ) //0 is start time in seconds, 2 is end time in seconds
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 2 ) //0 is start time in seconds, 2 is end time in seconds
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 2 ) //0 is start time in seconds, 2 is end time in seconds
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	//image 1 info and glyphs

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph2
		scroll (glyphjitter2 [ time * -4 ]), (glyphjitter2 [ time * 16 ])
		centerscale 1.3, 1

		color
			parm0 * 0.80 * (fourstage [ time * 4 ]),
			parm1 * 0.97 * (fourstage [ time * 4 ]),
			parm2 * 1.00 * (fourstage [ time * 4 ]),
			parm3 * 1.10 * (fourstage [ time * 4 ])
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph2
		scroll 1.5, 1.5
		scroll (glyphjitter2 [ time * -16 ]), (glyphjitter2 [ time * -4 ])
		rotate 1.5
		centerscale 1.5, 1.2

		color
			parm0 * 0.90 * (fourstage [ 0.25 + time * 4 ]),
			parm1 * 1.00 * (fourstage [ 0.25 + time * 4 ]),
			parm2 * 0.92 * (fourstage [ 0.25 + time * 4 ]),
			parm3 * 1.10 * (fourstage [ 0.25 + time * 4 ])
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph2
		scroll 1.5, 1.5
		scroll (glyphjitter2 [ time * -4 ]), (glyphjitter2 [ time * 16 ])
		centerscale 1.5, 1.2

		color
			parm0 * 0.80 * (fourstage [ 0.5 + time * 4 ]),
			parm1 * 0.90 * (fourstage [ 0.5 + time * 4 ]),
			parm2 * 1.00 * (fourstage [ 0.5 + time * 4 ]),
			parm3 * 1.10 * (fourstage [ 0.5 + time * 4 ])
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph2
		scroll (glyphjitter2 [ time * -16 ]), (glyphjitter2 [ time * -4 ])
		rotate 1.5
		centerscale .8, .6

		color
			parm0 * 1.00 * (fourstage [ 0.75 + time * 4 ]),
			parm1 * 1.00 * (fourstage [ 0.75 + time * 4 ]),
			parm2 * 0.92 * (fourstage [ 0.75 + time * 4 ]),
			parm3 * 1.10 * (fourstage [ 0.75 + time * 4 ])
	}

	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
		rgb		0.7
		clamp
	}


	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.30 ) ]
		rgb		0.3
		centerscale 1.4, 1.1
		clamp
	}

	//image 2 scrolling glyphs

	{	if ( time + parm0 > 2.5 && time + parm0 < 3 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		centerscale 1.5, .9
		scroll (rockin2 [ time * 1 ]), time * -4
		rgb		growIn [ ( time + parm0 + 2.5 ) * ( 1 / 0.5 ) ]
		rgb		0.1
	}

	{	if ( time + parm0 > 2.5 && time + parm0 < 3 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		centerscale 1.7, 1.2
		rotate 1.5
		scroll (rockin2 [ time * 1 ]), time * -6
		rgb		growIn [ ( time + parm0 + 2.5 ) * ( 1 / 0.5 ) ]
		rgb		0.1
	}

	//image 3 hunter

	{	if ( time + parm0 > 3 && time + parm0 < 3.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures
		scroll 1.5, 1.5
		scroll (rockin2 [ time * 1 ]), (rockin2 [ time * -1 ])
		centerscale 0.8 * (pulsebeat [0.5 + time / 1.9]), 0.8 * (pulsebeat [ 0.5 + time / 1.9])
		rotate 1.5
		alpha 0.7
		//alpha 1.15 * growOut [ ( time + parm0 + 3 ) * ( 1 / 0.5 ) ]
	}

	//white edge
	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.5 ) ]
		rgb		0.6
		clamp
	}


	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.3
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.3
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.30 ) ]
		rgb		0.2
		centerscale 1.4, 1.1
		clamp
	}

	//image 4 hound

	{	if ( time + parm0 > 5 && time + parm0 < 5.3 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures
		scroll 1.7, 0.8
		centerscale 0.6 * (pulsebeat [0.5 + time / 5]), 0.6 * (pulsebeat [ 0.5 + time / 5])
		rotate 1.5
		alpha 0.6
	}

	//white edge
	{	if ( time + parm0 > 5 && time + parm0 < 5.3 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.3 ) ]
		rgb		0.3
		clamp
	}

	{	if ( time + parm0 > 5 && time + parm0 < 5.4 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.4 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 5 && time + parm0 < 5.25 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.25 ) ]
		rgb		0.5
		clamp
	}


	{	if ( time + parm0 > 5 && time + parm0 < 5.4 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.4 ) ]
		rgb		0.2
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 5 && time + parm0 < 5.3 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.3 ) ]
		rgb		0.2
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 5 && time + parm0 < 5.25 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 5 ) * ( 1 / 0.25 ) ]
		rgb		0.1
		centerscale 1.4, 1.1
		clamp
	}

	//image 5 glyhps

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.75 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph
		rotate (bus1 [time * 2])
		centerscale 1.7 * (glyphjitter [ time * 2 ]), 1.4 * (glyphjitter [ time * 2 ])
		clamp

		color
			parm0 * 0.80 * (twostage [ time * 2 ]),
			parm1 * 0.97 * (twostage [ time * 2 ]),
			parm2 * 1.00 * (twostage [ time * 2 ]),
			parm3 * 0.60 * (twostage [ time * 2 ])
	}

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.75 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_glyph
		rotate 1.5
		rotate (bus1 [time * 2])
		centerscale 2.3 * (glyphjitter [ time * -2 ]), 2 * (glyphjitter [time * -2 ])
		clamp

		color
			parm0 * 0.90 * (twostage [ 0.5 + time * 2 ]),
			parm1 * 1.00 * (twostage [ 0.5 + time * 2 ]),
			parm2 * 0.92 * (twostage [ 0.5 + time * 2 ]),
			parm3 * 0.60 * (twostage [ 0.5 + time * 2 ])
	}

	//white edge
	{	if ( time + parm0 > 7.25 && time + parm0 < 7.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 7.25 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 7.25 ) * ( 1 / 0.45 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.75 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 7.25 ) * ( 1 / 0.5 ) ]
		rgb		0.6
		clamp
	}


	{	if ( time + parm0 > 7.25 && time + parm0 < 7.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 7 ) * ( 1 / 0.45 ) ]
		rgb		0.3
		centerscale .8 * pulsebeat [ time / 2.25 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 7.25 ) * ( 1 / 0.35 ) ]
		rgb		0.3
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 7.25 && time + parm0 < 7.55 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 7.25 ) * ( 1 / 0.30 ) ]
		rgb		0.2
		centerscale 1.4, 1.1
		clamp
	}

	//image 6 glyphs

	{	if ( time + parm0 > 7.55 && time + parm0 < 8.05 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		centerscale 1.3, 1
		rotate .5
		scroll (glyphjitter [ time * 25 ]), (glyphjitter [ time * 25 ])
		rgb		growOut [ ( time + parm0 + 7.55 ) * ( 1 / 0.5 ) ]
		rgb		0.1
	}

	{	if ( time + parm0 > 7.75 && time + parm0 < 8.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		centerscale 2, 2.4
		scroll time * 1, (rockin2 [ time * -1 ])
		scroll 1.5, 1.5
		rgb		sin010 [ ( time + parm0 + 7.75 ) * ( 1 / 0.6 ) ]
		rgb		0.05
	}

	//image 7 centurion
	{	if ( time + parm0 > 12 && time + parm0 < 12.3 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures2
		scroll 1.35, 0.95
		centerscale 0.6 * (pulsebeat [0.5 + time / 1.4]), 0.6 * (pulsebeat [ 0.5 + time / 1.4])
		rotate 1.5
		alpha 0.7
	}

	//white edge
	{	if ( time + parm0 > 12 && time + parm0 < 12.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 13 ) * ( 1 / 0.35 ) ]
		rgb		0.3
		clamp
	}

	{	if ( time + parm0 > 12 && time + parm0 < 12.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 12 && time + parm0 < 12.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 14 ) * ( 1 / 0.5 ) ]
		rgb		0.5
		clamp
	}


	{	if ( time + parm0 > 12 && time + parm0 < 12.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 14 ) * ( 1 / 0.45 ) ]
		rgb		0.3
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 12 && time + parm0 < 12.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 14 ) * ( 1 / 0.35 ) ]
		rgb		0.3
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 12 && time + parm0 < 12.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 14 ) * ( 1 / 0.30 ) ]
		rgb		0.2
		centerscale 1.4, 1.1
		clamp
	}

	//remaining white edge

	{	if ( time + parm0 > 12.5 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 100
		centerscale 1.2, 1.2
		rgb		growIn [ ( time + parm0 + 12.5 ) * ( 1 / 4.5 ) ]
		rgb		0.15
		clamp
	}

	{	if ( time + parm0 > 14 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -100
		rgb		growIn [ ( time + parm0 + 14 ) * ( 1 / 3 ) ]
		rgb		0.09
		clamp
	}

	{	if ( time + parm0 > 14 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 50
		centerscale .8, .8
		rgb		growIn [ ( time + parm0 + 14 ) * ( 1 / 3 ) ]
		rgb		0.03
		clamp
	}


	{	if ( time + parm0 > 12.5 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 100
		rgb		growIn [ ( time + parm0 + 12.5 ) * ( 1 / 4.5 ) ]
		rgb		0.01
		centerscale .7 * pulsebeat [ time / 2 ], .5 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 12.5 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 50
		rgb		growIn [ ( time + parm0 + 12.5 ) * ( 1 / 4.5 ) ]
		rgb		0.05
		centerscale 1 * pulsebeat [ time / 1 ], .7 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 14 && time + parm0 < 17 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -10
		rgb		growIn [ ( time + parm0 + 14 ) * ( 1 / 3 ) ]
		rgb		0.07
		centerscale 1.3, 1
		clamp
	}
}

textures/special/spherebrain_white_flash2 //harvester flash. hunter flash. harvester side flash.
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, growOut[ ( time + parm0 ) * ( 1 / 4 ) ] * 0.35, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	//white edge constant
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 100
		centerscale 1.2, 1.2
		rgb		0.15
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -100
		rgb		0.09
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 50
		centerscale .8, .8
		rgb		0.03
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 100
		rgb		0.01 * (random [ time * 1 ])
		centerscale .7 * pulsebeat [ time / 2 ], .5 * pulsebeat [ time / 2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 50
		rgb		0.05 * (random [ time * 1.5 ])
		centerscale 1 * pulsebeat [ time / 1 ], .7 * pulsebeat [ time / 1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -10
		rgb		0.07 * (random [ time * 0.5 ])
		centerscale 1.3, 1
		clamp
	}

	//image 1 harvester

	{	if ( time + parm0 > 0 && time + parm0 < 0.4 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures
		centerscale 0.8 * (pulsebeat [0.5 + time / 3]), 0.8 * (pulsebeat [ 0.5 + time / 3])
		rotate 1.5
		alpha 1.15 * growOut [ ( time + parm0 ) * ( 1 / 0.4 ) ]
	}

	//lingering glyphs
	{	if ( time + parm0 > 0.35 && time + parm0 < 0.55 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate	.5
		centerscale 1.3, 1
		rgb		growOut [ ( time + parm0 + 0.4 ) * ( 1 / 0.2 ) ]
		rgb		0.4
	}

	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.1
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.2
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.3
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.2
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.30 ) ]
		rgb		0.6
		centerscale 1.4, 1.1
		clamp
	}

	//image 3 glyphs

	{	if ( time + parm0 > 1.5 && time + parm0 < 1.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		rotate	.5
		centerscale 1.3, 1
		rgb		growOut [ ( time + parm0 + 1.6 ) * ( 1 / 0.2 ) ]
		rgb		0.3
	}

	{	if ( time + parm0 > 1.6 && time + parm0 < 1.8 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate	1.5
		scroll 1.2, 1.2
		centerscale .9, .6
		rgb		growOut [ ( time + parm0 + 1.7 ) * ( 1 / 0.2 ) ]
		rgb		0.2
	}

	//image 4 hunter side

	{	if ( time + parm0 > 3 && time + parm0 < 3.3 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures
		scroll 1.69, 1.27
		centerscale 0.5 * (pulsebeat [0.5 + time / 2]), 0.5 * (pulsebeat [ 0.5 + time / 2])
		rotate 1.5
	}

	//white edge
	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.3, 1.3
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.7
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .9, .9
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.5 ) ]
		rgb		0.8
		clamp
	}


	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.5
		centerscale .9 * pulsebeat [ time / 2 ], .7 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		centerscale 1.2 * pulsebeat [ time / 1 ], .9 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.30 ) ]
		rgb		0.4
		centerscale 1.4, 1.1
		clamp
	}

	//image 5 harvester side view

	{	if ( time + parm0 > 4 && time + parm0 < 4.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures
		scroll 1.23, 0.95
		centerscale 0.6 * (pulsebeat [0.5 + time / 1.4]), 0.6 * (pulsebeat [ 0.5 + time / 1.4])
		rotate 1.5
	}

	//white edge
	{	if ( time + parm0 > 4 && time + parm0 < 4.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.35 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 4 && time + parm0 < 4.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.45 ) ]
		rgb		0.7
		clamp
	}

	{	if ( time + parm0 > 4 && time + parm0 < 4.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.5 ) ]
		rgb		0.8
		clamp
	}


	{	if ( time + parm0 > 4 && time + parm0 < 4.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.45 ) ]
		rgb		0.5
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 4 && time + parm0 < 4.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 4 && time + parm0 < 4.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 4 ) * ( 1 / 0.30 ) ]
		rgb		0.4
		centerscale 1.4, 1.1
		clamp
	}
}

textures/special/spherebrain_white_flash3 //tortured humans
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.03, growOut[ ( time + parm0 ) * ( 1 / 1 ) ] * 0.35, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		growOut[ ( time + parm0 ) * ( 1 / 4 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 4 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 4 ) ] * 0.1	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}


	//white edge constant
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 100
		centerscale 1.2, 1.2
		rgb		0.2
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -100
		rgb		0.2
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 50
		centerscale .8, .8
		rgb		0.2
		clamp
	}


	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 100
		rgb		0.2 * (random [ time * 1 ])
		centerscale .7 * pulsebeat [ time / 2 ], .5 * pulsebeat [ time / 2 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 50
		rgb		0.2 * (random [ time * 1 ])
		centerscale 1 * pulsebeat [ time / 1 ], .7 * pulsebeat [ time / 1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -10
		rgb		0.2 * (random [ time * 1 ])
		centerscale 1.3, 1
		clamp
	}

	//image 1 tortured sad human

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_people2
		centerscale 0.8 * (pulsebeat [0.5 + time / 3.4]), 0.8 * (pulsebeat [ 0.5 + time / 2.4])
		rotate 1.5
		alpha 1.15 * growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
	}

	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
		rgb		0.7
		clamp
	}


	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.30 ) ]
		rgb		0.3
		centerscale 1.4, 1.1
		clamp
	}

	//image 2 mouth

	{	if ( time + parm0 > 2 && time + parm0 < 2.25 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_people
		scroll 1.3, 1.1
		centerscale 0.5 * (pulsebeat [0.5 + time / 1.5]), 0.5 * (pulsebeat [ 0.5 + time / 1.4])
		rotate 1.5
	}

	//white edge
	{	if ( time + parm0 > 2 && time + parm0 < 2.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 2 && time + parm0 < 2.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.45 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 2 && time + parm0 < 2.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.5 ) ]
		rgb		0.7
		clamp
	}


	{	if ( time + parm0 > 2 && time + parm0 < 2.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 2 && time + parm0 < 2.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 2 && time + parm0 < 2.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 2 ) * ( 1 / 0.30 ) ]
		rgb		0.3
		centerscale 1.4, 1.1
		clamp
	}

	//image 3 tortured yelling man

	{	if ( time + parm0 > 3 && time + parm0 < 3.3 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_people
		scroll 1.4, 1.4
		centerscale 0.8 * (pulsebeat [0.5 + time / 1.4]), 0.8 * (pulsebeat [ 0.5 + time / 1.4])
		rotate .25
	}

	//white edge
	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.5 ) ]
		rgb		0.7
		clamp
	}


	{	if ( time + parm0 > 3 && time + parm0 < 3.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 3 && time + parm0 < 3.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 3 ) * ( 1 / 0.30 ) ]
		rgb		0.3
		centerscale 1.4, 1.1
		clamp
	}
}

textures/special/spherebrain_white_flash4 //keeper
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, growOut[ ( time + parm0 ) * ( 1 / 4 ) ] * 0.35, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	//image 1 keeper front

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures2
		centerscale 0.8 * (pulsebeat [0.5 + time / 1.4]), 0.8 * (pulsebeat [ 0.5 + time / 1.4])
		rotate 1.5
		alpha 1.15 * growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
	}

	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.6
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
		rgb		0.7
		clamp
	}


	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.4
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.30 ) ]
		rgb		0.3
		centerscale 1.4, 1.1
		clamp
	}

	//image 2 keeper side view

	{	if ( time + parm0 > 1 && time + parm0 < 1.3 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_creatures2
		scroll 1.4, 1.5
		centerscale 0.8 * (pulsebeat [0.5 + time / 3]), 0.8 * (pulsebeat [ 0.5 + time / 3])
		rotate .5
	}

	//white edge
	{	if ( time + parm0 > 1 && time + parm0 < 1.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.35 ) ]
		rgb		0.4
		clamp
	}

	{	if ( time + parm0 > 1 && time + parm0 < 1.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.45 ) ]
		rgb		0.5
		clamp
	}

	{	if ( time + parm0 > 1 && time + parm0 < 1.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.5 ) ]
		rgb		0.6
		clamp
	}


	{	if ( time + parm0 > 1 && time + parm0 < 1.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.45 ) ]
		rgb		0.3
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 1 && time + parm0 < 1.35 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.35 ) ]
		rgb		0.3
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 1 && time + parm0 < 1.30 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 + 1 ) * ( 1 / 0.30 ) ]
		rgb		0.2
		centerscale 1.4, 1.1
		clamp
	}
}

textures/special/spherebrain_white_flash5 //eyeball
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.35, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1,
											growOut[ ( time + parm0 ) * ( 1 / 2 ) ] * 0.1	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	//image 1

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/spherebrain_flash_people
		centerscale 0.8 * (pulsebeat [0.5 + time / 6]), 0.8 * (pulsebeat [ 0.5 + time / 7])
		rotate time * 0.04
		rotate 1.5
		alpha 1.15 * growOut [ ( time + parm0 ) * ( 1 / 0.5 ) ]
	}

	//white edge
	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 10
		centerscale 1.2, 1.2
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.1
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / -10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.55 ) ]
		rgb		0.2
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time / 5
		centerscale .8, .8
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.6 ) ]
		rgb		0.5
		clamp
	}


	{	if ( time + parm0 > 0 && time + parm0 < 0.55 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 10
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.55 ) ]
		rgb		0.2
		centerscale .8 * pulsebeat [ time / 2 ], .6 * pulsebeat [ time / 2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.45 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / 5
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.45 ) ]
		rgb		0.2
		centerscale 1.1 * pulsebeat [ time / 1 ], .8 * pulsebeat [ time / 1 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.40 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate		time / -1
		rgb		growOut [ ( time + parm0 ) * ( 1 / 0.40 ) ]
		rgb		0.1
		centerscale 1.4, 1.1
		clamp
	}
}

table glyphjitter3 { snap { 1, 0.25, 1.5, 0.5 } }

table glyphflash { snap { 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.02,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.0,
													0.0, 0.0, 0.02, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
													0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 } }

textures/special/spherebrain_flash2 //So much power!
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/spherebrain_flash_mask	//mask

		fragmentparm	0		(random [ time / 4 ]) * .1, (sin010 [ time / 1.5 ]) * 0.6, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		3, 0			//pre scale, pre bias
		fragmentparm	2		0.6				//desateration
		fragmentparm	3		0.8, .3			//contrast, contrast center
		fragmentparm	4		0.2, 0.1, 0, 0	//tint color
		fragmentparm	5		.08, .1, .03	//post additive color
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 1 ], 1.2 * zerotoonesnap[ 0.00 + time / 1 ]
		rgb		0.4 * zerotoonesnap[ time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 1 ], 1.2 * zerotoonesnap[ -0.25 + time / 1 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 1 ], 1.2 * zerotoonesnap[ -0.50 + time / 1 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 1 ], 1.2 * zerotoonesnap[ -0.75 + time / 1 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -1 ]
		clamp
	}

		//info flashes
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	2.3 * (glyphjitter3 [ time * .25 ]), 2 * (glyphjitter3 [ time * .125 ])
		scroll (glyphjitter3 [ time * .8 ]), (glyphjitter3 [ time * .8 ])
		rgb		0.9 * glyphflash[ time * .7 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	1.3 * (glyphjitter3 [ time * .25 ]), 1 * (glyphjitter3 [ time * .25 ])
		scroll (glyphjitter3 [ time * .8 ]), (glyphjitter3 [ time * .8 ])
		rgb		0.9 * glyphflash[ 0.4 + time * .8 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * 100
		centerscale	1 * (glyphjitter3 [ time * .25 ]), .7 * (glyphjitter3 [ time * .25 ])
		rgb		0.3 * glyphflash[ 0.7 + time * 1 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * -40
		centerscale	.7 * (glyphjitter3 [ 0.1 + time * .25 ]), .5 * (glyphjitter3 [ 0.1 + time * .25 ])
		rgb		0.5 * glyphflash[ 0.7 + time * 1 ]
		clamp
	}
}

textures/special/spherebrain_flash3 //Hear my voice...
{
	translucent
	// NON-FRAGMENT PROGRAM VERSION
	{
		if fragmentPrograms == 0

		blend gl_zero, gl_src_color
		map			_white
		color	.8, .8, 1, .15
	}
	{
		if fragmentPrograms == 0

		blend add
		map			_white
		color	.2, .2, .2, .25
		//alpha 0.15
	}
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.004, growOut[ ( time + parm0 ) * ( 1 / 8 ) ] * .4, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		.25				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		.5, .8, 1.3, .6	//tint color
		fragmentparm	5		.15, .15, .17	//post additive color

	}

		//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 1 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010[ time + parm0 ]
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.8 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.9 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1.1 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1.2 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 4 ], 1.2 * zerotoonesnap[ 0.00 + time / 4 ]
		rgb		0.4 * zerotoonesnap[ time / -4 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 4 ], 1.2 * zerotoonesnap[ -0.25 + time / 4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -4 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 4 ], 1.2 * zerotoonesnap[ -0.50 + time / 4 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -4 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 4 ], 1.2 * zerotoonesnap[ -0.75 + time / 4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -4 ]
		clamp
	}
}

textures/special/spherebrain_flash4 //But I can do great things
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/spherebrain_flash_mask	//mask

		fragmentparm	0		(random [ time / 1.4 ]) * .3, (sin010 [ time / 1 ]) * 0.6, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		3, 0			//pre scale, pre bias
		fragmentparm	2		0.6				//desateration
		fragmentparm	3		0.8, .3			//contrast, contrast center
		fragmentparm	4		0.2, 0.1, 0, 0	//tint color
		fragmentparm	5		.08, .1, .03	//post additive color
	}

			//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.25 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010[ time + parm0 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 2 ], 1.2 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		0.4 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 2 ], 1.2 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 2 ], 1.2 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 2 ], 1.2 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	//info flashes
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	2.3 * (glyphjitter3 [ time * .25 ]), 2 * (glyphjitter3 [ time * .125 ])
		scroll (glyphjitter3 [ time * .8 ]), (glyphjitter3 [ time * .8 ])
		rgb		0.9 * glyphflash[ time * 1 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	1.3 * (glyphjitter3 [ time * .25 ]), 1 * (glyphjitter3 [ time * .25 ])
		scroll (glyphjitter3 [ time * .8 ]), (glyphjitter3 [ time * .8 ])
		rgb		0.9 * glyphflash[ 0.4 + time * 1 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * 100
		centerscale	1 * (glyphjitter3 [ time * .25 ]), .7 * (glyphjitter3 [ time * .25 ])
		rgb		0.3 * glyphflash[ 0.7 + time * 1.5 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * -40
		centerscale	.7 * (glyphjitter3 [ 0.1 + time * .25 ]), .5 * (glyphjitter3 [ 0.1 + time * .25 ])
		rgb		0.5 * glyphflash[ 0.7 + time * 1.5 ]
		clamp
	}
}

textures/special/spherebrain_flash5 //Listen to your heart. You know what must be done.
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/spherebrain_flash_mask	//mask

		fragmentparm	0		(random [ time / 10 ]) * .03, (sin010 [ time / 4 ]) * 0.3, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		3, 0			//pre scale, pre bias
		fragmentparm	2		0.6				//desateration
		fragmentparm	3		0.8, .3			//contrast, contrast center
		fragmentparm	4		0.2, 0.1, 0.2, 0	//tint color
		fragmentparm	5		.08, .1, .03	//post additive color
	}
	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.6 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.7 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.8 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.9 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1.1 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1.2 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 4 ], 1.2 * zerotoonesnap[ 0.00 + time / 4 ]
		rgb		0.4 * zerotoonesnap[ time / -4 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 4 ], 1.2 * zerotoonesnap[ -0.25 + time / 4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -4 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 4 ], 1.2 * zerotoonesnap[ -0.50 + time / 4 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -4 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 4 ], 1.2 * zerotoonesnap[ -0.75 + time / 4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -4 ]
		clamp
	}
}

textures/special/spherebrain_flash6 //Yes...
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/spherebrain_flash_mask	//mask

		fragmentparm	0		growOut[ ( time + parm0 ) * ( 1 / 6 ) ] * .15, growOut[ ( time + parm0 ) * ( 1 / 6 ) ] * 0.6, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		3, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1, 0			//contrast, contrast center

		fragmentparm	4		0, 0, 0, 0	//tint color

		fragmentparm	5		0, 0, 0	//post additive color
	}

	//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.25 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010[ time + parm0 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ time / 2 ], 1 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		1 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.25 + time / 2 ], 1 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * 0.01
		centerscale	1 * zerotoonesnap[ -0.50 + time / 2 ], 1 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		time * -0.01
		centerscale	1 * zerotoonesnap[ -0.75 + time / 2 ], 1 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		1 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.04]
		centerscale	0.55 * pulsebeat [time * 0.4 ], 0.55 * pulsebeat [time * 0.4 ]
		rgb		0.7 * zerotoonesnap [time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.01]
		centerscale	0.5 * pulsebeat [ -0.25 + time * 0.2 ], 0.5 * pulsebeat [ -0.25 + time * 0.2 ]
		rgb		0.7 * zerotoonesnap [ -0.25 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * -0.01]
		centerscale	0.55 * pulsebeat [ -0.5 + time * 0.6 ], 0.55 * pulsebeat [ -0.5 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ 0.5 + time * -0.6 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_veins
		rotate		pulsebeat [time * 0.02]
		centerscale	0.5 * pulsebeat [ -0.75 + time * 0.6 ], 0.5 * pulsebeat [ -0.75 + time * 0.6 ]
		rgb		0.7 * zerotoonesnap [ -0.75 + time * -0.6 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 1 ], 1.2 * zerotoonesnap[ 0.00 + time / 1 ]
		rgb		0.4 * zerotoonesnap[ time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 1 ], 1.2 * zerotoonesnap[ -0.25 + time / 1 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 1 ], 1.2 * zerotoonesnap[ -0.50 + time / 1 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -1 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 1 ], 1.2 * zerotoonesnap[ -0.75 + time / 1 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -1 ]
		clamp
	}
}

textures/special/spherebrain_flash7 //Destroy the sphere
{
	translucent

	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		(random [ time / 1 ]) * .04, (sin010 [ time / 1 ]) * 0.45, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		3, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 2 ], 1.2 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		0.4 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 2 ], 1.2 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 2 ], 1.2 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 2 ], 1.2 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	//info flashes
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	2.3 * (glyphjitter3 [ time * .25 ]), 2 * (glyphjitter3 [ time * .125 ])
		scroll (glyphjitter3 [ time * 1 ]), (glyphjitter3 [ time * 1 ])
		rgb		1 * glyphflash[ time * 1 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	1.3 * (glyphjitter3 [ time * .5 ]), 1 * (glyphjitter3 [ time * .5 ])
		scroll (glyphjitter3 [ time * .7 ]), (glyphjitter3 [ time * .7 ])
		rgb		1 * glyphflash[ 0.4 + time * .7 ]
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * 100
		centerscale	1 * (glyphjitter3 [ time * .25 ]), .7 * (glyphjitter3 [ time * .25 ])
		rgb		0.6 * glyphflash[ 0.7 + time * .5 ]
		clamp
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * -40
		centerscale	.7 * (glyphjitter3 [ 0.1 + time * .25 ]), .5 * (glyphjitter3 [ 0.1 + time * .25 ])
		rgb		0.9 * glyphflash[ 0.7 + time * .5 ]
		clamp
	}

	//
	//image of the sun far away
	//

	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		centerscale 3.8, 3.0
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4.01 ])
		glowstage
		clamp

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		centerscale 3.8, 3.0
		scroll (rockin2 [ time / -4.01 ]), (rockin2 [ time / -4 ])
		rotate 1.5
		glowstage
		clamp

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		rgb 0.7
	}

	{	if ( time + parm0 > 4 && time + parm0 < 4.4 )
		maskcolor
		map	makealpha(textures/special/sun_mask)
		rotate time / 50
		centerscale 3.63, 2.93
		scroll (rockin2 [ time / 4.01 ]), (rockin2 [ time / 4.01 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / 15), (time / 200)
		rotate time / 200
		glowstage
		centerscale 2.4, 2.4

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		rotate time / -100
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		centerscale 1.4, 1.4

		rgb sin010[ ( time + parm0 + 5 ) * ( 1 / .4 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / -15), (time / -200)
		rotate time / -400
		glowstage
		centerscale 1.8, 1.8

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		rgb 0.3
	}

	//sun flames
	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.02
		centerscale	4.6 * zerotoonesnap[ time * -0.05 ], 4.3 * zerotoonesnap[ time * -0.05 ]
		rgb		0.30 * sinTable[ time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.02
		centerscale	4.6 * zerotoonesnap[ -0.125 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.125 + time * -0.05 ]
		rgb		0.30 * sinTable[ -0.125 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.02
		centerscale	4.6 * zerotoonesnap[ -0.25 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.25 + time * -0.05 ]
		rgb		0.30 * sinTable[ 0.25 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.02
		centerscale	4.6 * zerotoonesnap[ -0.375 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.375 + time * -0.05 ]
		rgb		0.30 * sinTable[ 0.375 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.02
		centerscale	4.6 * zerotoonesnap[ -0.50 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.50 + time * -0.05 ]
		rgb		0.30 * sinTable[ 0.50 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.02
		centerscale	4.6 * zerotoonesnap[ -0.625 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.625 + time * -0.05 ]
		rgb		0.40 * sinTable[ 0.625 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.02
		centerscale	4.6 * zerotoonesnap[ -0.75 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.75 + time * -0.05 ]
		rgb		0.30 * sinTable[ 0.75 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	{ if ( time + parm0 > 4 && time + parm0 < 5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.02
		centerscale	4.6 * zerotoonesnap[ -0.875 + time * -0.05 ], 4.3 * zerotoonesnap[ -0.875 + time * -0.05 ]
		rgb		0.30 * sinTable[ 0.875 + time * 0.05 ]
		scroll (rockin2 [ time / 4 ]), (rockin2 [ time / 4 ])
		glowstage
		clamp
	}

	//stars
	{ if ( time + parm0 > 4 && time + parm0 < 4.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield
		centerscale .8, .8
		rotate time / 40
		scroll (rockin2 [ time / 20 ]), (rockin2 [ time / 20 ])

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		red 0.21
		green 0.21
		blue 0.14
	}

	//
	//image of the sun, closer
	//

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale 1.25, 0.95
		rotate time / -50
		clamp

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale 1.25, 1.95
		rotate 1.5
		clamp

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale 12.25 * (rockin2 [ time / 5 ]), 12.95 * (rockin2 [ time / 5 ])
		rotate time / 20
		clamp

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.3
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale 12.25 * (rockin2 [ 0.25 + time / -5 ]), 12.95 * (rockin2 [ 0.25 + time / -5 ])
		rotate time / -20
		clamp

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.3
	}

	{	if ( time + parm0 > 6 && time + parm0 < 6.25 )
		maskcolor
		map	makealpha(textures/special/sun_mask)
		rotate time / 50
		centerscale 1.25, 0.95
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / 15), (time / 200)
		rotate time / 200
		glowstage
		centerscale 1.7, 1.7

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		rotate time / -80
		glowstage
		centerscale 1, 1

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 6 && time + parm0 < 6.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / -15), (time / -200)
		rotate time / -200
		glowstage
		centerscale 1.6, 1.6

		rgb sin010[ ( time + parm0 + 6 ) * ( 1 / .25 ) ]
		rgb 0.4
	}

	//sun flames
	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.05
		centerscale	1.7 * zerotoonesnap[ time * -0.4 ], 1.4 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.50 * sinTable[ time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.125 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.125 + 0.00 + time * -0.4 ]
		rgb		0.40 * sinTable[ -0.125 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.25 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.50 * sinTable[ 0.25 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.06
		centerscale	1.7 * zerotoonesnap[ -0.375 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.375 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.375 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.50 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.50 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.06
		centerscale	1.7 * zerotoonesnap[ -0.625 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.625 + time * -0.4 ]
		rgb		0.60 * sinTable[ 0.625 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.06
		centerscale	1.7 * zerotoonesnap[ -0.75 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.75 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 6 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.05
		centerscale	1.7 * zerotoonesnap[ -0.875 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.875 + time * -0.4 ]
		rgb		0.50 * sinTable[ 0.875 + time * 0.4 ]
		glowstage
		clamp
	}

	//stars
	{ if ( time + parm0 > 6 && time + parm0 < 6.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield
		centerscale .8, .8
		rotate time / 100
		scroll (rockin2 [ time / 20 ]), (rockin2 [ time / 20 ])

		rgb sin010[ ( time + parm0 + 4 ) * ( 1 / .4 ) ]
		red 0.21
		green 0.21
		blue 0.14
	}

	//
	//image of the sun's surface
	//

	{ if ( time + parm0 > 8 && time + parm0 < 8.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale .7, .6
		rotate time / -30
		clamp

		rgb sin010[ ( time + parm0 + 8 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 8 && time + parm0 < 8.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale .7, .5
		rotate time / 20
		clamp

		rgb sin010[ ( time + parm0 + 8 ) * ( 1 / .25 ) ]
		rgb 0.7
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9 )

		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun
		glowstage
		centerscale 12.25 * (rockin2 [ time / 3 ]), 12.95 * (rockin2 [ time / 3 ])
		rotate time / 10
		clamp

		rgb sin010[ ( time + parm0 + 8 ) * ( 1 / 1 ) ]
		rgb 0.4
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9 )

		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun
		glowstage
		centerscale 12.25 * (rockin2 [ 0.25 + time / -3 ]), 12.95 * (rockin2 [ 0.25 + time / -3 ])
		rotate time / -10
		clamp

		rgb sin010[ ( time + parm0 + 7 ) * ( 1 / 1 ) ]
		rgb 0.4
	}

	{	if ( time + parm0 > 8 && time + parm0 < 8.25 )
		maskcolor
		map	makealpha(textures/special/sun_mask)
		rotate time / 50
		centerscale .7, .5
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 8.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / 15), (time / 200)
		rotate time / 200
		glowstage
		centerscale 1.2, 1.2

		rgb sin010[ ( time + parm0 + 7 ) * ( 1 / .25 ) ]
		rgb 0.8
	}

	{ if ( time + parm0 > 8 && time + parm0 < 8.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		rotate time / -80
		glowstage
		centerscale 0.9, 0.9

		rgb sin010[ ( time + parm0 + 8 ) * ( 1 / .25 ) ]
		rgb 0.8
	}

	{ if ( time + parm0 > 8 && time + parm0 < 8.25 )

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / -15), (time / -200)
		rotate time / -200
		glowstage
		centerscale 1.4, 1.4

		rgb sin010[ ( time + parm0 + 8 ) * ( 1 / .25 ) ]
		rgb 0.5
	}

	//sun flames
	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.05
		centerscale	1.7 * zerotoonesnap[ time * -0.4 ], 1.4 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.50 * sinTable[ time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.125 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.125 + 0.00 + time * -0.4 ]
		rgb		0.40 * sinTable[ -0.125 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.25 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.50 * sinTable[ 0.25 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.06
		centerscale	1.7 * zerotoonesnap[ -0.375 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.375 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.375 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.05
		centerscale	1.7 * zerotoonesnap[ -0.50 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.50 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.06
		centerscale	1.7 * zerotoonesnap[ -0.625 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.625 + time * -0.4 ]
		rgb		0.60 * sinTable[ 0.625 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.06
		centerscale	1.7 * zerotoonesnap[ -0.75 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.40 * sinTable[ 0.75 + time * 0.4 ]
		glowstage
		clamp
	}

	{ if ( time + parm0 > 8 && time + parm0 < 9.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.05
		centerscale	1.7 * zerotoonesnap[ -0.875 + time * -0.4 ], 1.4 * zerotoonesnap[ -0.875 + time * -0.4 ]
		rgb		0.50 * sinTable[ 0.875 + time * 0.4 ]
		glowstage
		clamp
	}
}

textures/special/spherebrain_flash8 //heat of the sun
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.02, growIn[ ( time + parm0 ) * ( 1 / 8 ) ] * 0.4, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.8, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		growIn[ ( time + parm0 + 0.1 ) * ( 1 / 8 ) ] * 1,
											growIn[ ( time + parm0 + 0.1 ) * ( 1 / 8 ) ] * 1,
											growIn[ ( time + parm0 + 0.1 ) * ( 1 / 8 ) ] * 1	//post additive color
	}

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.05
		centerscale	1.5 * zerotoonesnap[ time / 2 ], 1.2 * zerotoonesnap[ 0.00 + time / 2 ]
		rgb		0.4 * zerotoonesnap[ time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.03
		centerscale	1.5 * zerotoonesnap[ -0.25 + time / 2 ], 1.2 * zerotoonesnap[ -0.25 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.03
		centerscale	1.5 * zerotoonesnap[ -0.50 + time / 2 ], 1.2 * zerotoonesnap[ -0.50 + time / 2 ]
		rgb		0.6 * zerotoonesnap[ 0.50 + time / -2 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.05
		centerscale	1.5 * zerotoonesnap[ -0.75 + time / 2 ], 1.2 * zerotoonesnap[ -0.75 + time / 2 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time / -2 ]
		clamp
	}

	//info flashes
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph2
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	2.3 * (glyphjitter3 [ time * .25 ]), 2 * (glyphjitter3 [ time * .125 ])
		scroll (glyphjitter3 [ time * 1 ]), (glyphjitter3 [ time * 1 ])
		rgb		1 * glyphflash[ time * 1 ]
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_glyph
		rotate (glyphjitter3 [ time * .25 ])
		centerscale	1.3 * (glyphjitter3 [ time * .5 ]), 1 * (glyphjitter3 [ time * .5 ])
		scroll (glyphjitter3 [ time * .7 ]), (glyphjitter3 [ time * .7 ])
		rgb		1 * glyphflash[ 0.4 + time * .7 ]
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * 100
		centerscale	1 * (glyphjitter3 [ time * .25 ]), .7 * (glyphjitter3 [ time * .25 ])
		rgb		0.6 * glyphflash[ 0.7 + time * .5 ]
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spherebrain_flash_focus2
		rotate time * -40
		centerscale	.7 * (glyphjitter3 [ 0.1 + time * .25 ]), .5 * (glyphjitter3 [ 0.1 + time * .25 ])
		rgb		0.9 * glyphflash[ 0.7 + time * .5 ]
		clamp
	}
}

table genocideblur		{ clamp { 0.00, 0.50, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.40, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00,
																1.00, 1.00, 0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10, 0.00 } }

textures/special/keeper_genocide //used to blur the screen when the sphere is killing the keepers.
{
	qer_editorimage textures/special/spherebrain_flash_light
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		.01, genocideblur[ ( time + parm0 ) * ( 1 / 9 ) ] * .3, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1					//desateration
		fragmentparm	3		1, 0			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}

	//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )

		blend add
		map _white

		rgb sin010[ time + parm0 ]
	}

	{	if ( time + parm0 > 0 && time + parm0 < 7.25 )
		blend gl_one,gl_one_minus_src_color
		map textures/particles/vortex4
		rotate		time * 0.27
		centerscale	1.6 * zerotoonesnap[ time * -0.8 ],1.2 * zerotoonesnap[ 0.00 + time * -0.8 ]
		rgb		0.40 * zerotoonesnap[ time * 0.8 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 7.5 )
		blend gl_one,gl_one_minus_src_color
		map textures/particles/vortex4
		rotate		time * -0.22
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.5 ],1.2 * zerotoonesnap[ -0.25 + time * -0.5 ]
		rgb		0.40 * zerotoonesnap[ 0.25 + time * 0.5 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 7.75 )
		blend gl_one,gl_one_minus_src_color
		map textures/particles/vortex4
		rotate		time * 0.23
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.5 ],1.2 * zerotoonesnap[ -0.50 + time * -0.5 ]
		rgb		0.40 * zerotoonesnap[ 0.50 + time * 0.5 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 8 )
		blend gl_one,gl_one_minus_src_color
		map textures/particles/vortex4
		rotate		time * -0.18
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.40 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 7.25 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.01
		centerscale	1.6 * zerotoonesnap[ time * -2 ],1.2 * zerotoonesnap[ 0.00 + time * -2 ]
		rgb		0.10 * zerotoonesnap[ time * 2 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 7.5 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.01
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -2 ],1.2 * zerotoonesnap[ -0.25 + time * -2 ]
		rgb		0.10 * zerotoonesnap[ 0.25 + time * 2 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 7.75 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/spherebrain_flash_focus
		rotate		time * 0.01
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -2 ],1.2 * zerotoonesnap[ -0.50 + time * -2 ]
		rgb		0.18 * zerotoonesnap[ 0.50 + time * 2 ]
		clamp
	}
	{	if ( time + parm0 > 0 && time + parm0 < 8 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/spherebrain_flash_focus
		rotate		time * -0.01
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -2 ],1.2 * zerotoonesnap[ -0.75 + time * -2 ]
		rgb		0.15 * zerotoonesnap[ 0.75 + time * 2 ]
		clamp
	}
}


//
//keeper speech screen overlays
//


textures/special/keeper_flash1 //human, why are you here?
{
	qer_editorimage textures/special/keeper_flash_glyph
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.004, .15, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash
	{	if ( time + parm0 > 0 && time + parm0 < 0.25 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010[ ( time + parm0 + 0.0 ) * ( 1 / 0.25 ) ]
	}

	//image 1
	{	if ( time + parm0 > 0.25 && time + parm0 < 0.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate time / 20
		clamp

		rgb sin010[ ( time + parm0 + 0.25 ) * ( 1 / 0.25 ) ]
		rgb 0.1
	}

	{	if ( time + parm0 > 0.4 && time + parm0 < 0.65 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate time / 10
		centerscale 1.3, 1
		clamp

		rgb 0.1 * sin010[ ( time + parm0 + 0.4 ) * ( 1 / 0.25 ) ]
	}

	{	if ( time + parm0 > 0.4 && time + parm0 < 0.65 ) //0.65 is start time in seconds, 0.9 is end time in seconds

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate time / -10
		centerscale 1.3, 1
		centerscale 0.8, 0.8
		clamp

		rgb 0.1 * sin010[ ( time + parm0 + 0.4 ) * ( 1 / 0.25 ) ]
	}
}

table blur		{ clamp { 1, 3, 2, 1.25, 1.15 } }

textures/special/keeper_flash2 //your people?
{
	qer_editorimage textures/special/keeper_flash_human
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, blur [ ( time + parm0 ) * ( 1 / 0.3 ) ] * .15, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	{	if ( time + parm0 > 0 && time + parm0 < 1.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		centerscale 1.5 * (jitter6 [time * 3]), 1.5 * (jitter6 [time * 3])
		clamp

		rgb 0.05 * sin010[ ( time + parm0 ) * ( 1 / 1.25 ) ]
	}

	{	if ( time + parm0 > 0.1 && time + parm0 < 1.35 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate time * -7
		centerscale (jitter3 [time * 1]), (jitter3 [time * 1])
		clamp

		rgb 0.05 * sin010[ ( time + parm0 + 0.1 ) * ( 1 / 1.25 ) ]
	}

	{	if ( time + parm0 > 0.2 && time + parm0 < 1.45 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate time * -7
		centerscale (jitter3 [time * 2]), (jitter3 [time * 2])
		clamp

		rgb 0.05 * sin010[ ( time + parm0 + 0.2 ) * ( 1 / 1.25 ) ]
	}

	//white flash
	{	if ( time + parm0 > 1.50 && time + parm0 < 1.90 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 + 1.50 ) * ( 1 / 0.4 ) ]
	}

	//image 1: tortured human
	{	if ( time + parm0 > 1.55 && time + parm0 < 1.85 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_human
		rotate 1.5
		clamp

		rgb 1.5 * sin010 [ ( time + parm0 + 1.55 ) * ( 1 / 0.3 ) ]
	}

	//white edge

	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.6 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//image 2: tortured human
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_human2
		rotate 1.5
		clamp

	}

	//white edge

	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.95 && time + parm0 < 2.2 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}
}

textures/special/keeper_flash3 //Were it not for us, your species would never have existed.
{
	qer_editorimage textures/special/keeper_flash_fetus
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash
	{	if ( time + parm0 > 2.75 && time + parm0 < 3.15 )

		blend add
		map _white

		rgb sin010 [ ( time + parm0 + 1.50 ) * ( 1 / 0.4 ) ]
	}

	//image 1: fetus
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_fetus
		rotate 1.5
		centerscale	0.9 * pulsebeat[ time * 0.05 ], 0.9 * pulsebeat[ time * 0.01 ]
		scroll rockin2[ time * 0.35 ], rockin2[ time * -0.3 ]
		clamp
	}

	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_fetus
		rotate 1.5
		centerscale	0.85 * pulsebeat[ time * 0.45 ], 0.85 * pulsebeat[ time * 0.4 ]
		scroll rockin2[ time * 0.35 ], rockin2[ time * -0.3 ]
		clamp
		rgb 0.2
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_fetus
		rotate 1.5
		centerscale	0.85 * pulsebeat[ time * -0.4 ], 0.85 * pulsebeat[ time * -0.45 ]
		scroll rockin2[ 0.5 + time * 0.35 ], rockin2[ 0.5 + time * -0.3 ]
		clamp
		rgb 0.2
	}

	//white edge

	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 3.0 && time + parm0 < 3.35 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash
	{	if ( time + parm0 > 9.3 && time + parm0 < 9.7 )

		blend add
		map _white

		rgb sin010 [ ( time + parm0 + 1.50 ) * ( 1 / 0.4 ) ]
	}

	//image 2: meat and flesh
	{	if ( time + parm0 > 9.5 && time + parm0 < 9.85 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_flesh
		rotate time / 150
		scroll (time / 100), (time / 200)
		centerscale 1.2, 1.2

		rgb 1.4 * sin010 [ ( time + parm0 + 9.5 ) * ( 1 / 0.35 ) ]
	}

	{	if ( time + parm0 > 9.9 && time + parm0 < 10.20 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_flesh
		rotate time / -300
		scroll (time / 30), (time / 100)
		centerscale 0.8 * pulsebeat [ time * 0.01 ], 0.8

		rgb 1.4 * sin010 [ ( time + parm0 + 9.9 ) * ( 1 / 0.30 ) ]
	}
}

textures/special/keeper_flash4 //Eons ago your planet was nothing but a barren rock
{
	qer_editorimage textures/special/keeper_flash_barrenrock
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 0 && time + parm0 < 2 )

		blend add
		map _white

		rgb 0.5 * sin010[ ( time + parm0 ) * ( 1 / 2.0 ) ]
	}

	//image 1: stars
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.6 )
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_starfield
		scroll time / 300 , time * 0
		rotate time * 0.001
		centerscale 1.2, 1.2
	}

	{	if ( time + parm0 > 0.25 && time + parm0 < 1.85 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield
		scroll 1.3 * time * 0.0002 , 1.3 * time * 0
		rotate time * 0.0004
		centerscale 1.7, 1.7

		rgb 0.3 * sin010[ ( time + parm0 + 0.25 ) * ( 1 / 1.6 ) ]
	}

	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield2
		scroll time * .0005, time * 0
		rotate time * -0.0001

		rgb 0.2 * sin010[ ( time + parm0 + 0.25 ) * ( 1 / 1.7 ) ]
	}

	//white edge

	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 0.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}


	{	if ( time + parm0 > 1.75 && time + parm0 < 4.75 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate ( time * -0.06 )
		clamp
		centerscale 1.3, 1.3

		rgb 0.2 * sin010[ ( time + parm0 + 1.75 ) * ( 1 / 3 ) ]
	}

	{	if ( time + parm0 > 1.85 && time + parm0 < 4.85 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate ( time * 0.06 )
		clamp
		centerscale 0.6, 0.6

		rgb 0.2 * sin010[ ( time + parm0 + 1.85 ) * ( 1 / 3 ) ]
	}

	{	if ( time + parm0 > 1.95 && time + parm0 < 4.95 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate ( time * 0.06 )
		clamp
		centerscale 2.1, 1.8

		rgb 0.1 * sin010[ ( time + parm0 + 1.95 ) * ( 1 / 3 ) ]
	}

	//white flash 1
	{	if ( time + parm0 > 4.9 && time + parm0 < 5.3 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 ) * ( 1 / 0.4 ) ]
	}

	//image 2: earth
	{	if ( time + parm0 > 5.15 && time + parm0 < 5.65 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_barrenrock
		rotate 1.5
		centerscale 1.2, 1.2
		clamp

		rgb sin010[ ( time + parm0 + 5.15 ) * ( 1 / 0.5 ) ]
	}

	{	if ( time + parm0 > 5.4 && time + parm0 < 5.9 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_barrenrock
		rotate 1.5
		centerscale 0.9, 0.9
		clamp

		rgb sin010[ ( time + parm0 + 5.4 ) * ( 1 / 0.5 ) ]
	}

	{	if ( time + parm0 > 5.5 && time + parm0 < 5.9 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_barrenrock
		rotate 1.5
		centerscale 0.75, 0.75
		clamp

		rgb sin010[ ( time + parm0 + 5.4 ) * ( 1 / 0.4 ) ]
	}

	{	if ( time + parm0 > 5.65 && time + parm0 < 6.15 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_barrenrock
		rotate 1.5
		centerscale 0.6, 0.6
		clamp

		rgb sin010[ ( time + parm0 + 5.65 ) * ( 1 / 0.5 ) ]
	}

	//white edge

	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 5.15 && time + parm0 < 6.15 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}
}

textures/special/keeper_flash5 //We seeded your world, as we have a thousand others
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 2
	{	if ( time + parm0 > 4.15 && time + parm0 < 5.65 )

		blend add
		map _white

		rgb 0.5 * sin010 [ ( time + parm0 + 4.15 ) * ( 1 / 1.5 ) ]
	}

	//image 1: galaxy
	{	if ( time + parm0 > 4.75 && time + parm0 < 5.25 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_galaxy
		rotate ( time / 50 )
		centerscale	1.1, 1.1
		clamp

		rgb 1.15 //* growOut [ ( time + parm0 + 4.75 ) * ( 1 / 0.5 ) ]
	}

	{	if ( time + parm0 > 4.75 && time + parm0 < 6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_galaxies
		scroll (time / 50), (time / 100)
		rotate time / -300
		centerscale	1, 1

		rgb sin010[ ( time + parm0 + 4.75 ) * ( 1 / 1.25 ) ]
		rgb 0.3
	}

	{	if ( time + parm0 > 4.75 && time + parm0 < 6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_galaxy
		rotate time / 300
		centerscale	0.6, 0.6
		clamp

		rgb sin010[ ( time + parm0 + 4.75 ) * ( 1 / 1.25 ) ]
		rgb 0.3
	}

	{	if ( time + parm0 > 5.75 && time + parm0 < 6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_galaxies
		rotate time / 120
		centerscale	.5, .5

		rgb sin010[ ( time + parm0 + 5.75 ) * ( 1 / .25 ) ]
		rgb 0.3
	}

	//white edge

	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//image 2: stars
	{	if ( time + parm0 > 5.25 && time + parm0 < 5.75 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_starfield
		centerscale .7, .7
		rotate ( time / 50 )

		alpha 1.15 * growOut [ ( time + parm0 + 5.25 ) * ( 1 / 0.25 ) ]
	}

	{	if ( time + parm0 > 5 && time + parm0 < 6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield2
		centerscale 1.6, 1.6
		rotate ( time / -60 )

		rgb sin010[ ( time + parm0 + 5 ) * ( 1 / 1 ) ]
	}

	{	if ( time + parm0 > 5.5 && time + parm0 < 6.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate ( time / -20 )

		rgb 0.1 * sin010[ ( time + parm0 + 5.5 ) * ( 1 / 1 ) ]
	}

	//white flash 3
	{	if ( time + parm0 > 9.6 && time + parm0 < 10.6 )

		blend add
		map _white

		rgb 0.5 * sin010 [ ( time + parm0 + 9.6 ) * ( 1 / 1 ) ]
	}

	//image 3: organic life
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_life
		centerscale 0.9 * (pulsebeat [time / 10]), 0.9 * (pulsebeat [time / 20])
		rotate (time / 200)
		clamp

		rgb 1 //* growOut [ ( time + parm0 + 9.85 ) * ( 1 / 0.75 ) ]
	}

	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_life
		rotate time / 120
		centerscale 0.9 * (pulsebeat [time / 10]), 0.9 * (pulsebeat [time / 10])
		clamp

		rgb 0.3 * sin010[ ( time + parm0 + 9.85 ) * ( 1 / 0.75 ) ]
	}

	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_starfield
		rotate time * 0.01
		centerscale (pulsebeat [time / 30]), (pulsebeat [time / 30])

		rgb 0.4 * sin010[ ( time + parm0 + 9.85 ) * ( 1 / 0.75 ) ]
		glowstage
	}

	//white edge

	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 9.85 && time + parm0 < 10.6 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}
}

textures/special/keeper_flash6 //Returning to reap our harvest
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 2 && time + parm0 < 2.3 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 ) * ( 1 / 0.3 ) ]
	}

	//image 1: teeth
	{	if ( time + parm0 > 1.9 && time + parm0 < 2.12 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_teeth
		rotate 1.5
		clamp

		rgb sin010[ ( time + parm0 + 2 ) * ( 1 / 0.22 ) ]
	}
}

textures/special/keeper_flash7 //We own you
{
	qer_editorimage textures/special/keeper_flash_bondage
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ], 1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )

		blend add
		map _white

		rgb 0.5 * sin010[ ( time + parm0 ) * ( 1 / 0.5 ) ]
	}

	//white flash 2
	{	if ( time + parm0 > 1 && time + parm0 < 2.75 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 + 1 ) * ( 1 / 1.75 ) ]
	}

	//image 1: tortured humans
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.65 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_bondage
		rotate 1.6
		clamp

		rgb sin010 [ ( time + parm0 + 1.25 ) * ( 1 / .4 ) ]
	}

	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )

		blend blend
		map textures/special/keeper_flash_meatrack
		scroll 1.5 * time * -0.1, 1
		rotate 1.5

		rgb sin010 [ ( time + parm0 + 1.55 ) * ( 1 / .45 ) ]
	}

	//white edge

	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.5 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.55 && time + parm0 < 2.0 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.5 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	{	if ( time + parm0 > 2.1 && time + parm0 < 2.5 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_bondage
		rotate 0.2
		centerscale 0.6, 0.6
		clamp

		rgb sin010 [ ( time + parm0 + 2.1 ) * ( 1 / .4 ) ]
	}

	//white flash 3
	{	if ( time + parm0 > 6.75 && time + parm0 < 7.25 )

		blend add
		map _white

		rgb 0.3 * sin010[ ( time + parm0 + 6.75 ) * ( 1 / 0.25 ) ]
	}

	//image 2: cherokee?
	{	if ( time + parm0 > 7.0 && time + parm0 < 8.1 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate time / -20
		centerscale 1.3, 1
		clamp

		rgb 0.3 * sin010[ ( time + parm0 + 7.0 ) * ( 1 / 1.1 ) ]
	}
	{	if ( time + parm0 > 7.05 && time + parm0 < 8.1 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate time / 20
		centerscale 1.3, 1
		clamp

		rgb 0.3 * sin010[ ( time + parm0 + 7.05 ) * ( 1 / 1.05 ) ]
	}
	{	if ( time + parm0 > 7.25 && time + parm0 < 8.1 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate time / 50
		centerscale 1.3, 1
		clamp

		rgb 0.2 * sin010[ ( time + parm0 + 7.25 ) * ( 1 / 0.85 ) ]
	}

	{	if ( time + parm0 > 7.35 && time + parm0 < 8.2 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_glyph
		rotate time / 8
		centerscale 1.3, 1
		clamp

		rgb sin010[ ( time + parm0 + 7.35 ) * ( 1 / 0.85 ) ]
	}
}

textures/special/keeper_flash8 //Your spirit is what separates you  from the others
{
	qer_editorimage textures/special/keeper_flash_tommy
	//noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		.009, .1725, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//image 1: spirit
	{	if ( time + parm0 > 1 && time + parm0 < 1.5 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 1.1 * pulsebeat [ 0.5 + time * -0.05 ], 1.1 * pulsebeat [ 0.5 + time * -0.05 ]
		clamp

		rgb 1.5 * sin010 [ ( time + parm0 + 1 ) * ( 1 / .5 ) ]
	}

	{	if ( time + parm0 > 1.15 && time + parm0 < 1.65 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_galaxy
		rotate time * 0.01
		centerscale 0.8 * pulsebeat [ time * 0.1 ], 0.8 * pulsebeat [ time * 0.1 ]
		clamp

		rgb		0.20
	}

	{	if ( time + parm0 > 1.15 && time + parm0 < 1.65 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 0.9 * pulsebeat [ time * -0.1 ], 0.9 * pulsebeat [ time * -0.1 ]
		clamp

		rgb		0.20
	}

	{	if ( time + parm0 > 1.15 && time + parm0 < 1.65 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 1.6 * zerotoonesnap[ ( time * -0.4 ) * ( 1 / 0.5 ) ], 1.6 * zerotoonesnap[ ( time * -0.4 ) * ( 1 / 0.5 ) ]
		clamp

		rgb		0.20 * zerotoonesnap[ 0.0 + time * 0.4 ]
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.75 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 1.6 * zerotoonesnap[ ( 0.25 + time  * -0.4 ) * ( 1 / 0.5 ) ], 1.6 * zerotoonesnap[ ( 0.25 + time  * -0.4 ) * ( 1 / 0.5 ) ]
		clamp

		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.75 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 1.6 * zerotoonesnap[ ( 0.5 + time  * -0.4 ) * ( 1 / 0.5 ) ], 1.6 * zerotoonesnap[ ( 0.5 + time  * -0.4 ) * ( 1 / 0.5 ) ]
		clamp

		rgb		0.20 * zerotoonesnap[ 0.5 + time * 0.4 ]
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_tommy
		rotate 1.5
		centerscale 1.6 * zerotoonesnap[ ( 0.75 + time  * -0.4 ) * ( 1 / 0.5 ) ], 1.6 * zerotoonesnap[ ( 0.75 + time  * -0.4 ) * ( 1 / 0.5 ) ]
		clamp

		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]

		red 	0.05 * zerotoonesnap[ time * 0.4 ]
		green 0.15 * zerotoonesnap[ time * 0.4 ]
		blue	0.25 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]

		red 	0.05 * zerotoonesnap[ 0.25 + time * 0.4 ]
		green 0.2 * zerotoonesnap[ 0.25 + time * 0.4 ]
		blue	0.25 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]

		red 	0.1 * zerotoonesnap[ 0.50 + time * 0.4 ]
		green 0.15 * zerotoonesnap[ 0.50 + time * 0.4 ]
		blue	0.3 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]

		red 	0.05 * zerotoonesnap[ 0.50 + time * 0.4 ]
		green 0.1 * zerotoonesnap[ 0.50 + time * 0.4 ]
		blue	0.25 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.95 )
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]

		red 	0.1 * zerotoonesnap[ 0.75 + time * 0.8 ]
		green 0.15 * zerotoonesnap[ 0.75 + time * 0.8 ]
		blue	0.25 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}
}

table blur2		{ clamp { 1, 1, 0.75, 0.65, 0.25 } }


textures/special/keeper_flash9 //You will become a God
{
	qer_editorimage textures/special/keeper_flash_god
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		textures/special/keeper_flash_mask	//mask

		fragmentparm	0		blur2 [ ( time + parm0 ) * ( 1 / 3.5 ) ] * .009, blur2 [ ( time + parm0 ) * ( 1 / 3 ) ] * .1725, blur2 [ ( time + parm0 ) * ( 1 / 4.2 ) ] * .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0			//pre scale, pre bias
		fragmentparm	2		1				//desateration
		fragmentparm	3		1.9, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.30 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 0 && time + parm0 < 0.5 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 ) * ( 1 / 0.5 ) ]
	}

	//white flash 2
	{	if ( time + parm0 > 4.25 && time + parm0 < 5.5 )

		blend add
		map _white

		rgb sin010[ ( time + parm0 + 4.25 ) * ( 1 / 1.25 ) ]
	}

	{	if ( time + parm0 > 2.25 && time + parm0 < 5.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.3 ],1.2 * zerotoonesnap[ time * -0.3 ]
		rgb		0.3 * zerotoonesnap[ time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 2.4 && time + parm0 < 5.65 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.3 ],1.2 * zerotoonesnap[ -0.25 + time * -0.3 ]
		rgb		0.3 * zerotoonesnap[ 0.25 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 3.5 && time + parm0 < 5.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.3 ],1.2 * zerotoonesnap[ -0.25 + time * -0.3 ]
		rgb		0.3 * zerotoonesnap[ 0.25 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 3.65 && time + parm0 < 5.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.3 ],1.2 * zerotoonesnap[ -0.75 + time * -0.3 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 0.3 ]
		clamp
	}

	//image 1: god
	{	if ( time + parm0 > 4.4 && time + parm0 < 5.15 )

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_god
		rotate 1.5
		clamp

		rgb sin010 [ ( time + parm0 + 4.4 ) * ( 1 / .75 ) ]
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_god
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ time * -0.3 ],1.2 * zerotoonesnap[ time * -0.3 ]
		rgb		0.1 * zerotoonesnap[ time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_god
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.3 ],1.2 * zerotoonesnap[ -0.25 + time * -0.3 ]
		rgb		0.1 * zerotoonesnap[ -0.25 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_god
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -0.3 ],1.2 * zerotoonesnap[ -0.5 + time * -0.3 ]
		rgb		0.1 * zerotoonesnap[ -0.5 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.4 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_god
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.3 ],1.2 * zerotoonesnap[ -0.75 + time * -0.3 ]
		rgb		0.1 * zerotoonesnap[ -0.75 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.35 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ time * -0.3 ],1.2 * zerotoonesnap[ time * -0.3 ]
		rgb		0.08 * zerotoonesnap[ time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.35 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.3 ],1.2 * zerotoonesnap[ -0.25 + time * -0.3 ]
		rgb		0.08 * zerotoonesnap[ -0.25 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.35 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate 1.5
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -0.3 ],1.2 * zerotoonesnap[ -0.5 + time * -0.3 ]
		rgb		0.08 * zerotoonesnap[ -0.5 + time * 0.3 ]
		clamp
	}

	{	if ( time + parm0 > 4.4 && time + parm0 < 5.35 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.3 ],1.2 * zerotoonesnap[ -0.75 + time * -0.3 ]
		rgb		0.08 * zerotoonesnap[ -0.75 + time * 0.3 ]
		clamp
	}
}

table blur3		{ clamp { 0.75, 0.85, 0.95, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 2, 2 } }

textures/special/keeper_flash10 //Your skills are formidable
{
	qer_editorimage textures/special/keeper_flash_light
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			radialblur.vfp

		fragmentmap		0       _currentrender

		fragmentparm	0		.01, blur3 [ ( time + parm0 ) * ( 1 / 7.55 ) ] * .2, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0				//pre scale, pre bias
		fragmentparm	2		1					//desaturation
		fragmentparm	3		1.7, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.8 ],1.2 * zerotoonesnap[ -0.75 + time * -0.8 ]
		rgb		0.20 * zerotoonesnap[ 0.75 + time * 0.8 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 0 && time + parm0 < 0.25 )

		blend add
		map _white

		rgb sin010 [ ( time + parm0 ) * ( 1 / 0.25 ) ]
	}

	//white flash 2
	{	if ( time + parm0 > 6.10 && time + parm0 < 6.20 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010 [ ( time + parm0 + 6.10 ) * ( 1 / 0.10 ) ]
	}

	//accent: power
	{	if ( time + parm0 > 6.10 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -1 ],1.2 * zerotoonesnap[ time * -1 ]
		rgb		0.1 * zerotoonesnap[ time * 1 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -1 ],1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.1 * zerotoonesnap[ -0.25 + time * 1 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -1 ],1.2 * zerotoonesnap[ -0.5 + time * -1 ]
		rgb		0.1 * zerotoonesnap[ 0.5 + time * 1 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -1 ],1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.1 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.15 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -2 ],1.2 * zerotoonesnap[ time * -2 ]
		rgb		0.1 * zerotoonesnap[ time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.15 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -2 ],1.2 * zerotoonesnap[ -0.25 + time * -2 ]
		rgb		0.1 * zerotoonesnap[ -0.25 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.15 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -2 ],1.2 * zerotoonesnap[ -0.5 + time * -2 ]
		rgb		0.1 * zerotoonesnap[ 0.5 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.15 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -2 ],1.2 * zerotoonesnap[ -0.75 + time * -2 ]
		rgb		0.1 * zerotoonesnap[ 0.75 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -1.5 ],1.2 * zerotoonesnap[ time * -1.5 ]
		rgb		0.1 * zerotoonesnap[ time * 1.5 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -1.5 ],1.2 * zerotoonesnap[ -0.25 + time * -1.5 ]
		rgb		0.1 * zerotoonesnap[ -0.25 + time * 1.5 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -1.5 ],1.2 * zerotoonesnap[ -0.5 + time * -1.5 ]
		rgb		0.1 * zerotoonesnap[ 0.5 + time * 1.5 ]
		clamp
	}

	{	if ( time + parm0 > 6.10 && time + parm0 < 7.25 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -1.5 ],1.2 * zerotoonesnap[ -0.75 + time * -1.5 ]
		rgb		0.1 * zerotoonesnap[ 0.75 + time * 1.5 ]
		clamp
	}
}

textures/special/keeper_flash11 //You will fail and we will harvest  your planet
{
	noshadows

	//constant effect
	{
		if fragmentPrograms == 1

		program			radialblur.vfp

		fragmentmap		0       _currentrender

		fragmentparm	0		.01, .4, .65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.5, 0				//pre scale, pre bias
		fragmentparm	2		1					//desaturation
		fragmentparm	3		1.7, .2			//contrast, contrast center
		fragmentparm	4		0, 0, 0, 0	//tint color
		fragmentparm	5		0, 0, 0	//post additive color
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -1 ],1.2 * zerotoonesnap[ 0.00 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ time * 1 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -1 ],1.2 * zerotoonesnap[ -0.25 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ 0.25 + time * 1 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -1 ],1.2 * zerotoonesnap[ -0.50 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ 0.50 + time * 1 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -1 ],1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -1 ],1.2 * zerotoonesnap[ -0.50 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ 0.50 + time * 1 ]
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -1 ],1.2 * zerotoonesnap[ -0.75 + time * -1 ]
		rgb		0.30 * zerotoonesnap[ 0.75 + time * 1 ]
		clamp
	}

	//accent: fail
	{	if ( time + parm0 > 1.25 && time + parm0 < 1.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ time * -2 ],1.2 * zerotoonesnap[ time * -2 ]
		rgb		0.30 * zerotoonesnap[ time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -2 ],1.2 * zerotoonesnap[ -0.25 + time * -2 ]
		rgb		0.30 * zerotoonesnap[ 0.25 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.25 && time + parm0 < 1.5 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -2 ],1.2 * zerotoonesnap[ -0.5 + time * -2 ]
		rgb		0.30 * zerotoonesnap[ 0.5 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.35 && time + parm0 < 1.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ time * -2 ],1.2 * zerotoonesnap[ time * -2 ]
		rgb		0.30 * zerotoonesnap[ time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.35 && time + parm0 < 1.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -2 ],1.2 * zerotoonesnap[ -0.25 + time * -2 ]
		rgb		0.30 * zerotoonesnap[ -0.25 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.35 && time + parm0 < 1.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.5 + time * -2 ],1.2 * zerotoonesnap[ -0.5 + time * -2 ]
		rgb		0.30 * zerotoonesnap[ -0.5 + time * 2 ]
		clamp
	}

	{	if ( time + parm0 > 1.35 && time + parm0 < 1.6 )

		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -2 ],1.2 * zerotoonesnap[ -0.75 + time * -2 ]
		rgb		0.30 * zerotoonesnap[ -0.75 + time * 2 ]
		clamp
	}
}

textures/special/keeper_flash12 //It is over
{
	noshadows
	{ if ( time + parm0 > 0 && time + parm0 < 3 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ time * -0.4 ],1.2 * zerotoonesnap[ 0.00 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ time * 0.4 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 3.5 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.25 + time * -0.4 ],1.2 * zerotoonesnap[ -0.25 + time * -0.4 ]
		rgb		0.20 * zerotoonesnap[ 0.25 + time * 0.4 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 4 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * 0.025
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.10 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 4 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.035
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.10 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 4.5 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light2
		rotate		time * 0.1
		centerscale	1.6 * zerotoonesnap[ -0.50 + time * -0.4 ],1.2 * zerotoonesnap[ -0.50 + time * -0.4 ]
		rgb		0.10 * zerotoonesnap[ 0.50 + time * 0.4 ]
		clamp
	}
	{ if ( time + parm0 > 0 && time + parm0 < 4.5 ) //0 is start time in seconds, 1 is end time in seconds
		blend gl_one,gl_one_minus_src_color
		map textures/special/keeper_flash_light
		rotate		time * -0.1
		centerscale	1.6 * zerotoonesnap[ -0.75 + time * -0.4 ],1.2 * zerotoonesnap[ -0.75 + time * -0.4 ]
		rgb		0.10 * zerotoonesnap[ 0.75 + time * 0.4 ]
		clamp
	}

	//white flash 1
	{	if ( time + parm0 > 0 && time + parm0 < 0.75 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010 [ ( time + parm0 ) * ( 1 / 0.75 ) ]
	}

	//white flash 2
	{	if ( time + parm0 > 1.1 && time + parm0 < 3.1 ) //0 is start time in seconds, 1 is end time in seconds

		blend add
		map _white

		rgb sin010 [ ( time + parm0 + 1.1 ) * ( 1 / 2.0 ) ]
	}

	//accent: over
	{	if ( time + parm0 > 1.35 && time + parm0 < 1.6 ) //0.25 is start time in seconds, 0.5 is end time in seconds

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_teeth
		rotate 1.1
		clamp

		rgb sin010 [ ( time + parm0 + 1.35 ) * ( 1 / 0.25 ) ]
	}

	{	if ( time + parm0 > 1.55 && time + parm0 < 1.8 ) //0.65 is start time in seconds, 0.9 is end time in seconds

		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/keeper_flash_flesh
		rotate 1.5
		centerscale 0.3, 0.4
		clamp

		rgb sin010 [ ( time + parm0 + 1.55 ) * ( 1 / 0.25 ) ]
	}
}

textures/special/bl_overlook_screen
{
	translucent
	noshadows
	twosided

	qer_editorimage textures/special/bl_overlook_screen
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/bl_overlook_screen
		rgb (random [ time * 2 ])
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/bl_overlook_screen_background
	}
}

textures/special/abduction_screenfx
{
	translucent
  {
		if fragmentPrograms == 1

		program			screeneffect.vfp

		fragmentmap		0       _currentrender
		fragmentmap		2		_white	//mask

		fragmentparm	0		0.005 * parm3, 0.1, 1 - 0.45 * parm3 //0.65	//blur size, blur strength, blur lerp
		fragmentparm	1		1.0 + 0.5 * parm3, 0				//pre scale, pre bias
		fragmentparm	2		1									//desateration
		fragmentparm	3		1 + 0.2 * parm3, 0.4 + 0.1 * parm3	//contrast, contrast center
		fragmentparm	4		0, 0.9 * parm3, 0, 0				//tint color
		fragmentparm	5		0, 0.15 * parm3, 0					//post additive color
	}
}

textures/special/keeper_screen1
{
	translucent
	noshadows
	twosided

	qer_editorimage textures/special/keeper_screen1
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen1
		color parm0 * imageflash2[ time * 2 ],
			  parm1 * imageflash2[ time * 2 ],
			  parm2 * imageflash2[ time * 2 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate (time / 50)
		centerscale 1, 1
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen1b
		color parm0 * imageflash1[ time ],
			  parm1 * imageflash1[ time ],
			  parm2 * imageflash1[ time ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen1c
		colored
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen1d
		color parm0 * bus1[ time * 0.5 ],
			  parm1 * bus1[ time * 0.5 ],
			  parm2 * bus1[ time * 0.5 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen1e
		color parm0 * bus2[ time * 0.5 ],
			  parm1 * bus2[ time * 0.5 ],
			  parm2 * bus2[ time * 0.5 ],
			  0
	}
}

textures/special/keeper_screen2
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen2
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen2
		color parm0 * keeperscreen1[ time / 6 ],
			  parm1 * keeperscreen1[ time / 6 ],
			  parm2 * keeperscreen1[ time / 6 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen2b
		color parm0 * keeperscreen2[ time / 6 ],
			  parm1 * keeperscreen2[ time / 6 ],
			  parm2 * keeperscreen2[ time / 6 ],
			  0
	}
	{
		maskcolor
		map	makealpha(textures/special/keeper_screen_alpha)
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen2_scroll1
		scroll time * 0, time / 8
		color parm0 * 0.4,
			  parm1 * 0.4,
			  parm2 * 0.4,
			  0
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen2_scroll2
		scroll time * 0, time / 4
		color parm0 * 0.4,
			  parm1 * 0.4,
			  parm2 * 0.4,
			  0
	}
}

textures/special/keeper_screen3
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen3
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen3
		color parm0 * keeperscreen1[ time / 10 ],
			  parm1 * keeperscreen1[ time / 10 ],
			  parm2 * keeperscreen1[ time / 10 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen3b
		color parm0 * keeperscreen2[ time / 10 ],
			  parm1 * keeperscreen2[ time / 10 ],
			  parm2 * keeperscreen2[ time / 10 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen3c
		color parm0 * bus1[ time / 4 ],
			  parm1 * bus1[ time / 4 ],
			  parm2 * bus1[ time / 4 ],
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen3d
		color parm0 * bus2[ time / 4 ],
			  parm1 * bus2[ time / 4 ],
			  parm2 * bus2[ time / 4 ],
			  0
	}
}

textures/special/keeper_screen4
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen4
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen4
		rotate (time / 50)
		clamp
		color parm0 * 0.9,
			  parm1 * 0.9,
			  parm2 * 0.9,
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen4b
		rotate (time / 140)
		clamp
		color parm0 * 0.5,
			  parm1 * 0.5,
			  parm2 * 0.5,
			  0
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen4c
		rotate (time / 50)
		clamp
		color parm0 * bus2[ time ],
			  parm1 * bus2[ time ],
			  parm2 * bus2[ time ],
			  0
	}
}

textures/special/keeper_screen5
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen5
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		maskcolor
		map	makealpha(textures/special/keeper_screen_alpha)
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen5
		scroll time / 60, time * 0
		colored
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen5b
		scroll time / 10, time * 0
		colored
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen5c
		color parm0 * bus1[ time / 3 ],
			  parm1 * bus1[ time / 3 ],
			  parm2 * bus1[ time / 3 ],
			  0
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen5d
		color parm0 * bus2[ time / 3 ],
			  parm1 * bus2[ time / 3 ],
			  parm2 * bus2[ time / 3 ],
			  0
	}
}

textures/special/keeper_screen6
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen6
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen6
		colored
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen6b
		color parm0 * bus1[ time ],
			  parm1 * bus1[ time ],
			  parm2 * bus1[ time ],
			  0
	}
}

textures/special/keeper_screen7
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen7
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen7
		centerscale (jitter1 [time * 1]), (jitter1 [time * 1])
		centerscale 1.15, 1.15
		clamp
		colored
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen7b
		rotate (rotater [time / 6])
		clamp
		colored
	}
}

textures/special/keeper_screen8
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen8
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen8
		rgb (random [time * 100])
		colored
	}
	{
		maskcolor
		map	makealpha(textures/special/keeper_screen_alpha)
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen2_scroll1
		scroll time * 0, time / -4
		color parm0 * 0.4,
			  parm1 * 0.4,
			  parm2 * 0.4,
			  0
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/keeper_screen2_scroll2
		scroll time * 0, time / -8
		color parm0 * 0.4,
			  parm1 * 0.4,
			  parm2 * 0.4,
			  0
	}
}

textures/special/keeper_screen9
{
	translucent
	noshadows
	twosided
	qer_editorimage textures/special/keeper_screen9
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen_base
		rotate time / 50
		clamp
		colored
		glowstage
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen9
		colored
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/keeper_screen9b
		glowstage
		color parm0 * bus1[ time ] * 0.6,
			  parm1 * bus1[ time ] * 0.6,
			  parm2 * bus1[ time ] * 0.6,
			  0
	}
}

//
//alternate version of the spiritwalk symbol
//

textures/special/spiritwalk
{
	translucent
	noshadows
	//seeThru
	//twosided
	qer_editorimage textures/special/spiritwalk
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spiritwalk
		//vertexcolor
		//colored
		//glowstage
		rgb 0.4
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spiritwalk_glow
		glowstage
		rgb 0.5
		spiritWalk
	}
}

textures/special/spiritwalk_stain1
{
	translucent
	noshadows
	//seeThru
	//twosided
	qer_editorimage textures/special/spiritwalk_stain1
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spiritwalk_stain1
		//glowStage
		rgb 0.5
		spiritWalk
		//vertexcolor
		//colored
	}
}

textures/special/spiritwalk_stain2
{
	translucent
	noshadows
	//seeThru
	//twosided
	qer_editorimage textures/special/spiritwalk_stain2
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/spiritwalk_stain2
		//glowStage
		rgb 0.5
		spiritWalk
		//vertexcolor
		//colored
	}
}

//save -mflynn
//jittering texture that fades in as the player approaches.  add this to func_spiritbridges.
//parm5 adds to the 'fadein complete' distance
//parm6 adds to the 'fadein begin' distance
//parm6 + 200 must be > parm5
//parm4 alters the speed of the jitter. small values of -5 to 5 work best.
// parm7: automatically set to a random number by the spiritbridge code.  used to automatically offset the bridges so they don't pulse in unison -cjr

textures/special/spirit_goo

{

	noshadows
	translucent
	unsmoothedtangents
	//twosided
	qer_editorimage textures/special/spirit_goo_local
	noselfshadow



	// White verts

//bump
	{if ( distance < ( 500 ) )

		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000  ) && distance >= ( 500  ) )

		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )
		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 0
		//rotate time / 400


	}
//diff

	{if ( distance < ( 500 ) )

		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 1 - ( ( distance - (500 ) ) / ( (1000) - (500 ) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )
		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 0
		//rotate time / 400


	}
//spec
	{if ( distance < ( 500 ) )

		blend specularmap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend specularmap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 1 - ( ( distance - (500) ) / ( (1000) - (500) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )

		blend specularmap
		scale 3,3
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 0
		//rotate time / 400


	}

//add
	{if ( distance < ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		//blend gl_src_alpha, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		//rgb alpha[(time * 0.25) + .5] // cjr
		rgb 1
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		rgb  1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


	}
	{if ( distance > 1000 )
		blend gl_one_minus_dst_color, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		rgb 0
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


		}

//add
	{if ( distance < ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		//blend gl_src_alpha, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		//rgb alpha[(time * 0.25) + .5] // cjr
		rgb 1
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		rgb  1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000


	}
	{if ( distance > 500 )
		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		rgb 0
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000

	}

}

//parm5 adds to the 'fadein complete' distance
//parm6 adds to the 'fadein begin' distance
//parm6 + 200 must be > parm5

textures/special/spirit_goo2

{

	noshadows
	translucent
	unsmoothedtangents
	collision
	//twosided
	qer_editorimage textures/special/spirit_goo_local
	noselfshadow



	// White verts

//bump
	{if ( distance < ( 500 ) )

		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000  ) && distance >= ( 500  ) )

		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )
		blend bumpmap
		scale 4,4
		map		textures/special/spirit_goo_local
		rgb 0
		//rotate time / 400


	}
//diff

	{if ( distance < ( 500 ) )

		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 1 - ( ( distance - (500 ) ) / ( (1000) - (500 ) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )
		blend diffusemap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo
		rgb 0
		//rotate time / 400


	}
//spec
	{if ( distance < ( 500 ) )

		blend specularmap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 1
		//rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend specularmap
		scale 4,4
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 1 - ( ( distance - (500) ) / ( (1000) - (500) ) )//dynamic interaction explanation[ (current distance - base) / (max distance - base) = a number between 0 'close' and 1 'far'. 1 - this number = rgb
		//rotate time / 400


	}
	{if ( distance > 1000 )

		blend specularmap
		scale 3,3
		vertexcolor
		map		textures/special/spirit_goo_s
		rgb 0
		//rotate time / 400


	}

//add
	{if ( distance < ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		//blend gl_src_alpha, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		//rgb alpha[(time * 0.25) + .5] // cjr
		rgb 1
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		rgb  1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


	}
	{if ( distance > 1000 )
		blend gl_one_minus_dst_color, gl_one
		scale 3,3
		map textures/special/spirit_goo_add
		glowStage
		rgb 0
		vertexcolor
		scroll time / 1000, time / 1000
		rotate time / 400


		}

//add
	{if ( distance < ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		//blend gl_src_alpha, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		//rgb alpha[(time * 0.25) + .5] // cjr
		rgb 1
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		rgb  1 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000


	}
	{if ( distance > 500 )
		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		glowStage
		rgb 0
		vertexcolor
		rotate time / -700
		scroll time / 1000, time / 1000

	}

}

// textures with special properties

//save -mflynn
//jittering texture that fades in as the player approaches.  add this to func_spiritbridges.
//parm5 adds to the 'fadein complete' distance
//parm6 adds to the 'fadein begin' distance
//parm6 + 200 must be > parm5
//parm4 alters the speed of the jitter. small values of -5 to 5 work best.
// parm7: automatically set to a random number by the spiritbridge code.  used to automatically offset the bridges so they don't pulse in unison -cjr

textures/special/spirit_goo_realworld

{

	noshadows
	translucent
	unsmoothedtangents
	collision
	//twosided
	qer_editorimage textures/special/spirit_goo_local
	noselfshadow
	{

    	program         heatHazeWithMaskAndVertex.vfp
    	vertexParm      1   1                           // texture scrolling
    	vertexParm      1   0.2                          // magnitude of the distortion
    	fragmentMap		0   _currentRender
    	fragmentMap		1   textures/special/spirit_goo_local			// the normal map for distortion
    	fragmentMap     2	textures/sfx/vpring1_alpha   	// the distortion blend map
	}

//add
	{if ( distance < ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		//blend gl_src_alpha, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		//glowStage
		//rgb alpha[(time * 0.25) + .5] // cjr
		rgb 0.6
		vertexcolor
		rotate time / -2000
		scroll time / 2000, time / 2000


	}
	{if ( distance <= ( 1000 ) && distance >= ( 500 ) )

		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		//glowStage
		rgb  0.6 - ( ( distance - (500 ) ) / ( (1000 ) - (500 ) ) )
		vertexcolor
		rotate time / -2000
		scroll time / 2000, time / 2000


	}
	{if ( distance > 500 )
		blend gl_one_minus_dst_color, gl_one
		scale 6,6
		map textures/special/spirit_goo_add
		//glowStage
		rgb 0
		vertexcolor
		rotate time / -2000
		scroll time / 2000, time / 2000

	}

}

textures/special/ghost1
{
	qer_editorimage textures/special/ghost1
	twosided
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/ghost1
		colored
	}
}

textures/special/ghost2
{
	qer_editorimage textures/special/ghost2
	twosided
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/ghost2
		colored
	}
}

//
//spherebrain forcefield panel displays
//

textures/special/sun_crash //image of the sun drawing closer
{
	translucent
	noshadows
	qer_editorimage textures/special/sun
	{
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		centerscale 1.3, 1.3
		rotate time / -50
		clamp
		rgb 0.2
	}
	{
		maskcolor
		map	makealpha(textures/special/sun_mask)
		rotate time / 50
		centerscale 1.3, 1.3
		glowstage
		clamp
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		scroll (time / 15), (time / 200)
		rotate time / 100
		glowstage
		centerscale 1.7, 1.7
		rgb 0.2
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sun_fire
		//scroll (time / -5), (time / -10)
		rotate time / -80
		glowstage
		centerscale 1.2, 1.2
		rgb 0.2
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.027
		centerscale	1.7 * zerotoonesnap[ time * -0.3 ],1.7 * zerotoonesnap[ 0.00 + time * -0.3 ]
		rgb		0.30 * sinTable[ time * 0.3 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.022
		centerscale	1.7 * zerotoonesnap[ -0.25 + time * -0.3 ],1.7 * zerotoonesnap[ -0.25 + time * -0.3 ]
		rgb		0.30 * sinTable[ 0.25 + time * 0.3 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.023
		centerscale	1.7 * zerotoonesnap[ -0.50 + time * -0.3 ],1.7 * zerotoonesnap[ -0.50 + time * -0.3 ]
		rgb		0.30 * sinTable[ 0.50 + time * 0.3 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.018
		centerscale	1.7 * zerotoonesnap[ -0.75 + time * -0.3 ],1.7 * zerotoonesnap[ -0.75 + time * -0.3 ]
		rgb		0.30 * sinTable[ 0.75 + time * 0.3 ]
		glowstage
		clamp
	}
}

textures/special/sun_crash2 //schematics of the sun and the sphere's path towards it
{
	translucent
	noshadows
	qer_editorimage textures/special/sun

	//sun

	{
		blend	gl_src_alpha, gl_one_minus_src_alpha
		map textures/special/sun
		glowstage
		rgb 0.3
		centerscale 7, 7
		rotate time / 100
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun
		glowstage
		rgb 0.3
		centerscale 7, 7
		rotate time / -80
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.027
		centerscale	6.7 * zerotoonesnap[ time * -0.1 ], 6.7 * zerotoonesnap[ 0.00 + time * -0.1 ]
		rgb		0.15 * sinTable[ time * 0.1 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.022
		centerscale	6.7 * zerotoonesnap[ -0.25 + time * -0.1 ], 6.7 * zerotoonesnap[ -0.25 + time * -0.1 ]
		rgb		0.20 * sinTable[ 0.25 + time * 0.1 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * 0.023
		centerscale	6.7 * zerotoonesnap[ -0.50 + time * -0.1 ], 6.7 * zerotoonesnap[ -0.50 + time * -0.1 ]
		rgb		0.15 * sinTable[ 0.50 + time * 0.1 ]
		glowstage
		clamp
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sun_flames
		rotate		time * -0.018
		centerscale	6.7 * zerotoonesnap[ -0.75 + time * -0.1 ], 6.7 * zerotoonesnap[ -0.75 + time * -0.1 ]
		rgb		0.20 * sinTable[ 0.75 + time * 0.1 ]
		glowstage
		clamp
	}

	//grid and readouts

	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun_grid
		rgb 0.4
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun_pointer
		rgb fivestage[ 0 + time * -0.8 ]
		centerscale 0.96, 0.96
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun_pointer
		rgb fivestage[ 0.25 + time * -0.8 ]
		scroll 0.025, 0.05
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun_pointer
		rgb fivestage[ 0.5 + time * -0.8 ]
		scroll 0.046, 0.091
		centerscale 1.04, 1.04
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map textures/special/sun_pointer
		rgb fivestage[ 0.75 + time * -0.8 ]
		scroll 0.065, 0.123
		centerscale 1.08, 1.08
		clamp
	}
	{
		blend gl_one_minus_dst_color, gl_one
		map _white
		color
			parm0 * 1 * (fivestage[ 0.8 + time * -0.8 ]),
			parm1 * 0.07 * (fivestage[ 0.8 + time * -0.8 ]),
			parm2 * 0 * (fivestage[ 0.8 + time * -0.8 ]), 0

		glowstage
	}
}

//exterior green panel
textures/sboss/ff_base
{
	qer_editorimage textures/special/sboss_ff_ripples
	noshadows
	matter_glass
	forceoverlays
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_trim
		colored
	}

	{//green
		blend add
		map	_white
		color
			parm0 * 0.8 * parm5,
			parm1 * 0.8 * parm5,
			parm2 * 0.8 * parm5, 0
		notspiritwalk
	}

	{//green that dims in spirit mode
		blend add
		map	_white
		color
			parm0 * 0.35 * parm5,
			parm1 * 0.35 * parm5,
			parm2 * 0.35 * parm5, 0
		spiritwalk
	}

	{//spiritwalk symbol outer
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_spiritwalk
		rotate time * 0.05
		centerscale 1.1, 1.1
		glowstage
	}
	{//spiritwalk symbol inner
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_spiritwalk2
		rotate time * -0.05
		centerscale 1.1, 1.1
		glowstage
	}

	{
		blend		gl_zero, gl_one_minus_src_color
		map	textures/special/sboss_ff_circuits
		spiritwalk
	}
	{
		blend gl_src_alpha, gl_one
		cubemap	env/sb1
		texgen	reflect
		alpha 0.5
	}

	//when shot with bow
	{
		blend add
		map _white
		rgb 0.17 * parm4 * (random [time * 0.1])
		glowstage
	}
	{//banding
		blend add
		map	textures/special/sboss_ff_banding
		rgb parm4
		scroll time , time * 7
		glowstage
	}
	{//static
		blend add
		map	textures/special/sboss_ff_offline
		rgb parm4
		scroll time * 10 , time * 10
		rotate time * 2
		centerscale 1.5, 1.5
		glowstage
	}
}

//exterior offline panel
textures/sboss/ff_offline
{
	qer_editorimage textures/special/sboss_ff_ripples
	noshadows
	twosided
	//sort postProcess
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_trim
		colored
	}
	{
		blend gl_src_alpha, gl_one
		cubemap	env/sb1
		texgen	reflect
		alpha 0.5
	}
}

textures/sboss/ff_01
{
	qer_editorimage textures/special/sboss_ff_jen1
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_jen2_flash
		centerscale (jitter1 [time * 70]), (jitter6 [time * 70])
		color
			parm0 * ( jenflash1 [ time / -50 ]),
			parm1 * ( jenflash1 [ time / -50 ]),
			parm2 * ( jenflash1 [ time / -50 ]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_jen1_flash
		centerscale (jitter1 [time * 70]), (jitter6 [time * 70])
		color
			parm0 * ( jenflash1 [time / 50]),
			parm1 * ( jenflash1 [time / 50]),
			parm2 * ( jenflash1 [time / 50]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_jen2
		color
			parm0 * ( jenflash2 [time / 6]),
			parm1 * ( jenflash2 [time / 6]),
			parm2 * ( jenflash2 [time / 6]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_jen1
		color
			parm0 * ( jenflash3 [time / 6]),
			parm1 * ( jenflash3 [time / 6]),
			parm2 * ( jenflash3 [time / 6]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		centerscale .7,.7
		scroll time * 0, time / 2
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
   	}
}

textures/sboss/ff_02
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_rotater5
		rotate time / -20
		centerscale .7,.7
		clamp
		color
			parm0 * 0.4,
			parm1 * 0.4,
			parm2 * 0.4, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_rotater4
		rotate (bus2 [time / 2])
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
}

textures/sboss/ff_03
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scroll time * 0, time * 3
		color
			parm0 * (random [time / 3]),
			parm1 * (random [time / 3]),
			parm2 * (random [time / 3]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_sboss_lady
		color
			parm0 * (bus1 [time / 1]),
			parm1 * (bus1 [time / 1]),
			parm2 * (bus1 [time / 1]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_symbol
		color
			parm0 * (random [time * 2]),
			parm1 * (random [time * 2]),
			parm2 * (random [time * 2]), 0
	}
}

textures/sboss/ff_04
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		maskcolor
		map	makealpha(textures/special/sboss_ff_alphamask2)
		rotate (jitter10 [time / -2])
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/special/sboss_ff_type2
		rotate time / 3
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/special/sboss_ff_type2
		rotate time * -3
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop2
		color
			parm0 * (bus1 [time / 3]),
			parm1 * (bus1 [time / 3]),
			parm2 * (bus1 [time / 3]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		scroll time * 0, (rotater [time / 10])
		color
			parm0 * (bus2 [time / 3]),
			parm1 * (bus2 [time / 3]),
			parm2 * (bus2 [time / 3]), 0
   	}
}

textures/sboss/ff_05
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_rotater3
		rotate time / 5
		colored
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_rotater4
		centerscale .9, .9
		rotate (bus1 [time / 7])
		colored
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_rotater2
		rotate (rotater [time / 40])
		colored
	}
}

textures/sboss/ff_06
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scale 2,2
		scroll time * 0, time * 3
		color
			parm0 * (random [time / 3]),
			parm1 * (random [time / 3]),
			parm2 * (random [time / 3]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scale .6,.6
		scroll time * 0, time / 3
		color
			parm0 * (random [time / 3]),
			parm1 * (random [time / 3]),
			parm2 * (random [time / 3]), 0
	}
}

textures/sboss/ff_07
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_creatures1
		color
			parm0 * (bus1[time / 2]),
			parm1 * (bus1[time / 2]),
			parm2 * (bus1[time / 2]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_creatures2
		color
			parm0 * (bus2[time / 2]),
			parm1 * (bus2[time / 2]),
			parm2 * (bus2[time / 2]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		centerscale 2,2
		scroll time * 0, (rotater [time / 20])
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
}

textures/sboss/ff_08
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		maskcolor
		map	makealpha(textures/special/sboss_ff_alphamask1)
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/special/sboss_ff_creatures2
		scroll time * 0, (rotater [time / 2])
		colored
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_backdrop3
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_rotater4
		rotate (jitter10 [time / -15])
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
   	}
}

textures/sboss/ff_09
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_rotater3
		centerscale (jitter2 [time / 5]), (jitter2 [time / 5])
		rotate (rotater [time / 6])
		clamp
		color
			parm0 * 0.7,
			parm1 * 0.7,
			parm2 * 0.7, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_backdrop3
		centerscale .6,.6
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
   	}
}
textures/sboss/ff_10
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_rotater5
		rotate time / -10
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_rotater1
		rotate (bus1 [time / 4])
		clamp
		color
			parm0 * 0.9,
			parm1 * 0.9,
			parm2 * 0.9, 0
   	}
}

textures/sboss/ff_11
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		maskcolor
		map	makealpha(textures/special/sboss_ff_alphamask1)
		centerscale .7,.7
		scroll (rotater [time / 3]), time * 0
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sboss_ff_creatures1
		scroll (time * 0), (time / 2)
		colored
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		scale 1,3
		scroll time * 0, time / 2
		colored
	}
}

textures/sboss/ff_12
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		maskcolor
		map	makealpha(textures/special/sboss_ff_alphamask2)
		centerscale .6,.6
		rotate (rotater [time / -10])
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/special/sboss_ff_backdrop1
		scale 3,3
		rotate time / 20
		colored
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/special/sboss_ff_rotater5
		scale 2,2
		rotate time / -20
		colored
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_type1
		scroll time / -1, (rotater [time * 0])
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
   	}
}

textures/sboss/ff_13
{
	qer_editorimage textures/special/sphereboss_forcefield2
	translucent
	noshadows
	{
		maskcolor
		map	makealpha(textures/special/sboss_ff_alphamask1)
		scroll (time * 0), (rotater [time / 10])
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/sboss_ff_sboss_lady
		color
			parm0 * (random [time / 5]),
			parm1 * (random [time / 5]),
			parm2 * (random [time / 5]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop3
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
}

textures/sboss/ff_14
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_symbol
		centerscale (jitter6 [time / 5]), (jitter6 [time / 5])
		color
			parm0 * (bus1[time / 10]),
			parm1 * (bus1[time / 10]),
			parm2 * (bus1[time / 10]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_symbol
		centerscale .6,.6
		rotate (bus2 [time / 10])
		color
			parm0 * (bus2[time / 10]),
			parm1 * (bus2[time / 10]),
			parm2 * (bus2[time / 10]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scroll time / 3, time * 0
		colored
   	}
}

textures/sboss/ff_15
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scale 1.5,1.5
		scroll time / -2, time * 0
		color
			parm0 * (bus2[time / 1]),
			parm1 * (bus2[time / 1]),
			parm2 * (bus2[time / 1]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scale .5,.5
		scroll time / -2, time * 0
		color
			parm0 * (bus1[time / 1]),
			parm0 * (bus1[time / 1]),
			parm0 * (bus1[time / 1]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		scroll time * 0, time / 2
		color
			parm0 * 0.7,
			parm1 * 0.7,
			parm2 * 0.7, 0
   	}
}

textures/sboss/ff_16
{
	qer_editorimage textures/special/sboss_ff_rotater5
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		scale 1.5,1.5
		scroll time / -2, time * 0
		color
			parm0 * (bus2[time / 1]),
			parm1 * (bus2[time / 1]),
			parm2 * (bus2[time / 1]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_backdrop1
		scale .5,.5
		scroll time / -2, time * 0
		color
			parm0 * (bus1[time / 1]),
			parm1 * (bus1[time / 1]),
			parm2 * (bus1[time / 1]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_symbol
		centerscale 1,.5
		scroll time * 0, time * 2
		color
			parm0 * 0.7,
			parm1 * 0.7,
			parm2 * 0.7, 0
   	}
}

textures/sboss/ff_17
{
	qer_editorimage textures/special/sphereboss_forcefield2
	translucent
	noshadows
	{
		blend add
		map textures/outro/gui_vitals1_xray7
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.000 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.000 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.000 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray6
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.125 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.125 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.125 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray5
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.250 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.250 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.250 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray4
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.375 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.375 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.375 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray3
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.500 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.500 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.500 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray2
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.625 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.625 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.625 + time * 0.8]),
			0
	}
	{
		blend add
		map textures/outro/gui_vitals1_xray1
		centerscale 1.15, 1.15
		clamp
		//scroll 0, .312
		color
			parm0 * 0.7 * (eightstage [0.750 + time * 0.8]),
			parm1 * 1.0 * (eightstage [0.750 + time * 0.8]),
			parm2 * 1.0 * (eightstage [0.750 + time * 0.8]),
			0
	}
}

textures/sboss/ff_18
{
	qer_editorimage textures/special/sboss_ff_jen1
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_creatures1
		centerscale (jitter1 [time * 50]), (jitter6 [time * 50])
		scroll time * 0, time * 3
		color
			parm0 * (imageflash2[time / 10]),
			parm1 * (imageflash2[time / 10]),
			parm2 * (imageflash2[time / 10]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_creatures2
		centerscale (jitter1 [time * 50]), (jitter6 [time * 50])
		scroll time * 0, time * 3
		color
			parm0 * (imageflash1[time / 10]),
			parm1 * (imageflash1[time / 10]),
			parm2 * (imageflash1[time / 10]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scroll time * 0, time * 3
		color
			parm0 * (random [time / 3]),
			parm1 * (random [time / 3]),
			parm2 * (random [time / 3]), 0
	}
}

textures/sboss/ff_19
{
	qer_editorimage textures/special/sboss_ff_jen1
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_type2
		centerscale .6, .6
		rotate time / 20
		clamp
		color
			parm0 * 0.7,
			parm1 * 0.7,
			parm2 * 0.7, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_type2
		rotate time * -3
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map	textures/special/sboss_ff_rotater3
		centerscale .4,.4
		clamp
		color
			parm0 * 0.5,
			parm1 * 0.5,
			parm2 * 0.5, 0
   	}
}

textures/sboss/ff_20
{
	qer_editorimage textures/special/sboss_ff_jen1
	translucent
	noshadows
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_freak1
		centerscale (jitter1 [time * 70]), (jitter6 [time * 70])
		color
			parm0 * (imageflash2[time / 6]),
			parm1 * (imageflash2[time / 6]),
			parm2 * (imageflash2[time / 6]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_freak2
		centerscale (jitter1 [time * 70]), (jitter6 [time * 70])
		color
			parm0 * (imageflash1[time / 6]),
			parm1 * (imageflash1[time / 6]),
			parm2 * (imageflash1[time / 6]), 0
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/special/sboss_ff_type1
		scale 2,2
		scroll time * 0, time * 3
		color
			parm0 * (random [time / 3]),
			parm1 * (random [time / 3]),
			parm2 * (random [time / 3]), 0
	}
}

textures/special/spirit
{
	qer_editorimage textures/special/spirit_swirls
	twosided
	{

		blend add
		map	textures/special/spirit_swirls
		scroll time * 0, time / 150 * ( parm7 + 1 )
		rotate	time / -130
		scale 0.5, 0.5
		glowstage
		rgb twostage [0.1 * time + 1 / 3]
	}
	{
		blend add
		map	textures/special/spirit_clouds1
		scroll time * 0, time / 150 * ( parm7 + 1 )
		rotate	time / 200
		glowstage
		rgb twostage [-0.2 * time + 1 / 3]
	}
	{
		blend add
		map	textures/special/spirit_swirls
		//scroll time * 0, time / 90 * ( parm7 + 1 )
		rotate	time / 100
		glowstage
		rgb twostage [0.1 * time + 1 / 10]
	}
}

// E3 DEMO SHOT IMAGE
textures/special/E3PreyLogo
{
	noshadows
	noselfshadow

	{
		map textures/special/e3preylogo
	}
}

// E3 DEMO SHOT IMAGE
textures/special/E3PreyLogoEnd
{
	noshadows
	noselfshadow

	{
		map textures/special/e3preylogo
//		map textures/special/e3preylogoend
	}
}


/*
	forcefield values:
		parm0 - 3	:		rgba
		parm4		:		used for fading the color when the forcefield is turned off
		parm7		:		0, normally.  instantly becomes 1 when the forcefield it hit, and then interpolates back to 0 over time
*/
textures/special/forcefield
{
	qer_editorimage		textures/special/forcefield1_back
	forcefield	// required for forcefield functionality
	noshadows
	{
		blend add
		map textures/special/forcefield1_back
		red (alpha [time * .5]) * parm0 * parm4 + parm7 // flash red when hit (parm7)
		blue (alpha [time * .5]) * parm1 * parm4
		green (alpha [time * .5]) * parm2 * parm4
		scroll time * 0.3, (0.1 * sintable [time* 0.3])
		scale (jitter3 [time * .85]), (jitter3 [time * .85])
	}
	{
		blend add
		map textures/special/forcefield1_back2
		red (alpha_opp [time * .5]) * parm0 * parm4 + parm7 // flash red when hit (parm7)
		blue (alpha_opp [time * .5]) * parm1 * parm4
		green (alpha_opp [time * .5]) * parm2 * parm4
		scroll  time * 0.3, (0.1 * sintable [time* 0.3])
		scale (jitter3 [time * .85]), (jitter3 [time * .85])
	}
	{
		blend add
		map textures/special/forcefield1_front1
		scroll  costable[time * 4]*0.03, sintable[time * 7]*0.03
		centerscale	2, 2
		rotate		time * -4
		red		parm4 + parm7 // flash red when hit (parm7)
		blue	parm4
		green	parm4
	}
	{
		blend add
		map	textures/special/forcefield1_front1
		scroll costable[time * 9]*0.03,sintable[time * 6]*0.03
		centerscale	scale_1jitter[ time * 0.09 ], scale_1jitter[ time * 0.11 ]
		rotate		time * 2
		red		parm4 + parm7 // flash red when hit (parm7)
		blue	parm4
		green	parm4
	}
}

textures/special/forcefield2
{
	qer_editorimage textures/special/forcefield2_proxy
	forcefield
	noshadows
	translucent
	{
		program			heathaze.vfp
		vertexparm		0       time * 0.1 , time * 0.2	// texture scrolling
		vertexparm		1       parm4 * 4.0			// magnitude of the distortion
		fragmentprogram		heathaze.vfp
		fragmentmap		0       _currentrender
		fragmentmap		1       textures/glass/vp1	// the normal map for distortion
	}
	{
		maskcolor
		map	makealpha(textures/special/forcefield2_mask)
	}
	{

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.025 ] * 0.5 ) , 1
		scroll time * 100, time * 0.034 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( sintable[ -0.25 + ( time * 0.15 ) ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.035 ] * 0.5 ) , 1
		scroll time * 100, time * -0.044 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( costable[ time * 0.15 ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		if( parm7 != 0 )
		blend add
		map textures/special/forcefield2b
		scroll 0, random[ time ]
		scale 0, random[ time ] * 2
		rgb parm7
	}
}

textures/special/forcefield2_2
{
	qer_editorimage textures/special/forcefield2_proxy
	forcefield
	noshadows
	translucent
	{
		program			heathaze.vfp
		vertexparm		0       time * 0.1 , time * 0.2	// texture scrolling
		vertexparm		1       parm4 * 4.0			// magnitude of the distortion
		fragmentprogram		heathaze.vfp
		fragmentmap		0       _currentrender
		fragmentmap		1       textures/glass/vp1	// the normal map for distortion
	}
	{
		maskcolor
		map	textures/special/forcefield2_d2
	}
	{

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.025 ] * 0.5 ) , 1
		scroll time * 100, time * 0.034 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( sintable[ -0.25 + ( time * 0.15 ) ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.035 ] * 0.5 ) , 1
		scroll time * 100, time * -0.044 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( costable[ time * 0.15 ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		if( parm7 != 0 )
		blend add
		map textures/special/forcefield2b
		scroll 0, random[ time ]
		scale 0, random[ time ] * 2
		rgb parm7
	}
}

/*
textures/glass/testglass_pxl
{
	noselfshadow
	noshadows
	twosided
	translucent
	forceoverlays

	qer_editorimage textures/glass/glass2
	{
		program			heathaze.vfp	//-- uncomment after merge gb

		vertexparm		0       time * 0 , time * 0	// texture scrolling
		vertexparm		1       1			// magnitude of the distortion
		fragmentprogram		heathaze.vfp
		fragmentmap		0       _currentrender
		fragmentmap		1       textures/glass/vp1	// the normal map for distortion
	}
	{
		maskcolor
		map	makealpha(textures/glass/glass2)
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		cubemap	env/gen2
		red	parm0
		green 	parm1
		blue	parm2
		texgen	reflect
	}
}
*/

textures/special/forcefield2_twosided
{
	qer_editorimage textures/special/forcefield2_proxy
	forcefield
	noshadows
	twosided
	{
		blend add
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.025 ] * 0.5 ) , 1
		scroll time * 100, time * 0.034 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( sintable[ -0.25 + ( time * 0.15 ) ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		blend add
		map textures/special/forcefield2
		scale ( forcefieldflicker[ time * 0.035 ] * 0.5 ) , 1
		scroll time * 100, time * -0.044 * ( parm7 + 1 )
		rgb parm4 * ( 1 + parm7) * ( ( ( costable[ time * 0.15 ] )+ 1 ) / 2 ) * ( ( sintable[ time * 2.0 ] / 6 ) + 1 )
	}
	{
		if( parm7 != 0 )
		blend add
		map textures/special/forcefield2b
		scroll 0, random[ time ]
		scale 0, random[ time ] * 2
		rgb parm7
	}
}

textures/special/forcefield_planet
{
	qer_editorimage		textures/special/forcefield1_back
	forcefield	// required for forcefield functionality
	noshadows
	{
		blend add
		map textures/special/forcefield1_back
		red (alpha [time * .5]) * parm0 * parm4
		blue (alpha [time * .5]) * parm1 * parm4
		green (alpha [time * .5]) * parm2 * parm4
		scroll time * 0.3, (0.1 * sintable [time* 0.3])
		scale (jitter3 [time * .85]), (jitter3 [time * .85])
	}
	{
		blend add
		map textures/special/forcefield1_back2
		red (alpha_opp [time * .5]) * parm0 * parm4
		blue (alpha_opp [time * .5]) * parm1 * parm4
		green (alpha_opp [time * .5]) * parm2 * parm4
		scroll  time * 0.3, (0.1 * sintable [time* 0.3])
		scale (jitter3 [time * .85]), (jitter3 [time * .85])
	}
	{
		blend add
		map textures/special/forcefield2
		scroll  costable[time * 4]*0.03, sintable[time * 7]*0.03
		centerscale	2,2
		rotate		time * -4
		rgb	parm7
	}
	{
		blend add
		map	textures/special/forcefield1_front1
		scroll costable[time * 9]*0.03,sintable[time * 6]*0.03
		centerscale	scale_1jitter[ time * 0.09 ], scale_1jitter[ time * 0.11 ]
		rotate		time * 2
		rgb	parm7
	}
}




// texture representing tethergun strip that is not currently active
textures/special/tetherstripoff
{
	qer_editorimage 	textures/special/tetherstrip_d
	matter_metal

	bumpmap 		addnormals (textures/special/tetherstrip_local, heightmap (textures/special/tetherstrip_h, 6))
	diffusemap	 	textures/special/tetherstrip_d
	specularmap		textures/special/tetherstrip_s
}

// texture representing tethergun strip that is operational
textures/special/tetherstrip
{
	qer_editorimage 	textures/special/tetherstrip_d
	matter_metal

	bumpmap 		addnormals (textures/special/tetherstrip_local, heightmap (textures/special/tetherstrip_h, 6))
	diffusemap	 	textures/special/tetherstrip_d
	specularmap		textures/special/tetherstrip_s

	{
		blend add
		map textures/special/tetherstrip_add3
		rgb 0.9
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add9
		rgb threestage  [time * 1 + 0 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add8
		rgb threestage  [time * 1 + 1 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add7
		rgb threestage  [time * 1 + 2 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add6
		rgb threestage  [time * 1 + 3 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add5
		rgb threestage  [time * 1 + 4 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add4
		rgb threestage  [time * 1 + 5 / 6] - .1
//		clamp
	}
	{
		blend add
		map textures/special/tetherstrip_add10
		rgb threestage  [time * 1 + 5 / 6] - .1
//		clamp
	}
}

// texture representing tetherwalk strip that is not currently active
textures/special/tetherwalkoff
{
	qer_editorimage 	textures/special/tetherwalk_d
	matter_metal

	bumpmap 		addnormals (textures/special/tetherwalk_local, heightmap (textures/special/tetherwalk_h, 6))
	diffusemap	 	textures/special/tetherwalk_d
	specularmap		textures/special/tetherwalk_s

}

// temp version for gravity vectors
textures/special/tetherstrip_gvec
{
	qer_editorimage	textures/special/tetherstrip_d
	matter_metal
	bumpmap
	addnormals		(textures/special/tetherstrip_local,
	heightmap		(textures/special/tetherstrip_h, 6))
	diffusemap	 	textures/special/tetherstrip_d
	specularmap		textures/special/tetherstrip_s
	{
		blend add
		map textures/special/tetherstrip_add3
		color 0.0,0.9,0.0,0.0
	}
	{
		blend add
		map textures/special/tetherstrip_add9
		color 0, threestage  [time * 1 + 0 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add8
		color 0, threestage  [time * 1 + 1 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add7
		color 0, threestage  [time * 1 + 2 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add6
		color 0, threestage  [time * 1 + 3 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add5
		color 0, threestage  [time * 1 + 4 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add4
		color 0, threestage  [time * 1 + 5 / 6] - .1, 0, 0
	}
	{
		blend add
		map textures/special/tetherstrip_add10
		color 0, threestage  [time * 1 + 5 / 6] - .1, 0, 0
	}
}


//------------------------------------------------------------
// wall walk textures
//------------------------------------------------------------

// used on func_wallwalk geometry when wallwalk is on
textures/special/wallwalkfadeon
{
	wallwalk
	qer_editorimage textures/special/wall_walk_proxy

	diffusemap textures/special/wall_walk_d
 	specularmap textures/special/wall_walk_s
	bumpmap	textures/special/wall_walk_local

	{	// this layer is faded in/out in code
		blend add
		map textures/special/wall_walk_a
		color 	0.78 * (jitter5 [time * 2]) * parm4,
				0.97 * (jitter5 [time * 2]) * parm4,
				1.0 * (jitter5 [time * 2]) * parm4,
				1
		glowStage
	}
}

// used on func_wallwalk geometry when wallwalk is off
textures/special/wallwalkfadeoff
{
	matter_metal
	qer_editorimage textures/special/wall_walk_proxy

	diffusemap textures/special/wall_walk_d
 	specularmap textures/special/wall_walk_s
	bumpmap	textures/special/wall_walk_local

	{	// this layer is faded in/out in code
		blend add
		map textures/special/wall_walk_a
		color 	0.78 * (jitter5 [time * 2]) * parm4,
				0.97 * (jitter5 [time * 2]) * parm4,
				1.0 * (jitter5 [time * 2]) * parm4,
				1
		glowStage
	}
}

// texture representing wallwalk surface that is not currently active
// this is for placing on world geometry only
textures/special/wallwalkoff
{
	matter_metal
	qer_editorimage textures/special/wall_walk_proxy

	diffusemap textures/special/wall_walk_d
 	specularmap textures/special/wall_walk_s
	bumpmap	textures/special/wall_walk_local

	{
		blend add
		map textures/special/wall_walk_a
		color 	0.78 * (jitter5 [time * 2]),
				0.97 * (jitter5 [time * 2]),
				1.00 * (jitter5 [time * 2]),
				1
		glowStage
	}
}

// texture representing wallwalk surface that is operational
// this is for placing on world geometry only
textures/special/wallwalk
{
	wallwalk

	qer_editorimage textures/special/wall_walk_proxy

	diffusemap textures/special/wall_walk_d
 	specularmap textures/special/wall_walk_s
	bumpmap	textures/special/wall_walk_local

	{
		blend add
		map textures/special/wall_walk_a
		color 	0.78 * (jitter5 [time * 2]),
				0.97 * (jitter5 [time * 2]),
				1.00 * (jitter5 [time * 2]),
				1
		glowStage
	}
}

// harvester complex special ww for corkscrew
textures/tech_trim/bio_trim_353_wallwalk
{
	qer_editorimage 	textures/tech_trim/bio_trim_353_d
	wallwalk

	bumpmap 		textures/tech_trim/bio_trim_353_local
	diffusemap	 	textures/tech_trim/bio_trim_353_d
	specularmap		textures/tech_trim/bio_trim_353_s
}

// "cheater" border texture for decorating wall-walk on elevators and such
textures/special/wallwalk_border
{
	wallwalk

	qer_editorimage textures/special/wallwalktrim_001_d
	bumpmap		addnormals (textures/special/wallwalktrim_001_local,
			heightmap  (textures/special/wallwalktrim_001_h, 6) )
	diffusemap	textures/special/wallwalktrim_001_d
	specularmap	textures/special/wallwalktrim_001_s
	{
		blend	add
		map		textures/special/wallwalktrim_001_add
		color	0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    1.0
		glowStage
	}
}

// border used on func_wallwalk geometry when wallwalk is initially off
textures/special/wallwalk_borderfadeoff
{
	matter_metal

	qer_editorimage textures/special/wallwalktrim_001_d
	bumpmap		addnormals (textures/special/wallwalktrim_001_local,
			heightmap  (textures/special/wallwalktrim_001_h, 6) )
	diffusemap	textures/special/wallwalktrim_001_d
	specularmap	textures/special/wallwalktrim_001_s
	{
		blend	add
		map		textures/special/wallwalktrim_001_add
		color	(0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    (0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    (1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    1.0
		glowStage
	}
}

// border used on func_wallwalk geometry when wallwalk is initially on
textures/special/wallwalk_borderfadeon
{
	wallwalk

	qer_editorimage textures/special/wallwalktrim_001_d
	bumpmap		addnormals (textures/special/wallwalktrim_001_local,
			heightmap  (textures/special/wallwalktrim_001_h, 6) )
	diffusemap	textures/special/wallwalktrim_001_d
	specularmap	textures/special/wallwalktrim_001_s
	{
		blend	add
		map		textures/special/wallwalktrim_001_add
		color	(0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    (0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    (1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    1.0
		glowStage
	}
}

textures/special/wallwalk_cornertrim
{
	wallwalk

	qer_editorimage textures/special/wallwalktrim_001b_local
	{
		blend bumpmap
		map	addnormals (textures/special/wallwalktrim_001b_local,
			heightmap  (textures/special/wallwalktrim_001b_h, 6))
		clamp
	}
	{
		blend diffusemap
		map	textures/special/wallwalktrim_001b
		clamp
	}
	{
		blend specularmap
		map	textures/special/wallwalktrim_001b_s
		clamp
	}
	{
		blend	add
		map		textures/special/wallwalktrim_001b_add
		color	0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
			    1.0
		glowStage
		clamp
	}
}

textures/special/wallwalk_cornertrimfadeoff
{
	matter_metal

	qer_editorimage textures/special/wallwalktrim_001b_local
	{
		blend bumpmap
		map	addnormals (textures/special/wallwalktrim_001b_local,
			heightmap  (textures/special/wallwalktrim_001b_h, 6))
		clamp
	}
	{
		blend diffusemap
		map	textures/special/wallwalktrim_001b
		clamp
	}
	{
		blend specularmap
		map	textures/special/wallwalktrim_001b_s
		clamp
	}
	{
		blend	add
		map		textures/special/wallwalktrim_001b_add
		color	( 0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    ( 0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    ( 1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    1.0
		glowStage
		clamp
	}
}

textures/special/wallwalk_cornertrimfadeon
{
	wallwalk

	qer_editorimage textures/special/wallwalktrim_001b_local
	{
		blend bumpmap
		map	addnormals (textures/special/wallwalktrim_001b_local,
			heightmap  (textures/special/wallwalktrim_001b_h, 6))
		clamp
	}
	{
		blend diffusemap
		map	textures/special/wallwalktrim_001b
		clamp
	}
	{
		blend specularmap
		map	textures/special/wallwalktrim_001b_s
		clamp
	}
	{
		blend	add
		map		textures/special/wallwalktrim_001b_add
		color	( 0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    ( 0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    ( 1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] ))) * parm4,
			    1.0
		glowStage
		clamp
	}
}

// "cheater" border texture for decorating wall-walk on elevators and such, wallwalk disabled
textures/special/wallwalk_border_nowallwalk
{

	qer_editorimage textures/special/wallwalktrim_001_d
	bumpmap		addnormals (textures/special/wallwalktrim_001_local,
			heightmap  (textures/special/wallwalktrim_001_h, 6) )
	diffusemap	textures/special/wallwalktrim_001_d
	specularmap	textures/special/wallwalktrim_001_s
	{
		blend	add
		map		textures/special/wallwalktrim_001_add
		color	parm0 * 0.623529 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
				parm1 * 0.909804 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
				parm2 * 1.000000 * ( 0.75 + ( 0.25 * sintable [ time * 0.5 ] )),
				1.0
		glowStage
	}
}



//==========================================
//
//
//
//	 crawlerweb
//
//
//
//===========================================

table webstepopen { snap { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }


textures/special/crawlerweb_open1
{
	twosided
	translucent

	qer_editorimage 	textures/special/crawlerweb/crawlerweb_d

	bumpmap 		addnormals (textures/special/crawlerweb/crawlerweb_local, heightmap (textures/special/crawlerweb/crawlerweb_h, 6))
//	diffusemap	 	textures/crawlerweb/membrane1_d
//	specularmap		textures/crawlerweb/membrane1_s


	{
		if(webstepopen[(time + parm4) - 0 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00000
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 1 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00001
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 2 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00002
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 3 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00003
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 4 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00004
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 5 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00005
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 6 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00006
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 7 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00007
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 8 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00008
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 9 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00009
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 10 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00010
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 11 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00011
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 12 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00012
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 13 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00013
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 14 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00014
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 15 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00015
		blend diffusemap
	}
	{
		if(webstepopen[(time + parm4) - 16 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_open00016
		blend diffusemap
	}


//spec maps


	{
		if(webstepopen[(time + parm4) - 0 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00000
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 1 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00001
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 2 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00002
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 3 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00003
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 4 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00004
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 5 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00005
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 6 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00006
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 7 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00007
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 8 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00008
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 9 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00009
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 10 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00010
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 11 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00011
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 12 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00012
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 13 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00013
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 14 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00014
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 15 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00015
		blend specularmap
	}
	{
		if(webstepopen[(time + parm4) - 16 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_s_open00016
		blend specularmap
	}

//add maps


	{
		if(webstepopen[(time + parm4) - 0 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00000
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 1 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00001
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 2 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00002
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 3 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00003
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 4 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00004
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 5 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00005
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 6 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00006
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 7 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00007
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 8 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00008
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 9 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00009
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 10 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00010
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 11 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00011
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 12 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00012
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 13 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00013
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 14 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00014
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 15 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00015
		blend add  rgb (jitter5 [time * 2])
	}
	{
		if(webstepopen[(time + parm4) - 16 / 17] == 1)
		map textures/special/crawlerweb/crawlerweb1_add_open00016
		blend add  rgb (jitter5 [time * 2])
	}

}


textures/special/logo_head
{
	qer_editorimage textures/special/head_d

	diffusemap textures/special/head_d
	{
		blend add
		map textures/special/head_a
		rgb (jitter5 [time * 2])
	}
}

textures/special/logo_3dr
{
	qer_editorimage textures/special/3dr_d

	diffusemap textures/special/3dr_d
	{
		blend add
		map textures/special/3dr_d
		rgb (jitter5 [time * 2])
	}
}
textures/special/logo_prey
{
	qer_editorimage textures/special/prey_d

	diffusemap textures/special/prey_d
	{
		blend add
		map textures/special/prey_d
		rgb (jitter5 [time * 2])
	}
}


textures/special/gibwall_org1a
{
	qer_editorimage	textures/special/gibwall_org1a_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org1a_local,
		heightmap	(textures/special/gibwall_org1a_h,13))
	diffusemap		textures/special/gibwall_org1a_d
	specularmap		textures/special/gibwall_org1a_s
}

textures/special/gibwall_org1b
{
	qer_editorimage	textures/special/gibwall_org1b_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org1b_local,
		heightmap	(textures/special/gibwall_org1b_h,13))
	diffusemap		textures/special/gibwall_org1b_d
	specularmap		textures/special/gibwall_org1b_s
}


textures/special/gibwall_org1c
{
	qer_editorimage	textures/special/gibwall_org1c_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org1c_local,
		heightmap	(textures/special/gibwall_org1c_h,13))
	diffusemap		textures/special/gibwall_org1c_d
	specularmap		textures/special/gibwall_org1c_s
}

textures/special/gibwall_org2a
{
	qer_editorimage	textures/special/gibwall_org2a_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org2a_local,
		heightmap	(textures/special/gibwall_org2a_h,7))
	diffusemap		textures/special/gibwall_org2a_d
	specularmap		textures/special/gibwall_org2a_s
}

textures/special/gibwall_org2b
{
	qer_editorimage	textures/special/gibwall_org2b_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org2b_local,
		heightmap	(textures/special/gibwall_org2b_h,7))
	diffusemap		textures/special/gibwall_org2b_d
	specularmap		textures/special/gibwall_org2b_s
}


textures/special/gibwall_org2c
{
	qer_editorimage	textures/special/gibwall_org2c_d
	matter_flesh
	bumpmap
		addnormals 	(textures/special/gibwall_org2c_local,
		heightmap	(textures/special/gibwall_org2c_h,7))
	diffusemap		textures/special/gibwall_org2c_d
	specularmap		textures/special/gibwall_org2c_s
}

textures/special/gibwall_chit1a
{
	qer_editorimage	textures/special/gibwall_chit1a_d
	matter_metal
	bumpmap
		addnormals 	(textures/special/gibwall_chit1a_local,
		heightmap	(textures/special/gibwall_chit1a_h,6))
	diffusemap		textures/special/gibwall_chit1a_d
	specularmap		textures/special/gibwall_chit1a_s
}

textures/special/gibwall_chit1b
{
	qer_editorimage	textures/special/gibwall_chit1b_d
	matter_metal
	bumpmap
		addnormals 	(textures/special/gibwall_chit1b_local,
		heightmap	(textures/special/gibwall_chit1b_h,6))
	diffusemap		textures/special/gibwall_chit1b_d
	specularmap		textures/special/gibwall_chit1b_s
}

textures/special/podbreakwall
{
	qer_editorimage	textures/special/podbreakwall_d
	matter_altmetal

	bumpmap			addnormals 	(textures/special/podbreakwall_local,
					heightmap	(textures/special/podbreakwall_h, 6 ))
	specularmap		textures/special/podbreakwall_s
	{
		blend diffusemap
		map	textures/special/podbreakwall_d
	}
	{
		map	textures/special/podbreakwall_d
		maskColor
	}
	{
		blend add
		map textures/special/podbreakwall_add
		rgb ( jitter10 [time * 0.2])
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/mapobjects/floatpod/floatpodfx
		translate	 time * 0.04 , time * .03
		scale 2 , 2
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/mapobjects/floatpod/floatpodfx2
		translate	 time * .01 , time *0.02
		scale 2 , 2
	}
}

textures/special/podbreakwall2
{
	qer_editorimage	textures/special/podbreakwall_d
	matter_altmetal

	bumpmap			addnormals 	(textures/special/podbreakwall_local,
					heightmap	(textures/special/podbreakwall_h, 16 ))
	specularmap		textures/special/podbreakwall_s
	{
		blend diffusemap
		map	textures/special/podbreakwall_d
	}
	{
		map	textures/special/podbreakwall_d
		maskColor
	}


	{
		blend gl_dst_alpha , gl_one
		map textures/special/podbreakwall_add
		rgb ( jitter2 [time * 0.2])
	}

	{
		blend		gl_dst_alpha , gl_one
		map models/mapobjects/floatpod/floatpodfx
		translate	 time * 0.04 , time * .03
		rgb 0.5
		scale 2 , 2
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/mapobjects/floatpod/floatpodfx2
		translate	 time * -.01 , time * -0.02
		rgb 0.5
		scale 2 , 2
	}
}

textures/special/beamtrim_001
{
	qer_editorimage		textures/special/beamtrim_001_d
	matter_metal
	bumpmap			textures/special/beamtrim_001_local
	diffusemap		textures/special/beamtrim_001_d
	specularmap		textures/special/beamtrim_001_s
	{
		blend add
		map textures/special/beamtrim_001_add1
		scroll	time * 8, 0.0
		color
		parm0 * ((jitter1 [time * 2])),
		parm1 * ((jitter1 [time * 2])),
		parm2 * ((jitter1 [time * 2])),
		1.0
	}
	{
		blend add
		map textures/special/beamtrim_001_add2
		scroll	time * -9, 0.0
		color
		parm0 * ((jitter1 [time * 4])),
		parm1 * ((jitter1 [time * 4])),
		parm2 * ((jitter1 [time * 4])),
		1.0
	}
}

textures/special/beamtrim_001_lwm
{
	qer_editorimage		textures/special/beamtrim_001_d
	matter_metal
	lightWholeMesh
	bumpmap			textures/special/beamtrim_001_local
	diffusemap		textures/special/beamtrim_001_d
	specularmap		textures/special/beamtrim_001_s
	{
		blend add
		map textures/special/beamtrim_001_add1
		scroll	time * 8, 0.0
		color
		parm0 * ((jitter1 [time * 2])),
		parm1 * ((jitter1 [time * 2])),
		parm2 * ((jitter1 [time * 2])),
		1.0
	}
	{
		blend add
		map textures/special/beamtrim_001_add2
		scroll	time * -9, 0.0
		color
		parm0 * ((jitter1 [time * 4])),
		parm1 * ((jitter1 [time * 4])),
		parm2 * ((jitter1 [time * 4])),
		1.0
	}
}

textures/special/beamtrim_001b
{
	qer_editorimage		textures/special/beamtrim_001b_d
	matter_metal
	bumpmap			textures/special/beamtrim_001b_local
	diffusemap		textures/special/beamtrim_001b_d
	specularmap		textures/special/beamtrim_001b_s

}

textures/special/beamgibber_001
{
	twosided
	noshadows
	nonsolid
	qer_editorimage		textures/special/beamgibber_001

	{
		blend add
		map textures/special/beamgibber_001
		color
		parm0 * ((jitter1 [time * 12]))*3,
		parm1 * ((jitter1 [time * 12]))*3,
		parm2 * ((jitter1 [time * 12]))*3,
		1.0
	}
}


//-------------------------------------------
//   turbine hologram
//-------------------------------------------
textures/special/turbine_hologram1
{
	translucent
	noshadows
	nonsolid
	sort close
	qer_editorimage 	textures/special/turbine_hologram1_add
	deform jitter jacobladder[time * 20]

	{if ( parm4 == 0 )
		blend bumpmap
		map textures/special/turbine_hologram1_local
	}
	{if ( parm4 == 0 )
		blend specularmap
		map textures/special/turbine_hologram1_s
	}
	{if ( parm4 == 0 )
		blend	diffusemap
		map textures/special/turbine_hologram1_d
	}
	{if ( parm4 == 0 )
		blend add
		map textures/special/turbine_hologram1_add
		rgb ( powersurge [time * 3] )
	}

	{if ( parm4 != 0 )
		blend bumpmap
		map textures/special/turbine_hologram1_local
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend specularmap
		map textures/special/turbine_hologram1_s
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend	diffusemap
		map textures/special/turbine_hologram1_d
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend add
		map textures/special/turbine_hologram1_add
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
}
textures/special/turbine_hologram1b
{
	translucent
	noshadows
	nonsolid
	sort close
	qer_editorimage 	textures/special/turbine_hologram1b_add
	deform jitter jacobladder[time * 20]

//	bumpmap 		textures/special/turbine_hologram1_local
//	specularmap		textures/special/turbine_hologram1_s
//	{
//		blend	diffusemap
//		map textures/special/turbine_hologram1_d
//	}
//	{
//		blend add
//		map textures/special/turbine_hologram1b_add
//		rgb ( powersurge [time * 3] )
//	}

	{if ( parm4 == 0 )
		blend bumpmap
		map textures/special/turbine_hologram1_local
	}
	{if ( parm4 == 0 )
		blend specularmap
		map textures/special/turbine_hologram1_s
	}
	{if ( parm4 == 0 )
		blend	diffusemap
		map textures/special/turbine_hologram1_d
	}
	{if ( parm4 == 0 )
		blend add
		map textures/special/turbine_hologram1b_add
		rgb ( powersurge [time * 3] )
	}

	{if ( parm4 != 0 )
		blend bumpmap
		map textures/special/turbine_hologram1_local
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend specularmap
		map textures/special/turbine_hologram1_s
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend	diffusemap
		map textures/special/turbine_hologram1_d
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend add
		map textures/special/turbine_hologram1b_add
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
}
textures/special/turbine_hologram2
{
	translucent
	noshadows
	nonsolid
	sort close
	qer_editorimage 	textures/special/turbine_hologram2_add
	deform jitter jacobladder[time * 20]

//	bumpmap 		textures/special/turbine_hologram2_local
//	specularmap		textures/special/turbine_hologram2_s
//	{
//		blend	diffusemap
//		map textures/special/turbine_hologram2_d
//	}
//	{
//		blend add
//		map textures/special/turbine_hologram2_add
//		rgb (powersurge [time * 3])
//	}
	{if ( parm4 == 0 )
		blend bumpmap
		map textures/special/turbine_hologram2_local
	}
	{if ( parm4 == 0 )
		blend specularmap
		map textures/special/turbine_hologram2_s
	}
	{if ( parm4 == 0 )
		blend	diffusemap
		map textures/special/turbine_hologram2_d
	}
	{if ( parm4 == 0 )
		blend add
		map textures/special/turbine_hologram2_add
		rgb ( powersurge [time * 3] )
	}

	{if ( parm4 != 0 )
		blend bumpmap
		map textures/special/turbine_hologram2_local
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend specularmap
		map textures/special/turbine_hologram2_s
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend	diffusemap
		map textures/special/turbine_hologram2_d
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
	{if ( parm4 != 0 )
		blend add
		map textures/special/turbine_hologram2_add
		red 	parm0 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		green	parm1 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
		blue	parm2 * ( flicker_off1 [ (time + parm4) * ( 0.50 + parm6) ] )
	}
}

textures/special/shootswitch_001
{
	qer_editorimage 	textures/special/shootswitch_001_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootswitch_001_local,
				heightmap (textures/special/shootswitch_001_h, 6))
	diffusemap	 	textures/special/shootswitch_001_d
	specularmap		textures/special/shootswitch_001_s

	{
		blend add
		map textures/special/shootswitch_001_add3
		rgb ( threestage [time * 0.7 + 0 / 4] - .1 ) * ( 1 - parm6 )
	}
	{
		blend add
		map textures/special/shootswitch_001_add2
		rgb ( threestage [time * 0.7 + 1 / 4] - .1 ) * ( 1 - parm6 )
	}
	{
		blend add
		map textures/special/shootswitch_001_add1
		rgb ( threestage [time * 0.7 + 2 / 4] - .1 ) * ( 1 - parm6 )
	}
}

textures/special/shootcore_001
{
	qer_editorimage 	textures/special/shootcore_001_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_001_local,
				heightmap (textures/special/shootcore_001_h, 6))
	diffusemap	 	textures/special/shootcore_001_d
	specularmap		textures/special/shootcore_001_s

	{
		blend add
//		blend gl_dst_color, gl_one
		map textures/special/shootcore_001_add1
		scroll (0.013 * sintable [time * 4.2]), (0.01 * sintable [time * 5.2])
		color
			parm0 * (alpha [time * 3]),
			parm1 * (alpha [time * 3]),
			parm2 * (alpha [time * 3]),
		1.0
	}
	{
		blend add
//		blend gl_dst_color, gl_one
		map textures/special/shootcore_001_add2
		scroll (0.01 * costable [time * 7]), (0.009 * costable [time * 4])
		color
			parm0 * (alpha_opp  [time * 3]),
			parm1 * (alpha_opp  [time * 3]),
			parm2 * (alpha_opp  [time * 3]),
		1.0
	}
//	{
//		blend add
//		map textures/special/shootcore_001_add3
//		scroll		0,  time * 0.6
//		rgb 		lightscale4 [time * 0.6 ]
//	}
	{
		blend add
		map textures/special/shootcore_001_add3
		scroll		0,  time * -0.6
		color
			parm0 * (lightscale5 [ time * -0.6 ]),
			parm1 * (lightscale5 [ time * -0.6 ]),
			parm2 * (lightscale5 [ time * -0.6 ]),
		1.0
	}
}


textures/special/shootcore_002
{
	qer_editorimage 	textures/special/shootcore_002_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002_local,
				heightmap (textures/special/shootcore_002_h, 6))
	diffusemap	 	textures/special/shootcore_002_d
	specularmap		textures/special/shootcore_002_s

}

textures/special/shootcore_002_scroll
{
	qer_editorimage 	textures/special/shootcore_002_d
	matter_metal

	{
		blend	bumpmap
		map 		addnormals (textures/special/shootcore_002_local,
				heightmap (textures/special/shootcore_002_h, 6))
		scroll 		(time * 0.25 ), 0
	}
	{
		blend	diffusemap
		map		textures/special/shootcore_002_d
		scroll 		(time * 0.25 ), 0
	}
	{
		blend	specularmap
		map		textures/special/shootcore_002_s
		scroll 		(time * 0.25 ), 0
	}
}

textures/special/shootcore_002_add
{
	qer_editorimage 	textures/special/shootcore_002_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002_local,
				heightmap (textures/special/shootcore_002_h, 6))
	diffusemap	 	textures/special/shootcore_002_d
	specularmap		textures/special/shootcore_002_s

	{
		blend add
		map textures/special/shootcore_002_add
		color
			parm0 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm1 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm2 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
		1.0
	}
}
textures/special/shootcore_002_add_shuttle
{
	qer_editorimage 	textures/special/shootcore_002_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002_local,
				heightmap (textures/special/shootcore_002_h, 6))
	diffusemap	 	textures/special/shootcore_002_d
	specularmap		textures/special/shootcore_002_s

	{
		blend add
		map textures/special/shootcore_002_add
		color
			parm0 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm1 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm2 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
		1.0
	}
	{	// Shuttle view stage
                 blend add
		map textures/decals/shuttle_flicker_02_blue
                texgen screen
		 rgb (fade_pulse [time * .4] * 0.4)

                 scroll time * 10, time * 10.1 * ( parm7 + 10 )
                shuttleView
		glowstage
	}

                {	// Shuttle view stage

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/decals/shuttle_flicker
		texgen screen
                 rgb (fade_pulse [time * .4] * 0.2)
                scale ( forcefieldflicker[ time * 1.0 ] * .01 ) , 0.5
		scroll time * 10, time * 10.1 * ( parm7 + 10 )
		shuttleView
		glowstage
	}
}
textures/special/shootcore_002_add_scroll
{
	qer_editorimage 	textures/special/shootcore_002_d
	matter_metal

	{
		blend	bumpmap
		map 		addnormals (textures/special/shootcore_002_local,
				heightmap (textures/special/shootcore_002_h, 6))
		scroll 		(time * 0.25 ), 0
	}
	{
		blend	diffusemap
		map		textures/special/shootcore_002_d
		scroll 		(time * 0.25 ), 0
	}
	{
		blend	specularmap
		map		textures/special/shootcore_002_s
		scroll 		(time * 0.25 ), 0
	}
	{
		blend add
		map textures/special/shootcore_002_add
		scroll 		(time * 0.25 ), 0
		color
			parm0 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm1 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm2 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
		1.0
	}
}

textures/special/shootcore_002b
{
	qer_editorimage 	textures/special/shootcore_002b_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002b_local,
				heightmap (textures/special/shootcore_002b_h, 6))
	diffusemap	 	textures/special/shootcore_002b_d
	specularmap		textures/special/shootcore_002b_s

}

textures/special/shootcore_002b_add
{
	qer_editorimage 	textures/special/shootcore_002b_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002b_local,
				heightmap (textures/special/shootcore_002b_h, 6))
	diffusemap	 	textures/special/shootcore_002b_d
	specularmap		textures/special/shootcore_002b_s

	{
		blend add
		map textures/special/shootcore_002b_add
		color
			parm0 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm1 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm2 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
		1.0
	}
}
textures/special/shootcore_002b_add_shuttle
{
	qer_editorimage 	textures/special/shootcore_002b_d
	matter_metal

	bumpmap 		addnormals (textures/special/shootcore_002b_local,
				heightmap (textures/special/shootcore_002b_h, 6))
	diffusemap	 	textures/special/shootcore_002b_d
	specularmap		textures/special/shootcore_002b_s

	{
		blend add
		map textures/special/shootcore_002b_add
		color
			parm0 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm1 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
			parm2 * 2 * (.1 * sintable [.15 + time * .5 ]) + .8,
		1.0
	}
	{	// Shuttle view stage
                 blend add
		map textures/decals/shuttle_flicker_02_blue
                texgen screen
		 rgb (fade_pulse [time * .4] * 0.4)

                 scroll time * 10, time * 10.1 * ( parm7 + 10 )
                shuttleView
		glowstage
	}

                {	// Shuttle view stage

		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/decals/shuttle_flicker
		texgen screen
                 rgb (fade_pulse [time * .4] * 0.2)
                scale ( forcefieldflicker[ time * 1.0 ] * .01 ) , 0.5
		scroll time * 10, time * 10.1 * ( parm7 + 10 )
		shuttleView
		glowstage
	}
}
textures/special/energyfield_001
{
	qer_editorimage 	textures/special/energyfield_001_d
	matter_metal

	bumpmap 		addnormals (textures/special/energyfield_001_local,
				heightmap (textures/special/energyfield_001_h, 6))
	diffusemap	 	textures/special/energyfield_001_d
	specularmap		textures/special/energyfield_001_s

	{
		blend add
		map textures/special/energyfield_001_add
		rgb (.1 * sintable [.15 + time * .3 ]) + .7
	}
}


textures/special/translate_trim
{
	qer_editorimage 	textures/special/translatetrim_a
	matter_metal

	bumpmap 		textures/special/translatetrim_local
	specularmap		textures/special/translatetrim_s
	{
		blend diffusemap
		map textures/special/translatetrim_d
		alphatest 0.3
	}
	{
		blend add
		map textures/special/translatetrim_a
		color
		parm0 * (jitter1 [time * 2]),
		parm1 * (jitter1 [time * 2]),
		parm2 * (jitter1 [time * 2]),
		1.0
	}
}

textures/hologram/frame1
{
qer_editorimage textures/hologram/frame1
		twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/frame1
	}
	{
		maskcolor
		map	makealpha(textures/hologram/frame1_alpha)
		//rotate (jitter10 [time / -2])
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map	textures/hologram/symbols
		scroll  time / 10, time * 0
		}
}

textures/hologram/ring
{
	qer_editorimage textures/hologram/ring
	twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/ring
		rotate	time / 120
		clamp
		//rgb (random [time / 1])
		}
}

textures/hologram/frame2
{
	qer_editorimage textures/hologram/frame2
	twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/frame2
		rgb (random [time / 3])
		}
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/symbol1
		rgb (bus1 [time / 5])
		}
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/symbol2
		rgb (bus1 [time / -5])
		}
}

textures/hologram/misc
{
	qer_editorimage textures/hologram/misc
	twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/misc
		}
}

textures/hologram/text
{
	qer_editorimage textures/hologram/text
	twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/text
		scroll 			(time * -0.5 ), 0
		}
}


textures/hologram/text2
{
	qer_editorimage textures/hologram/text
	twosided
		{
		blend gl_one,gl_one_minus_src_color
		map	textures/hologram/text
//		scroll 			time * 0.5 , (sintable [time * 0.3 ])
		scroll 			time * 0.5 , 0
		scale 4, 4
		}
}

textures/special/coloredGlow
{
	twoSided
	translucent
	noshadows
	noselfshadow

	qer_editorimage _white
	{
		blend	add
		map		_white
		colored
		glowstage
	}
}

// VISION FLASH
textures/special/visionFlash1  { { map textures/special/visionflash/flash1 } }
textures/special/visionFlash2  { { map textures/special/visionflash/flash2 } }
textures/special/visionFlash3  { { map textures/special/visionflash/flash3 } }
textures/special/visionFlash4  { { map textures/special/visionflash/flash4 } }
textures/special/visionFlash5  { { map textures/special/visionflash/flash5 } }
textures/special/visionFlash6  { { map textures/special/visionflash/flash6 } }
textures/special/visionFlash7  { { map textures/special/visionflash/flash7 } }
textures/special/visionFlash8  { { map textures/special/visionflash/flash8 } }
textures/special/visionFlash9  { { map textures/special/visionflash/flash4 } }
textures/special/visionFlash10  { { map textures/special/visionflash/flash6 } }
textures/special/visionFlash11  { { map textures/special/visionflash/flash1 } }
textures/special/visionFlash12  { { map textures/special/visionflash/flash2 } }
textures/special/visionFlash13  { { map textures/special/visionflash/flash3 } }
textures/special/visionFlash14  { { map textures/special/visionflash/flash4 } }
textures/special/visionFlash15  { { map textures/special/visionflash/flash5 } }
textures/special/visionFlash16  { { map textures/special/visionflash/flash6 } }
textures/special/visionFlash17  { { map textures/special/visionflash/flash7 } }
textures/special/visionFlash18  { { map textures/special/visionflash/flash8 } }
textures/special/visionFlash19  { { map textures/special/visionflash/flash2 } }
textures/special/visionFlash20  { { map textures/special/visionflash/flash6 } }
textures/special/visionFlash21  { { map textures/special/visionflash/flash1 } }
textures/special/visionFlash22  { { map textures/special/visionflash/flash2 } }
textures/special/visionFlash23  { { map textures/special/visionflash/flash3 } }
textures/special/visionFlash24  { { map textures/special/visionflash/flash4 } }
textures/special/visionFlash25  { { map textures/special/visionflash/flash5 } }
textures/special/visionFlash26  { { map textures/special/visionflash/flash6 } }
textures/special/visionFlash27  { { map textures/special/visionflash/flash7 } }
textures/special/visionFlash28  { { map textures/special/visionflash/flash8 } }
textures/special/visionFlash29  { { map textures/special/visionflash/flash9 } }
