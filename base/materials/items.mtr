//
//
// ammo pickups
//
//

models/items/soul_ammo/soul_ammo
{
	matter_metal
	noselfshadow
//	noshadows

	renderbump  -size 1024 1024 -aa 1 -trace 0.1 -colormap models/items/soul_ammo/soul_ammo_local models/items/soul_ammo/soul_ammo_hi.ase

	diffusemap models/items/soul_ammo/soul_ammo
	bumpmap	addnormals(models/items/soul_ammo/soul_ammo_local, heightmap(models/items/soul_ammo/soul_ammo_h, 7 ) )
	specularmap models/items/soul_ammo/soul_ammo_s
		{
		blend add
		map			models/items/soul_ammo/soul_ammo_add
		rgb (.1 * sintable [.15 + time * .5 ]) + .7
	        glowstage
        }
        {	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}
models/items/soul_ammo/soul_ammo_load
{
	matter_metal
	noselfshadow
	noshadows
	renderbump  -size 1024 1024 -aa 1 -trace 0.1 -colormap models/items/soul_ammo/soul_ammo_load_local models/items/soul_ammo/soul_ammo_load_hi.ase

	diffusemap models/items/soul_ammo/soul_ammo_load
	bumpmap	addnormals(models/items/soul_ammo/soul_ammo_load_local, heightmap(models/items/soul_ammo/soul_ammo_load_h, 7 ) )
	specularmap models/items/soul_ammo/soul_ammo_load_s

}

models/items/soul_ammo/soul_ammo_mask
{
	matter_glass
	noselfshadow
	noshadows
	twosided

	diffusemap models/items/soul_ammo/soul_ammo
	bumpmap	models/items/soul_ammo/soul_ammo_local
}


models/items/soul_ammo/soul_ammo_glass
{
	matter_glass
	noselfshadow
	translucent
	twosided

	diffusemap models/items/soul_ammo/soul_glass
	bumpmap	models/items/soul_ammo/soul_ammo_local
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}


//
//
// health pickups
//
//
models/items/health/health
{
	noselfshadow
	diffusemap models/items/health/health
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}


// lighter shader

table	lighteractivater { clamp { 0, 0, 3, 1.1, 1.5, 1.25 } }
table	lighteractivateg { clamp { 0, 0, 3.1, 1.2, 1.4, 1.25 } }
table	lighteractivateb { clamp { 0, 0, 3, 1.1, 1.5, 1.25 } }

table		lighterflicker { { 1, 0.96, 1.06, 0.98, 1, 1, 1.05, 1, 1.06, 0.96, 1, 0.96, 1,
	1.04, 0.96, 1, 1, 1, 0.98, 1, 1.03, 1, 1.02, 1, 1, 1, 0.96, 1, 1.02, 0.96, 1, 1, 0.98, 1, 1.05, 1, 1, 0.98 } }

table lighterwiggle { { 0, 0, 0.5, -0.5, 1, 0.2, 0, 0, -0.75, 0.25, -1, 0, 0, 1, 0, 0.2, 0, 0 } }

lights/playerlighter
{
//	noshadows

	lightfalloffimage	makeintensity( lights/lighterfade )
	{
		map	lights/lighterlight
		red		(lighteractivater[(time - parm4) * 1.5] * lighterflicker[time * 0.3]) * parm0
		green	(lighteractivateg[(time - parm4) * 1.5] * lighterflicker[time * 0.3]) * parm1
		blue	(lighteractivateb[(time - parm4) * 1.5] * lighterflicker[time * 0.3]) * parm2
		zeroclamp
		scroll 0.02 * lighterwiggle[time * 0.5], 0.01 * lighterwiggle[time * 0.3]
	}

}
// end lighter shader


//
//
// hunter's hand
//
//
models/items/hunterhand/hunterhand
{
	noselfshadow
	unsmoothedtangents
	matter_flesh

	renderbump -size 512 512 models/items/hunterhand/hunterhand_local models/items/hunterhand/hunterhandhi.lwo

	qer_editorimage models/items/hunterhand/hunterhand
	diffusemap models/items/hunterhand/hunterhand
	bumpmap	addnormals(models/items/hunterhand/hunterhand_local, heightmap(models/items/hunterhand/hunterhand_h, 7 ) )
	specularmap models/items/hunterhand/hunterhand_s
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

models/items/hunterhand/hunterhand_inview
{
	noselfshadow
	noshadows
	unsmoothedtangents
	matter_flesh

	renderbump -size 512 512 models/items/hunterhand/hunterhand_local models/items/hunterhand/hunterhandhi.lwo

	qer_editorimage models/items/hunterhand/hunterhand
	diffusemap models/items/hunterhand/hunterhand
	bumpmap	addnormals(models/items/hunterhand/hunterhand_local, heightmap(models/items/hunterhand/hunterhand_h, 7 ) )
	specularmap models/items/hunterhand/hunterhand_s
}
//
//
// an insect that gives the player instant health
//
//
models/items/healthbug/healthbug
{
	noselfshadow
	unsmoothedtangents

	renderbump -size 512 128 -trace .1 models/items/healthbug/healthbug_local models/items/healthbug/healthbughi.lwo

	qer_editorimage models/items/healthbug/healthbug
	diffusemap models/items/healthbug/healthbug
	bumpmap	addnormals(models/items/healthbug/healthbug_local, heightmap(models/items/healthbug/healthbug_h, 6 ) )
//   bumpmap	models/items/healthbug/healthbug_local
	specularmap models/items/healthbug/healthbug_s
	{
		blend add
		map			models/items/healthbug/healthbug_add
		rgb (.1 * sintable [.15 + time * .5 ]) + .7
	}
}


models/items/ac_ammo/ac_grenade
{
	matter_metal
	noshadows
	noselfshadow
	renderbump  -size 512 512 -aa 1 -trace .1 -colormap models/items/ac_ammo/ac_grenade_local models/items/ac_ammo/ac_grenadehi.lwo
	noOverlays

	diffusemap models/items/ac_ammo/ac_grenade
	bumpmap	models/items/ac_ammo/ac_grenade_local
	specularmap models/items/ac_ammo/ac_grenade_s
	{
		blend add
		map			models/items/ac_ammo/ac_grenade_add
		rgb jitter7 [time * .5]
	}
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

models/items/ac_ammo/ac_ammo
{
	matter_metal
	noOverlays
//	noshadows
	noselfshadow
	renderbump  -size 1024 1024 -aa 1 -trace .2 -colormap models/items/ac_ammo/ac_ammo_local models/items/ac_ammo/ac_ammohi.lwo

	diffusemap 	models/items/ac_ammo/ac_ammo
	bumpmap		models/items/ac_ammo/ac_ammo_local
	specularmap models/items/ac_ammo/ac_ammo_s
	{
		blend add
		map			models/items/ac_ammo/ac_ammo_add
		rgb jitter7 [time * .5]
	}
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}


models/items/hiderammo/hiderammo
{
	matter_metal
//	noshadows
	noselfshadow
	noOverlays
	renderbump  -size 512 512 -aa 1 -trace .15  -colormap models/items/hiderammo/hiderammo_local models/items/hiderammo/hiderammo2hi.lwo

	bumpmap		models/items/hiderammo/hiderammo_local
	specularmap models/items/hiderammo/hiderammo_s
	{
		blend			diffusemap
		map				models/items/hiderammo/hiderammo
		alphatest		.9
	}
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

models/items/hiderammo/hiderammo2
{
	matter_metal
	noshadows
	noselfshadow
	noOverlays
	renderbump  -size 256 256 -aa 1 -trace 0.06 -colormap models/items/hiderammo/hiderammo2_local models/items/hiderammo/hiderammo2hi.lwo

	{
		blend diffusemap
		map models/items/hiderammo/hiderammo2
		alphatest 0.5
	}
	bumpmap		models/items/hiderammo/hiderammo2_local
//	specularmap models/items/hiderammo/hiderammo_s
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue	0
		glowstage
	}
}


// Rifle ammo pickups
models/items/rifle_ammo/rifle_ammo
{
//	noshadows
	noselfshadow
	unsmoothedtangents
	twoSided
	noOverlays

	{
		blend bumpmap
		map addnormals	( models/weapons/rifle/rifle_local,	heightmap( models/weapons/rifle/rifle_h, 7 ))
		highres
	}

	diffusemap	models/weapons/rifle/rifle
	specularmap	models/weapons/rifle/rifle_s
	{
		blend	add
		map	_white
		rgb	pickupflash[ ( time * 0.3 ) + parm5 ] * 0.45
	}
}
models/items/rifle_ammo/sniper_ammo_barrel
{
	noshadows
	noselfshadow
	unsmoothedtangents
	noOverlays

	bumpmap     	models/weapons/rifle/barrel_local
	diffusemap 	models/weapons/rifle/barrel
	specularmap 	models/weapons/rifle/barrel_s
	{
		blend	add
		map	models/weapons/rifle/barrel_add
		red	1.0 + ( 0.05 * fadetable[ time * 12.8 ] )
		green 0.1 + ( 0.05 * fadetable[ time * 12.8 ] )
		blue 0.1 + ( 0.05 * fadetable[ time * 12.8 ] )
		glowstage
	}
	{
		blend	add
		map	models/weapons/rifle/barrel_pulse_fx2
		scroll	time * 0, time * 0.8
		rgb	fadetable[ time * 0.8 ] * 1.5
		glowStage
	}
	{
		blend	add
		map	_white
		rgb	pickupflash[ ( time * 0.3 ) + parm5 ] * 0.45
	}
}
models/items/rifle_ammo/rifle_ammo_barrel
{
	noshadows
	noselfshadow
	unsmoothedtangents
	noOverlays

	bumpmap		models/weapons/rifle/barrel_local
	diffusemap	models/weapons/rifle/barrel
	specularmap	models/weapons/rifle/barrel_s
	{
		blend	add
		map	models/weapons/rifle/barrel_add
		red	0.8 + ( 0.1 * fadetable[ time * 12.8 ] )
		green	0.6 + ( 0.1 * fadetable[ time * 12.8 ] )
		blue	0.6 + ( 0.1 * fadetable[ time * 12.8 ] )
		glowstage
	}
	{
		blend	add
		map	models/weapons/rifle/barrel_pulse_fx1
		scroll	time * 0, time * 0.8
		rgb	fadetable[ time * 0.8 ] * 1.5
		glowStage
	}
	{
		blend	add
		map	_white
		rgb	pickupflash[ ( time * 0.3 ) + parm5 ] * 0.45
	}
}


models/items/spirit_pipe/spirit_pipe
{
	matter_wood
	noselfshadow
	noshadows
//	unsmoothedtangents
	noOverlays

	renderbump -size 1024 1024 -aa 2 -trace 0.1 -colormap models/items/spirit_pipe/spirit_pipe_local models/items/spirit_pipe/spirit_pipe_hi.lwo

//	bumpmap	models/items/spirit_pipe/spirit_pipe_local
	bumpmap	addnormals(models/items/spirit_pipe/spirit_pipe_local,
			heightmap (models/items/spirit_pipe/spirit_pipe_h, 6 ) )
	specularmap models/items/spirit_pipe/spirit_pipe_s
//	diffusemap	models/items/spirit_pipe/spirit_pipe

	{
		blend diffusemap
		map models/items/spirit_pipe/spirit_pipe
		alphatest 0.5
	}

	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

models/items/medicine_bag/medicine_bag
{
	matter_wood
	noselfshadow
	noshadows
//	unsmoothedtangents
	noOverlays

	qer_editorimage models/items/medicine_bag/medicine_bag_local
	renderbump -size 1024 1024 -aa 2 -trace 0.08 -colormap models/items/medicine_bag/medicine_bag_local models/items/medicine_bag/medicine_bag_hi.lwo

//	bumpmap	models/items/medicine_bag/medicine_bag_local
	bumpmap	addnormals(models/items/medicine_bag/medicine_bag_local,
			heightmap (models/items/medicine_bag/medicine_bag_h, 6 ) )
	specularmap models/items/medicine_bag/medicine_bag_s
	diffusemap	models/items/medicine_bag/medicine_bag

	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}
models/items/crawler_ammo/crawler_ammo
{
	qer_editorimage 	textures/tech_wall/bl_techpanel27_d
	matter_metal
	noOverlays
	noselfshadow
	noshadows

	bumpmap 		addnormals (textures/tech_wall/bl_techpanel27_local,
				heightmap (textures/tech_wall/bl_techpanel27_h, 6))
	diffusemap	 	textures/tech_wall/bl_techpanel27_d
	specularmap		textures/tech_wall/bl_techpanel27_s
	{
		blend add
		map		textures/tech_wall/bl_techpanel27_a
		rgb 0.45
		glowstage
	}
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

//green - grey glass
models/items/crawler_ammo/crawler_ammo_glass
{
	noOverlays
	// Everything from glass_macro except forceOverlays
	translucent
	noShadows
	seeThru
	matter_glass
	sort medium


	qer_editorimage 	textures/sfx/glass1_d
	{
		blend diffusemap
		map	textures/sfx/glass1_d
		color 0.7,1.0,.9,0
	}
	{
		blend specularmap
		map	textures/sfx/glass1_s
		color 0.2,0.4,0.4,0
	}
	{
		blend gl_dst_color, gl_src_color
		cubemap	env/gs2
		texgen reflect
//		color 0.12,0.13,0.14,0
	}
	{	// blinking highlight
		blend add
		map textures/gfx/colors/white
		red		pickupflash[time+parm5] * 0.5
		green	pickupflash[time+parm5] * 0.1
		blue 0
		glowstage
	}
}

models/weapons/crawler/crawler_can_amber
{	// Crawlers inside the crawler can
	noshadows
	noselfshadow
	unsmoothedtangents
	noOverlays
	matter_flesh

	qer_editorimage models/weapons/crawler/crawler
    diffusemap	models/weapons/crawler/crawler
	{
		blend	bumpmap
		map	addnormals(models/weapons/crawler/crawler_local, heightmap(models/weapons/crawler/crawler_h, 6 ) )
		highres
	}
	specularmap	models/weapons/crawler/crawler_s

	{
		blend add
		map models/weapons/crawler/crawler_amber_add
		glowStage
	}
	{
		blend add
		map models/weapons/crawler/crawler_amber_eyes
		rgb crawlerblink[time * 0.1]
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}
