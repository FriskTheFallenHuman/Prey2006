////////////////////////////////////
////////  creature x  /////////////////
////////////////////////////////////
//
models/monsters/creature_x/creature_x
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_flesh
	forceOverlays

	renderbump -size 1024 1024 -trace 0.01 -colormap models/monsters/creature_x/creature_x_local2 models/monsters/creature_x/creature_xhi.lwo

	{
		shaderFallback3
		blend diffusemap
		map models/monsters/creature_x/creature_x
	}
/*	bumpmap	addnormals(models/monsters/creature_x/creature_x_local, heightmap(models/monsters/creature_x/creature_x_h, 7 ) )
//	bumpmap	models/monsters/creature_x/creature_x_local
	specularmap models/monsters/creature_x/creature_x_s
	*/

	{
		shaderFallback3
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_local, heightmap(models/monsters/creature_x/creature_x_h, 7 ) )
		highres
	}
	{
		shaderFallback3
		blend specularmap
		map models/monsters/creature_x/creature_x_s
	}
	{
		shaderLevel3
		blend shader
		program skin.vfp

		fragmentparm	0	1, 0, 0, 0		// mask channel
//		fragmentparm	1	0.0, 0.05, 0.15	// sss color, power
		fragmentparm	1	0.05, 0.1, 0.5	// sss color, power
		fragmentparm	2	0.5, 0.5		// wrap around
		fragmentparm	3	1.5				// rim
		fragmentparm	4	1.8, 1.8, 1.8, 25		// specular color, power
		fragmentparm	5	1.65, 1.65, 1.7, 10		// glancing specular color, power
		fragmentparm	6	0.25

		fragmentmap 1 highres addnormals(models/monsters/creature_x/creature_x_local, heightmap(models/monsters/creature_x/creature_x_h, 7 ) )
		fragmentmap 4 models/monsters/creature_x/creature_x
		fragmentmap 5 models/monsters/creature_x/creature_x_s
		fragmentmap 6 models/monsters/creature_x/creature_x_s
		fragmentmap 7 _white
	}

	{
		map models/monsters/creature_x/creature_x
		maskColor
	}

//////Plasma
	{
		if parm5 == 1
		blend		gl_one_minus_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * 0.06 , time * -0.06
	}
	{
		if parm5 == 1
		blend		gl_one_minus_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * 0.12 , time * -0.12
		scale 1.5 , 1.5
		inverseVertexColor
	}

//////Lightning(rail gun)
/*	{
		blend		gl_one_minus_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * 0.06 , time * -0.06
	}
	{
		blend		gl_one_minus_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * 0.12 , time * -0.12
		scale 1.5 , 1.5
		inverseVertexColor
	}*/

//////Sunbeam
	{
		if parm5 == 3
		blend		gl_one_minus_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * 0.06 , time * -0.06
	}
	{
		if parm5 == 3
		blend		gl_one_minus_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * 0.12 , time * -0.12
		scale 1.5 , 1.5
		inverseVertexColor
	}

//////Health
	{
		if parm5 == 2
		blend		gl_one_minus_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.6
		green 0.3
		blue 0.55
		translate	 time * 0.06 , time * -0.06
	}
	{
		if parm5 == 2
		blend		gl_one_minus_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 0.6
		green 0.3
		blue 0.55
		translate	 time * 0.12 , time * -0.12
		scale 1.5 , 1.5
		inverseVertexColor
	}

//////Eyes
	{
		blend add
		map models/monsters/creature_x/creature_x_add
		glowstage
	}

//////Burnout
	{	// Burning flesh effect - burns away the diffuse map
		if	parm7			// only when dead

		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.7 * (time - parm7)
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.7 * (time - parm7)
		glowStage
	}
	{	// Remaining flesh, not alpha masked
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.3		// stage-only polygon offset - ensure that this is lower than the blue burn
        blend add

		map models/monsters/creature_x/creature_x_dis
		glowstage
//		alphaTest 1.0 * (time - parm7)
//		alphaTest 0 // Necessary, otherwise the other stages will mask out this stage
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.6		// stage-only polygon offset
//        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.9 * (time - parm7 + 0.6)
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_body
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_flesh
	forceOverlays

	renderbump -size 1024 1024 -trace 0.01 -colormap  models/monsters/creature_x/creature_x_body_local models/monsters/creature_x/creaturewing_xhi.lwo

	{
		shaderFallback3
		blend diffusemap
		map models/monsters/creature_x/creature_x_body
//		alphatest	0.5
	}
/*	bumpmap	addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
//	bumpmap	models/monsters/creature_x/creature_x_body_local
	specularmap models/monsters/creature_x/creature_x_body_s
*/
	{
		shaderFallback3
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		highres
	}
	{
		shaderFallback3
		blend specularmap
		map models/monsters/creature_x/creature_x_body_s
	}
	{
		shaderLevel3
		blend shader
		program skin.vfp

		fragmentparm	0	1, 0, 0, 0		// mask channel
		// fragmentparm	1	0.2, 0.0, .0	// sss color, power
		fragmentparm	1	0.6, 0.2, 0.2		// sss color
		fragmentparm	2	0.5, 0.5		// wrap around
		fragmentparm	3	1.5				// rim
		fragmentparm	4	1.7, 1.7, 1.7, 25		// specular color, power
		fragmentparm	5	1.65, 1.65, 1.7, 10		// glancing specular color, power
		fragmentparm	6	0.15

		fragmentmap 1 highres addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		fragmentmap 4 models/monsters/creature_x/creature_x_body
		fragmentmap 5 models/monsters/creature_x/creature_x_body_s
		fragmentmap 6 models/monsters/creature_x/creature_x_body_s
		fragmentmap 7 _white
	}

	{
		map models/monsters/creature_x/creature_x_body
		maskColor
	}

//////Plasma
/*	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.06 , time * 0.01
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.06 , time * 0.01
		scale 1.5 , 1.5
		inverseVertexColor
	}*/

//////Lightning(rail gun)
/*	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.06 , time * 0.01
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.06 , time * 0.01
		scale 1.5 , 1.5
		inverseVertexColor
	}*/

//////Sunbeam
	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.06 , time * 0.01
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.06 , time * 0.01
		scale 1.5 , 1.5
		inverseVertexColor
	}

	{	// Burning flesh effect - burns away the diffuse map
		if	parm7			// only when dead

		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything

		map models/monsters/creature_x/creature_x_body_dis	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.7 * (time - parm7)
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_body_dis	// replace this with a monster-specific texture
		alphaTest 0.7 * (time - parm7)
		glowStage
	}
	{	// Remaining flesh, not alpha masked
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.3		// stage-only polygon offset - ensure that this is lower than the blue burn
        blend add

		map models/monsters/creature_x/creature_x_body_dis
		glowstage
//		alphaTest 1.0 * (time - parm7)
//		alphaTest 0 // Necessary, otherwise the other stages will mask out this stage
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.6		// stage-only polygon offset
//        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_body_dis	// replace this with a monster-specific texture
		alphaTest 0.9 * (time - parm7 + 0.6)
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_teeth
{
//	noselfshadow
	unsmoothedtangents
	matter_flesh
	twosided

	renderbump -size 1024 1024 -trace 0.01 -colormap models/monsters/creature_x/creature_x_local models/monsters/creature_x/creature_xhi.lwo
	{
		blend diffusemap
		map models/monsters/creature_x/creature_x
		alphatest	0.5
	}
//	bumpmap	addnormals(models/monsters/creature_x/creature_x_local, heightmap(models/monsters/creature_x/creature_x_h, 7 ) )
	{
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_local, heightmap(models/monsters/creature_x/creature_x_h, 7 ) )
		highres
	}
//	bumpmap	models/monsters/creature_x/creature_x_local
	specularmap models/monsters/creature_x/creature_x_s

	{	// Burning flesh effect - burns away the diffuse map
		if	parm7			// only when dead

		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.7 * (time - parm7)
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.7 * (time - parm7)
		glowStage
	}
	{	// Remaining flesh, not alpha masked
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.3		// stage-only polygon offset - ensure that this is lower than the blue burn
        blend add

		map models/monsters/creature_x/creature_x_dis
		glowstage
//		alphaTest 1.0 * (time - parm7)
//		alphaTest 0 // Necessary, otherwise the other stages will mask out this stage
	}
	{	// burning corpse effect - blueish effect that trails the burnout
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1.6		// stage-only polygon offset
//        blend add
        blend gl_one, gl_zero

		map models/monsters/creature_x/creature_x_dis	// replace this with a monster-specific texture
		alphaTest 0.9 * (time - parm7 + 0.6)
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}
models/monsters/creature_x/eye
{
	//noselfshadow
	noshadows
	matter_flesh
	translucent
	{
		blend gl_dst_color, gl_src_color
		map models/eyes/left_brown
		centerscale 1.0, 1.0
	}
	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_guns_blink
{
	unsmoothedtangents
	matter_metal
	renderbump -size 1024 1024 -trace 0.01 -colormap  models/monsters/creature_x/creature_x_body_local models/monsters/creature_x/creaturewing_xhi.lwo
	{
		blend diffusemap
		map models/monsters/creature_x/creature_x_body
	}
	{
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		highres
	}
	specularmap models/monsters/creature_x/creature_x_body_s
	{
		map models/monsters/creature_x/creature_x_body
		maskColor
	}

	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 1.0
		blue 1.0
		translate	 time * -0.06 , time * 0.01
	    glowstage
	}

//	{
//		blend		gl_dst_alpha , gl_one
//		map	models/monsters/creature_x/creature_x_goo
//		red 0.5
//		green 0.4
//		blue 0.4
//		translate	 time * -0.06 , time * 0.01
////	    glowstage
//	}
	{
		blend		gl_dst_alpha , gl_one
		map textures/vpaint/bio_organic_402
		red 0.5
		green 0.0
		blue 0.0
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_guns
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_metal

	renderbump -size 1024 1024 -trace 0.01 -colormap  models/monsters/creature_x/creature_x_body_local models/monsters/creature_x/creaturewing_xhi.lwo
	{
		blend diffusemap
		map models/monsters/creature_x/creature_x_body
//		alphatest	0.5
	}
//	bumpmap	addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
//	bumpmap	models/monsters/creature_x/creature_x_body_local
	{
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		highres
	}
	specularmap models/monsters/creature_x/creature_x_body_s
	{
		map models/monsters/creature_x/creature_x_body
		maskColor
	}
	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.5
		green 0.4
		blue 0.4
		translate	 time * -0.06 , time * 0.01
//	    glowstage
	}
	{
		blend		gl_dst_alpha , gl_one
		map textures/vpaint/bio_organic_402
		red 0.5
		green 0.0
		blue 0.0
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_guns_l
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_metal
	nooverlays

	renderbump -size 1024 1024 -trace 0.01 -colormap  models/monsters/creature_x/creature_x_body_local models/monsters/creature_x/creaturewing_xhi.lwo
	{
		blend diffusemap
		map models/monsters/creature_x/creature_x_body
//		alphatest	0.5
	}
//	bumpmap	addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
//	bumpmap	models/monsters/creature_x/creature_x_body_local
	{
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		highres
	}
	specularmap models/monsters/creature_x/creature_x_body_s
	{
		if parm5 == 2
		map models/monsters/creature_x/creature_x_body_add
		maskColor
	}
	{
		if parm5 == 1
		map models/monsters/creature_x/creature_x_body
		maskColor
	}
	{
		if parm5 == 3
		map models/monsters/creature_x/creature_x_body
		maskColor
	}

//////Plasma
	{
		if parm5 == 1
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 1
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}


//////Lightning(rail gun)
/*	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.06 , time * 0.01
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{
		blend add
		map models/monsters/creature_x/creature_x_body_add
		red 0.4
		green 0.4
		blue 0.65
		glowStage
	}*/

//////Sunbeam
	{
		if parm5 == 3
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 3
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}


//////Health
	{
		if parm5 == 2
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.9
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 2
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.9
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{
		if parm5 == 2
		blend add
		map models/monsters/creature_x/creature_x_body_add
		red 1.0 * domeFlash[time * 1.0]
		green 0.6 * domeFlash[time * 1.0]
		blue 0.9 * domeFlash[time * 1.0]
		glowStage
	}

//////Damage layer
	{
		if parm6 == 1
		blend add
		map models/monsters/creature_x/creature_x_guns
		rgb 1 * oneThirdTable[time * 3]
		translate 1 * fadeTable[time * 6], 1 * fadeTable[time * 6]
		glowStage
	}
	{
		if parm6 == 1
		blend add
		map models/monsters/creature_x/creature_x_guns2
		rgb 1 * oneThirdTable[time * 3] + 3
		translate 1 * fadeTable[time * 6], 1 * fadeTable[time * 6]
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/creature_x/creature_x_guns_r
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_metal
	nooverlays

	renderbump -size 1024 1024 -trace 0.01 -colormap  models/monsters/creature_x/creature_x_body_local models/monsters/creature_x/creaturewing_xhi.lwo
	{
		blend diffusemap
		map models/monsters/creature_x/creature_x_body
//		alphatest	0.5
	}
//	bumpmap	addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
//	bumpmap	models/monsters/creature_x/creature_x_body_local
	{
		blend bumpmap
		map addnormals(models/monsters/creature_x/creature_x_body_local, heightmap(models/monsters/creature_x/creature_x_body_h, 7 ) )
		highres
	}
	specularmap models/monsters/creature_x/creature_x_body_s
	{
		if parm5 == 2
		map models/monsters/creature_x/creature_x_body_add
		maskColor
	}
	{
		if parm5 == 1
		map models/monsters/creature_x/creature_x_body
		maskColor
	}
	{
		if parm5 == 3
		map models/monsters/creature_x/creature_x_body
		maskColor
	}
	//////Plasma
	{
		if parm5 == 1
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 1
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.2
		blue 0.0
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}


//////Lightning(rail gun)
/*	{
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.06 , time * 0.01
	}
	{
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 0.4
		green 0.4
		blue 0.65
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{
		blend add
		map models/monsters/creature_x/creature_x_body_add
		red 0.4
		green 0.4
		blue 0.65
		glowStage
	}*/

//////Sunbeam
	{
		if parm5 == 3
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 3
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.4
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}


//////Health
	{
		if parm5 == 2
		blend		gl_dst_alpha , gl_one
		map	models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.9
		translate	 time * -0.06 , time * 0.01
	}
	{
		if parm5 == 2
		blend		gl_dst_alpha , gl_one
		map models/monsters/creature_x/creature_x_goo
		red 1.0
		green 0.6
		blue 0.9
		translate	 time * -0.12 , time * 0.03
		scale 1.5 , 1.5
		inverseVertexColor
	}
	{
		if parm5 == 2
		blend add
		map models/monsters/creature_x/creature_x_body_add
		red 1.0 * domeFlash[time * 1.0]
		green 0.6 * domeFlash[time * 1.0]
		blue 0.9 * domeFlash[time * 1.0]
		glowStage
	}


//////Damage layer
	{
		if parm6 == 2
		blend add
		map models/monsters/creature_x/creature_x_guns
		rgb 1 * oneThirdTable[time * 3]
		translate 1 * fadeTable[time * 6], 1 * fadeTable[time * 6]
		glowStage
	}
	{
		if parm6 == 2
		blend add
		map models/monsters/creature_x/creature_x_guns2
		rgb 1 * oneThirdTable[time * 3] + 3
		translate 1 * fadeTable[time * 6], 1 * fadeTable[time * 6]
		glowStage
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/monsters/girlfriend_x/girlfriend_x_body
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_flesh
	nooverlays

	renderbump -size 512 512 -trace 0.05 models/monsters/girlfriend_x/girlfriend_x_local models/monsters/girlfriend_x/girlfriend_x_hi.lwo


	//diffusemap models/monsters/girlfriend_x/girlfriend_x_body
	//bumpmap	models/monsters/girlfriend_x/girlfriend_x_local
	//bumpmap	addnormals(models/monsters/girlfriend_x/girlfriend_x_local, heightmap(models/monsters/girlfriend_x/girlfriend_x_h, 7 ) )
	//specularmap models/monsters/girlfriend_x/girlfriend_x_s

	{
		shaderFallback3
		blend diffusemap
		map models/monsters/girlfriend_x/girlfriend_x_body
	}
	{
		shaderFallback3
		blend bumpmap
		map addnormals(models/monsters/girlfriend_x/girlfriend_x_local, heightmap(models/monsters/girlfriend_x/girlfriend_x_h, 7 ) )
		highres
	}
	{
		shaderFallback3
		blend specularmap
		map models/monsters/girlfriend_x/girlfriend_x_s
	}

	{
		shaderLevel3
		blend shader
		program skin.vfp

		fragmentparm	0	1, 0, 0, 0		// mask channel
		// fragmentparm	1	0.2, -0.0, -.0	// sss color
		fragmentparm	1	0.6, 0.2, 0.2		// sss color
		fragmentparm	2	0.5, 0.5		// wrap around
		fragmentparm	3	1.5				// rim
		fragmentparm	4	2.5, 2.5, 2.8, 15		// specular color, power
		fragmentparm	5	1.3, 1.3, 1.39, 8		// glancing specular color, power
		fragmentparm	6	0.15

		fragmentmap 1 highres addnormals(models/monsters/girlfriend_x/girlfriend_x_local, heightmap(models/monsters/girlfriend_x/girlfriend_x_h, 7 ) )
		fragmentmap 4 models/monsters/girlfriend_x/girlfriend_x_body
		fragmentmap 5 models/monsters/girlfriend_x/girlfriend_x_s
		fragmentmap 6 models/monsters/girlfriend_x/girlfriend_x_s
		fragmentmap 7 _white
	}

	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}

models/characters/girlfriend/girlfriend_x_head
{
	noShadows
//	noselfshadow
	unsmoothedtangents
	matter_flesh
//	noimpact
	nooverlays

	renderbump -size 512 512 -trace 0.03 -colormap models/characters/girlfriend/girlfriend_liquid_head2_local models/characters/girlfriend/girlfriend_liquidhi_head.lwo

	// Non-fragment program stages
	{
		shaderFallback3
		blend diffusemap
		map models/characters/girlfriend/girlfriend_liquid_head
		alphatest 0.5
	}
	{
		shaderFallback3
		blend bumpmap
		map addnormals(models/characters/girlfriend/girlfriend_liquid_head_local, heightmap(models/characters/girlfriend/girlfriend_liquid_head_h, 7 ) )
		highres
	}
	{
		shaderFallback3
		blend specularmap
		map models/characters/girlfriend/girlfriend_liquid_head_s
	}

	// Fragment program stages
	{
		shaderLevel3
		blend shader
		program skin.vfp

		fragmentparm	0	1, 0, 0, 0		// mask channel
		// fragmentparm	1	0.4, -0.0, -.0	// sss color
		fragmentparm	1	0.75, 0.3, 0.3		// sss color
		fragmentparm	2	0.5, 0.5		// wrap around
		fragmentparm	3	1.5				// rim
		fragmentparm	4	0.15, 0.15, 0.18, 10		// specular color, power
		fragmentparm	5	0.3, 0.3, 0.39, 8		// glancing specular color, power
		fragmentparm	6	0.15

		fragmentmap 1 highres addnormals(models/characters/girlfriend/girlfriend_liquid_head_local, heightmap(models/characters/girlfriend/girlfriend_liquid_head_h, 7 ) )
		fragmentmap 4 models/characters/girlfriend/girlfriend_liquid_head
		fragmentmap 5 models/characters/girlfriend/girlfriend_liquid_head_s_skin
		fragmentmap 6 models/characters/girlfriend/girlfriend_liquid_head_sg_skin
		fragmentmap 7 models/characters/girlfriend/girlfriend_liquid_head_mask
	}
	{
		shaderLevel3
		maskcolor
		alphatest 0.5
		map models/characters/girlfriend/girlfriend_liquid_head
	}
	{
		shaderLevel3
		blend shader
		program hair.vfp

		fragmentparm	0	0, 1, 0, 0		// mask channel
		fragmentparm	1	0.5			// flatten normalmap
		fragmentparm	2	0.1, -0.08			// highlight shift
		fragmentparm	3	0.15, 0.15, 0.16, 100		// hightlight color 1, exponent
		fragmentparm	4	0.04, 0.04, 0.06, 30		// hightlight color 2, exponent
		fragmentparm	5	0.05, 0.05, 0.05		// diffuse color

		fragmentmap 1 highres addnormals(models/characters/girlfriend/girlfriend_liquid_head_local, heightmap(models/characters/girlfriend/girlfriend_liquid_head_h, 7 ) )
		fragmentmap 4 _black
		fragmentmap 5 models/characters/girlfriend/girlfriend_liquid_head_s_skin
		fragmentmap 6 uncompressed models/characters/girlfriend/girlfriend_liquid_head_hair_t
		fragmentmap 7 models/characters/girlfriend/girlfriend_liquid_head_mask
	}

	//global alphatest stage
	{
		if ( parm5 > 0 ) //fade out
		blend none
		map textures/sfx/roadhouse_ramp_fx_256
		alphaTest ( time + parm4 ) * global6
	}

	//additive fx stage
	{
		if ( parm5 > 0 ) //fade out
		privatepolygonoffset	-1
		blend add
		map textures/sfx/roadhouse_ramp_fx_256
		alphaTest ( time + parm4 ) * global6 - global7
		rgb 2
		glowStage
	}
	{ // Scope view texture
		blend add
		map textures/sfx/monsterSniperView
		texgen screen
		scroll 0.5, 0.5
		scale 0.5, 0.5
		clamp
		glowStage
		scopeView	// Only visible in the rifle scope view
	}
}


//====================
// Shadow Meshes
//====================
models/monsters/creature_x/creature_x_body_shadow {
	diffusemap	textures/editor/shadow
}

models/monsters/creature_x/creature_x_guns_shadow {
	diffusemap	textures/editor/shadow
}

models/monsters/creature_x/creature_x_guns_l_shadow {
	diffusemap	textures/editor/shadow
}

models/monsters/creature_x/creature_x_guns_r_shadow {
	diffusemap	textures/editor/shadow
}

models/monsters/girlfriend_x/girlfriend_x_body_shadow {
	diffusemap	textures/editor/shadow
}

models/monsters/girlfriend_x/girlfriend_liquid_head_shadow {
	diffusemap	textures/editor/shadow
}

