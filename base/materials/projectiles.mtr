

//////////////////////////
//auto dart gun
//////////////////////////
models/weapons/autogun/dart
{
	noOverlays
	noselfShadow
	renderbump  -size 128 256 -aa 1  models/weapons/autogun/dart_local models/weapons/autogun/darthi.lwo

	qer_editorimage models/weapons/autogun/dart
    diffusemap	models/weapons/autogun/dart
	bumpmap models/weapons/autogun/dart_local
//	bumpmap		addnormals(models/weapons/autogun/dart_local, heightmap(models/weapons/autogun/dart_h, 7 ) )
	specularmap	models/weapons/autogun/dart_s
	{
		blend add
		map models/weapons/autogun/dart_a
	}
}

//////////////////////////
//AutoCannon projectile
//////////////////////////
models/weapons/autocannon/autocannonprojectile {
	//noOverlays
	noselfShadow
	noshadows
	twosided

	qer_editorimage 	models/weapons/autocannon/autocannon_proj
	{
		blend 	add	//gl_dst_color, gl_src_color
		map models/weapons/autocannon/autocannon_proj
//		scroll 9 *  time * 6, 0 *  time * 6
		clamp
		glowStage
	}
}

//////////////////////////
//AutoCannon grenade
//////////////////////////
/*
models/weapons/autocannon/autocannon_gren {
	//noOverlays
	noselfShadow
	noshadows
	//twosided

	qer_editorimage 	models/weapons/autocannon/autocannon_gren
	{
		blend 	add	//gl_dst_color, gl_src_color
		map models/weapons/autocannon/autocannon_gren
		scroll 0, 2 *  time * 6
		//clamp
	}
}
*/

models/weapons/autocannon/autocannongrenade {
	//noOverlays
	noselfShadow
	noshadows
	//twosided
	renderbump  -size 128 128 -aa 1  models/weapons/autocannon/autocannon_gren_local models/weapons/autocannon/grenhi.lwo
	qer_editorimage 	models/weapons/autocannon/autocannon_gren
	diffusemap	models/weapons/autocannon/autocannon_gren
	bumpmap		models/weapons/autocannon/autocannon_gren_local
	specularmap	models/weapons/autocannon/autocannon_gren_s

}

//////////////////////////
//AutoCannon grenadeInTheWorm
//////////////////////////
models/weapons/autocannon/autocannonchunk
{
	// noOverlays
	// noselfShadow
	noshadows
 	// translucent
	// twosided

	qer_editorimage 	models/weapons/autocannon/autocannonchunk
	diffusemap 	models/weapons/autocannon/autocannonchunk
	bumpmap		addnormals(models/weapons/autocannon/autocannonchunk_local, heightmap(models/weapons/autocannon/autocannonchunk_h, 7 ) )
//	bumpmap		models/weapons/autocannon/autocannonchunk_h
	specularmap		models/weapons/autocannon/autocannonchunk_s
	{
		blend 	add	//gl_dst_color, gl_src_color
		map models/weapons/autocannon/autocannonchunk_add
		rgb	oneThirdTable [ time * .8 ]
		//clamp
	}
/*	{
		blend 	add	//gl_dst_color, gl_src_color
		map models/weapons/autocannon/autocannonchunk_add2
		scroll 0, 2 *  time * 6
		//clamp
	}*/
}
//////////////////////////
//rifle
//////////////////////////
models/weapons/rifle/rifleshot
{
	noshadows
	translucent
	nonsolid
	deform flare 		4
	qer_editorimage		textures/editor/flare
	{
		blend		add
		map 		_quadratic
		colored
///		vertexcolor
	}
}

models/weapons/rifle/rifletrail
{
	noshadows
	translucent
	twosided
	deform beam	// Always face the view origin
	{ // Normal version
		if(parm7 == 0)
		clamp
		blend add
		map textures/sfx/beams/beamrifle

	}
	{ // Fade out
		if(parm7 == 1)
		clamp
		blend add
		map textures/sfx/beams/beamrifle
		rgb burnout[5 * (time - parm4)]
		scroll 5 * (time - parm4), 0
	}
}

models/weapons/rifle/rifleSniperTrail
{
	noshadows
	translucent
	twosided
	deform beam	// Always face the view origin
	{ // Normal version
//		if(parm7 == 0)
		clamp
		blend add
		map textures/sfx/beams/beamriflesniper

	}
/*	{ // Fade out
		if(parm7 == 1)
		clamp
		blend add
		map textures/sfx/beams/beamriflesniper
		rgb burnout[5 * (time - parm4)]
		scroll 5 * (time - parm4), 0
	}*/

}

models/weapons/rifle/blastbeam
{
	noshadows
	translucent
	twosided

//	deform beam

	{
		blend add
		map models/weapons/rifle/blastBeam
		//color	.4, .2, .15, 1
		color	.2, .1, .07, 1
		clamp
		centerscale 1, 0.75 + 0.25 * alpha[time * 4]
		glowStage
	}
}

models/weapons/rifle/blastcorona
{
	noshadows
	translucent
	twosided

	deform sprite

	{
		blend add
		map models/weapons/rifle/blastcorona
	}
}

models/weapons/rifle/blasttrail
{
	noshadows
	translucent
	twosided


	{
		blend gl_one, gl_one_minus_src_color
		map models/weapons/rifle/blastcorona
		vertexcolor
		rgb 0.4
		glowstage
	}
}

models/weapons/rifle/blastcenter
{
	noshadows
	translucent
	twosided

	deform sprite

	{
		blend add
		map models/weapons/rifle/blastcenter
		//color	.4, .2, .15, 1
		color	.2, .1, .07, 1
		rotate time * 4
		clamp
		glowStage
	}
}

models/weapons/rifle/sniperblasttrail
{
	noshadows
	translucent
	twosided

	deform sprite


	{
		blend gl_one, gl_one_minus_src_color
		map models/weapons/rifle/sniperblasttrail
	}
}


//////////////////////////
//tether gun
//////////////////////////
models/weapons/tether/tethershot
{
	noSelfShadow
	twosided

	qer_editorimage models/weapons/tether/tethershot
	{
//		blend add
		blend gl_one, gl_one_minus_src_color
		map	models/weapons/tether/tethershot
	}
}

//////////////////////////
//vomit chunks
//////////////////////////
models/projectiles/vomit
{
	qer_editorimage models/projectiles/vomit/vomit

	renderbump  -size 256 256 -trace 0.08 models/projectiles/vomit/vomit_local models/projectiles/vomit/vomithi.lwo
	diffusemap models/projectiles/vomit/vomit
	bumpmap	addnormals(models/projectiles/vomit/vomit_local, heightmap(models/projectiles/vomit/vomit_h, 7 ) )
	specularmap models/projectiles/vomit/vomit_s
}
models/projectiles/explosion/explosion
{
	noselfshadow
	noshadows
	translucent
	renderbump  -size 128 128 -trace .5 -aa 1  models/projectiles/explosion/explosion_local models/projectiles/explosion/spherehi.lwo
//	diffusemap models/projectiles/explosion/explosion
//	{
//		blend gl_dst_color, gl_src_color
//		map 	models/projectiles/explosion/explosion_s
//		translate	time * 0 , time * -1
//		rgb	tim2 [ time * .3 ]
//	}
//	bumpmap	addnormals(models/projectiles/explosion/explosion_local, heightmap(models/projectiles/explosion/explosion_h, 7 ) )
//	bumpmap	models/projectiles/explosion/explosion_h
//	specularmap models/projectiles/explosion/explosion_s
//	{
//		blend	specularmap
//		map	models/projectiles/explosion/explosion_s
//		translate	time * 0 , time * -0.2
//	}
	{
		blend add
		map	models/projectiles/explosion/explosion_add
		translate	time * 0 , time * -4
		rgb	alpha_opp [ time - parm4 ]
	}
}
models/projectiles/explosion/explosionring
{
	noSelfShadow
	twosided

	{
		blend add
		map	models/projectiles/explosion/explosionring_add
	}
}

models/projectiles/explosion/arrowTrail
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// Always face the view origin
	{
		blend add
		map textures/sfx/beams/beamarrow
		rgb 0.9
	}
}

models/projectiles/glow/genericglow
{
	qer_editorimage		lights/circlelight10

	{
		map			lights/circlelight10
		zeroClamp
		colored

		red			Parm0
		green		Parm1
		blue		Parm2
	}
}

models/weapons/soulstripper/soulblast
{
	noshadows
	translucent
	nonsolid
	twosided
	deform flare 		8
	qer_editorimage		models/weapons/soulstripper/soulblast
	{
		blend		add
		map 		models/weapons/soulstripper/soulblast
		colored
//		vertexcolor
	}
}

models/projectiles/debris/large
{
	noselfShadow
	noshadows
	twosided

	{
      		blend 	diffusemap
		map	models/projectiles/debris/black
		alphaTest 0.5
	}
	{
		blend add
		map models/projectiles/debris/add
		rgb	burnout [ (time + parm4) * 0.5 ]
	}
}

models/projectiles/debris/small
{
	noselfShadow
	noshadows
	twosided

	{
      		blend 	diffusemap
		map	models/projectiles/debris/black
		alphaTest 0.5
	}
	{
		blend add
		map models/projectiles/debris/add
		rgb	burnout [ (time + parm4) * 0.5 ]
	}
}

//////////////////////////
//Mounted Gun projectile
//////////////////////////
models/mapobjects/trackgun/trackgunshot {
	//noOverlays
	noselfShadow
	noshadows
	twosided

	qer_editorimage 	models/mapobjects/trackgun/trackgunshot
	{
		blend 	add	//gl_dst_color, gl_src_color
		map models/mapobjects/trackgun/trackgunshot
//		scroll 9 *  time * 6, 0 *  time * 6
		clamp
		glowStage
	}
}


models/projectiles/mine/mine
{
	noselfshadow
	matter_metal
	renderbump  -size 128 128 -trace 0.07 -aa 2 models/projectiles/mine/mine_local models/projectiles/mine/minehi.lwo

	diffusemap models/projectiles/mine/mine
	bumpmap	models/projectiles/mine/mine_local
	specularmap models/projectiles/mine/mine_s
	{

		blend add
		map models/projectiles/mine/mine_a
		rgb 2.0 * oneThirdTable[ time * 2.0  ]
		glowStage
	}
}

models/projectiles/mine/mine_snd
{
	noselfshadow
	matter_metal
	renderbump  -size 128 128 -trace 0.07 -aa 2 models/projectiles/mine/mine_local models/projectiles/mine/minehi.lwo

	diffusemap models/projectiles/mine/mine
	bumpmap	models/projectiles/mine/mine_local
	specularmap models/projectiles/mine/mine_s
	{	if parm7 == 0
		blend add
		map models/projectiles/mine/mine_a
		color sound, 0, 0, 0
		glowStage
	}
	{	if parm7 == 1
		blend add
		map models/projectiles/mine/mine_a
		color 2.0 * oneThirdTable[ time * 2.0 ], 0, 0, 0
		glowStage
	}
}

models/projectiles/mine/jetpack_mine_b
{
	matter_stone
	noselfshadow


	renderbump  -size 1024 1024 -trace 0.09 -aa 1   models/projectiles/mine/jetpack_mine_b_local models/projectiles/mine/mine_hi.ase
	specularmap models/projectiles/mine/jetpack_mine_s
	diffusemap	models/projectiles/mine/jetpack_mine_b
	bumpmap		models/projectiles/mine/jetpack_mine_b_local
	{
		blend add
		map                  models/projectiles/mine/jetpack_mine_b_add
	    colored
        	color parm0 * flicker5[ time * 7 ],
			  parm1 * flicker5[ time * 7 ],
			  parm2 * flicker5[ time * 25 ],
			  1.0
		glowstage
        }
	{
		blend	add
		map 	models/projectiles/mine/jetpack_mine_b_add_b
		rgb 2.0 * oneThirdTable[ time * 2.0  ]
		glowStage
	}
	{
		blend	add
		map 	models/projectiles/mine/jetpack_mine_b_add_c
		rgb 2.0 * oneThirdTable[ time * 1.0  ]
		glowStage
	}

}

models/projectiles/mine/recharger
{
	matter_stone
	noselfshadow


	renderbump  -size 1024 1024 -trace 0.09 -aa 1   models/projectiles/mine/jetpack_mine_b_local models/projectiles/mine/mine_hi.ase
	specularmap models/projectiles/mine/recharger_s
	diffusemap	models/projectiles/mine/recharger
	bumpmap		models/projectiles/mine/jetpack_mine_b_local

/////normal purple glow
	{
//		if parm5 == 2
		blend add
		map   models/projectiles/mine/recharger_add
		red		1.0
		green	0.4
		blue	1.0
		glowstage
	}
	{
//		if parm5 == 2
		blend add
		map   models/projectiles/mine/recharger_add
		red		1.0
		green	0.4
		blue	1.0
		glowstage
	}

/////orange glow for damage states
	{
		if parm6 == 1
		blend add
		map   models/projectiles/mine/recharger_add
		red		1.0
		green	0.6
		blue	0.2
		glowstage
	}
	{
		if parm6 == 1
		blend add
		map   textures/sfx/lota_teleport_add
		red		0.5
		green	0.3
		blue	0.1
		scroll time * 3, time * 2
		scale 1, 1
	}
	{
		if parm6 == 1
		blend add
		map   textures/sfx/lota_teleport_add
		red		0.5
		green	0.3
		blue	0.1
		scroll time * -2, time * -3
		scale 1, 1
	}

/////burnin effect
	{
		if	parm7
		blend	gl_zero, gl_one
		map textures/sfx/genericdissolve
		alphaTest burnout[ 0.8 * (time - parm7) ]
	}
	{
		if parm7
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero
		map textures/sfx/genericdissolve
		red 1.0
		green 0.4
		blue 1.0
		alphaTest burnout[ 0.8 * (time - parm7) ] - 0.02
		glowStage
	}

/////burnout effect
	{
		if ( parm5 == 0 )
		blend none
		map textures/sfx/genericdissolve
		alphaTest 0
	}
	{
		if ( parm5 > 0 )
		blend none
		map textures/sfx/genericdissolve
		alphaTest ( time + parm4 ) * 1.0
	}
	{
		if ( parm5 > 0 )
		privatepolygonoffset	-1
		blend add
		map textures/sfx/genericdissolve
		alphaTest ( time + parm4 ) * 1.0 - 0.2
		red 1.0
		green 0.4
		blue 1.0
		glowStage
	}
}

models/projectiles/hider/hider_brass
{
	noselfshadow
	translucent

/*	{	// burning corpse effect
		if	parm7			// only when dead

		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything

		map models/projectiles/hider/imp_dis	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero

		map models/projectiles/hider/imp_dis	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}*/

	diffusemap models/weapons/hider/hiderglass_s
	specularmap models/weapons/hider/hiderglass_s
}