// beam materials

table beamflicker { { .8, 1.2, .6, .9, .7, .5, .9 } }

table beamflash { { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 } }
table beamflash2 { { 1, 0.25, 0.25, 1, 1, 0.25, 0.25, 1, 1, 0.25, 1, 1, 0.25, 0.25, 1, 1, 1, 0.25, 0.25, 1, 1, 1, 0.25, 0.25, 1, 1, 0.25, 0.25, 1, 1, 1, 0.25, 0.25 } }
table beamflash3 { { 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1 } }

//
//spindle b turbine beams and flares
//

textures/sfx/beams/turbine_mainbeam {
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_mainbeam
		centerscale 2, 1
		colored
		scroll time * -1.5, 0
		rgb 0.2
		glowStage
	}
}

textures/sfx/beams/turbine_mainbeam2 {
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_mainbeam
		centerscale 2, 1
		colored
		scroll time * -1.1, 0
		rgb 0.7
		glowStage
	}
}

textures/sfx/beams/turbine_mainflare {
	noselfshadow
	noshadows
	translucent
	twosided
	deform sprite
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time * 0.7
		centerscale 2.2, 2.2
		clamp

		color
			parm0 * 0.1,
			parm1 * 0.35,
			parm2 * 0.5,0

		glowStage
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time / -10
		centerscale 1.2,1.2
		glowstage
		clamp

		color
			parm0 * 0.0,
			parm1 * 0.1,
			parm2 * 0.2,0

		glowStage
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time / 10
		centerscale 1.2,1.2
		glowstage
		clamp

		color
			parm0 * 0.0,
			parm1 * 0.1,
			parm2 * 0.2,0

		glowStage
	}
}

textures/sfx/beams/turbine_panelbeam {
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_mainbeam
		centerscale 2, 1
		scroll time * -1.5, 0

		color
			parm0 * 0.2  * (beamflash [time * 2.8 * ( parm6 + 1 )] ),
			parm1 * 0.21 * (beamflash [time * 2.8 * ( parm6 + 1 )] ),
			parm2 * 0.2  * (beamflash [time * 2.8 * ( parm6 + 1 )] ),0

		glowStage
	}

	{
		maskcolor
		map	makealpha(textures/sfx/beams/turbine_beammask)
		centerscale .6, 1
		scroll 2, 1
		rotate 1.5
		glowstage
		clamp
	}
	{
		maskalpha
		blend	gl_dst_alpha, gl_one
		map textures/sfx/beams/turbine_mainbeam
		centerscale 2, 1
		scroll time * -1.5, 0

		color
			parm0 * 0.25 * (beamflash [time * 2.85 * ( parm6 + 1 )] ),
			parm1 * 0.06 * (beamflash [time * 2.85 * ( parm6 + 1 )] ),
			parm2 * 0    * (beamflash [time * 2.85 * ( parm6 + 1 )] ),0

		glowStage
	}
}

textures/sfx/beams/turbine_panelbeam2 {
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_mainbeam2
		centerscale 2, 1
		scroll time * -1.5, 0

		color
			parm0 * 0.55 * 	(beamflash[time * 1]) * ( parm6 + 1 ),
			parm1 * 0.55 *	(beamflash[time * 1]) * ( parm6 + 1 ),
			parm2 * 0.55 *	(beamflash[time * 1]) * ( parm6 + 1 ),0

		glowStage
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_mainbeam2
		centerscale 0.6, 1
		scroll time * -1.5, 0

		color
			parm0 * 0.65 * 	(beamflash[time * 1.5]) * ( parm6 + 1 ),
			parm1 * 0.65 *	(beamflash[time * 1.5]) * ( parm6 + 1 ),
			parm2 * 0.65 *	(beamflash[time * 1.5]) * ( parm6 + 1 ),0

		glowStage
	}
}

textures/sfx/beams/turbine_panelflare {
	noselfshadow
	noshadows
	translucent
	twosided
	deform sprite
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time / 30
		centerscale 2, 2
		clamp

		color
			parm0 * 0.2 * (beamflash[time * 1.5]),
			parm1 * 0.5 *	(beamflash[time * 1.5]),
			parm2 * 0.6 *	(beamflash[time * 1.5]),0

		glowStage
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time / -30
		centerscale 2, 2
		clamp

		color
			parm0 * 0.2 * (beamflash[0.5 + time * 1.5]),
			parm1 * 0.5 *	(beamflash[0.5 + time * 1.5]),
			parm2 * 0.6 *	(beamflash[0.5 + time * 1.5]),0

		glowStage
	}
	{
		blend gl_one,gl_one_minus_src_color
		map textures/particles/energy2
		rotate time / -30
		centerscale 1.3,1.3
		glowstage
		clamp

		color
			parm0 * 0.1 * (beamflash[time * 1]),
			parm1 * 0.4 *	(beamflash[time * 1]),
			parm2 * 0.5 *	(beamflash[time * 1]),0

		glowStage
	}
}

textures/sfx/beams/turbine_lightningball_beam {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend gl_one,gl_one_minus_src_color
		map textures/sfx/beams/turbine_lightningball_beam
		//centerscale .1, 1
		colored
		//scroll 1, 1
		clamp
		glowStage
	}
}

//
//this concludes the turbine beams. thank you.
//

textures/sfx/beams/beamlaser
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beamlaser
		rgb beamflicker[time * 8]
		scroll -1, 0
		glowStage
	}
}

textures/sfx/beams/securityeye
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beamlaser
		rgb .8 * beamflicker[time * 8]
		scale 1, 1.5
		scroll -1, 0
		glowStage
	}
}

textures/sfx/beams/beammountedgun
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// always face the view origin

	{
		if parm7 == 1
		clamp
		blend add
		map textures/sfx/beams/beammountedgun
		rgb .25 * beamflicker[time * 8]
		scroll -1, 0
		scale 1, 1
		glowStage
	}
}

textures/sfx/beams/beamenergycore
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam

	{
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_r13
		rgb 0.9
		glowStage
	}
}

textures/sfx/beams/greenlaser
{
	noselfshadow
	noshadows
	translucent
	twosided

	{
		blend add
		map textures/sfx/beams/beamlaser
		centerscale 3, 1
		red		0
		green	1
		blue	0
		glowStage
	}
}

textures/sfx/beams/cranebeam
{
	noselfshadow
	noshadows
	translucent
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_r18
		red 0
		green 0.55
		blue 0.65
		scroll time*4, 0
		centerscale 4, 1
		glowStage
	}
}
textures/sfx/beams/cranebeam2
{
	noselfshadow
	noshadows
//	translucent
	twosided
	deform beam
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
//		map textures/sfx/beams/beam_r18
		map textures/sfx/beams/cranebeam2
//		red 0
//		green 0.95
//		blue 0.65
		scroll time*2, 0
		centerscale 8, 1
		glowStage
	}
}
models/mapobjects/electrotower/beameffect {
	noselfshadow
	noshadows
	translucent
	twosided
	{
		blend add
		map textures/sfx/beams/beam_r7
		centerscale 6, 1
		colored
		scroll time * -1, 0
		glowStage
	}
}

models/mapobjects/trackgun/trackguneffect {
	noselfshadow
	noshadows
	translucent
	twosided
	{
		blend add
		map textures/sfx/beams/beam_r10
		centerscale 6, 1
		colored
		scroll time * -1, 0
		glowStage
	}
}

textures/sfx/beams/beamchain
{	// used for hanging yuppie
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// always face the view origin
	{
		blend blend
		map _white
		red 0
		green 0
		blue 0
		glowStage
	}
}

textures/sfx/beams/beam_colored
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_colored
		scroll -0.25 * time + parm4, 0
		red	parm0 * beamflicker[time * 8]
		green parm1 * beamflicker[time * 8]
		blue parm2 * beamflicker[time * 8]
		centerscale 4, 1
		glowStage
	}
}

textures/sfx/beams/forcefield_beam
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beamforcefield
		scroll 15 * time + parm4, 0
//		rgb beamflicker[time * 8]
		colored
		centerscale 8, 1

		glowStage
	}
}

textures/sfx/beams/biolabs_holding_beam
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_biolabs_holding
		scroll 4 * time + parm4, 0
//		rgb beamflicker[time * 8]
//		rgb 0.5
//		colored
		centerscale 16, 1

		glowStage
	}
	{
		blend add
		map textures/sfx/beams/beam_biolabs_holding2
		scroll 1.25 * time + parm4, 0.5 * time + parm4
		centerscale 24, 0.5

//		glowStage
	}
}

textures/sfx/beams/biolabs_holding_beamA
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_biolabs_holding
		scroll 8 * time + parm4, 0
//		rgb beamflicker[time * 8]
//		rgb 0.5
//		colored
		centerscale 64, 1

		glowStage
	}
	{
		blend add
		map textures/sfx/beams/beam_biolabs_holding2
		scroll 2.5* time + parm4, 0.5 * time + parm4
		centerscale 64, 0.5

//		glowStage
	}
}



textures/sfx/beams/beam_soulstripper
{
	noselfshadow
	noshadows
	translucent
	twosided

//	deform beam	// always face the view origin

	{
		if ( parm7 != 2 ) // normal mode
		blend add
		map textures/sfx/beams/beam_soulc
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1

		glowStage
	}
	{
		if ( parm7 == 2 ) // harvest mode
		blend add
		map textures/sfx/beams/beam_soulc_red
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1

		glowStage
	}

}

textures/sfx/beams/beam_soulstripperelectric
{
	noselfshadow
	noshadows
	translucent
	twosided

//	deform beam	// always face the view origin

	{
		if ( parm7 != 2 ) // normal mode
		blend add
		map textures/sfx/beams/beam_soulc_blue
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1

		glowStage
	}
	{
		if ( parm7 == 2 ) // harvest mode
		blend add
		map textures/sfx/beams/beam_soulc_red
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1

		glowStage
	}
}

textures/sfx/beams/beam_soulcannister
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_soul
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1
		glowStage
	}
}

textures/sfx/beams/spark_autocannon
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view originw

	{
		blend add
		map textures/sfx/beams/beam_spark
		red parm0 * beamflash[time]
		green parm1 * beamflash[time]
		blue parm2 * beamflash[time]
		scroll -1, 0
		glowStage
	}
}

textures/sfx/beams/portalspark
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r25
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 2.8 * distance]
		green parm1 * beamflash[time * 2.8 * distance]
		blue parm2 * beamflash[time * 2.8 * distance]
		glowStage
	}
}

textures/sfx/beams/portalfx
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r26
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 2.8 * distance]
		green parm1 * beamflash[time * 2.8 * distance]
		blue parm2 * beamflash[time * 2.8 * distance]
		glowStage
	}
}

textures/sfx/beams/beam_soulcannisterb
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_soulb
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 8, 1
		glowStage
	}
}

models/monsters/gasbag/beameffect {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r21
		centerscale 6, 1
		colored
		scroll time * -1, 0
		glowStage
	}
}

textures/sfx/beams/beam_energycore
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beamenergycore
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 3, 1
		glowStage
	}

	{
		blend add
		map textures/sfx/beams/beamenergycore
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 3, 1

		glowStage
	}
}

textures/sfx/beams/beam_energycore2
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beamenergycore2
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 3, 1
		glowStage
	}

	{
		blend add
		map textures/sfx/beams/beamenergycore2
		rgb beamflicker[time * 8]
		scroll 2 * time, 0
		centerscale 3, 1

		glowStage
	}
}

textures/sfx/beams/shuttlelaserpuzzlelarge {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r22
		centerscale 2, 1
		colored
		scroll time * -1.5, 0
		glowStage
	}
}

textures/sfx/beams/shuttlelaserpuzzlesmall {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r22
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 1]//distance]
		green parm1 * beamflash[time * 1]//distance]
		blue parm2 * beamflash[time * 1]//distance]
		glowStage
	}
}

textures/sfx/beams/shuttlelaserpuzzlesmallb {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r22
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 2.8]//* distance]
		green parm1 * beamflash[time * 2.8]// * distance]
		blue parm2 * beamflash[time * 2.8]// * distance]
		glowStage
	}
}

textures/sfx/beams/harvesterlargepiston {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 2, 1
		//colored
		scroll time * -1.5, 0
		glowStage
	}
}

textures/sfx/beams/harvesterlargepistoncolor {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 2, 1
		colored
		scroll time * -1.5, 0
		glowStage
	}
}

textures/sfx/beams/harvesterlargepistonflicker {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 2, 1
		//colored
		rgb beamflash[time * 1.5]
		scroll time * -1.5, 0
		glowStage
	}
}

textures/sfx/beams/electricalbeam1 {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r27
		centerscale 1, 1
		scroll time * -1.5, 0
		red parm0 * beamflash2[time]
		green parm1 * beamflash2[time]
		blue parm2 * beamflash2[time]
		glowStage
	}
}

textures/sfx/beams/electricalbeam1b {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r27
		centerscale 2, 1
		scroll time * -1.5, 0
		red parm0 * beamflash3[time * 2.8]
		green parm1 * beamflash3[time * 2.8]
		blue parm2 * beamflash3[time * 2.8]
		glowStage
	}
}

textures/sfx/beams/shuttle_tractorbeam
{
	noselfshadow
	noshadows
	translucent
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beamshuttle
//		red 0
//		green 0.55
//		blue 0.65
		scroll time*2, 0
		centerscale 1, 1
		glowStage
	}
}

textures/sfx/beams/shuttle_dockbeam1
{
	noselfshadow
	noshadows
	twosided
	translucent
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beamdock1
//		red 0
//		green 0.55
//		blue 0.65
		scroll time*2, 0
		centerscale 1, 1
		glowStage
	}
}

textures/sfx/beams/shuttle_dockbeam2
{
	noselfshadow
	noshadows
	translucent
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beamdock2
		rgb 1	//this beam shuts off when the shuttle is fully recharged
		scroll time*-3, 0
		centerscale 1, 1
		glowStage
	}
}

textures/sfx/beams/dockedgunbeam1
{
	noselfshadow
	noshadows
	twosided
	translucent
	{
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_dockedgun
		scroll time*2, 0
		centerscale 1, 1
		glowStage
	}
}

// used on shuttle transport, not a beam system.  parm6 controls opacity.
textures/sfx/beams/shuttle_transbeam
{
	noselfshadow
	noshadows
	twosided
	translucent
	sort close

	{	if ( parm5 > 0 )		// fade in
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_transport
		rgb (0.2 + (parm6*0.8)) * growin[ time + parm4 - 1 ]	// fade out 1 second after transport fades in
		scroll time*2, 0
		centerscale 1, 1
		glowStage
	}
	{	if ( parm5 < 0 )		// fade out
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_transport
		rgb (0.2 + (parm6*0.8)) * growout[ time + parm4 ]
		scroll time*2, 0
		centerscale 1, 1
		glowStage
	}
}

textures/sfx/beams/beam_attack
{
	noselfshadow
	noshadows
	translucent
	deform beam
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_attack
		scroll time*-9, 0
		centerscale 10, 1
		glowStage
	}
}

textures/sfx/beams/beam_telepathic
{
	noselfshadow
	noshadows
	translucent
	deform beam
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_telepathic
		scroll time*2, 0
		centerscale 10, 1
		red 0.82
		green 1.00
		blue 1.00
		glowStage
	}
}

textures/sfx/beams/hrvCubeArc {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 6, 1
		scroll time * -1.5, 0
		colored
		glowStage
	}
}

textures/sfx/beams/hrvCubeArcFlare {
	noselfshadow
	noshadows
	translucent
	twosided
	deform sprite
	{
		blend add
		map textures/sfx/flare1
		clamp
		colored
	}

}

textures/sfx/beams/hrvCubeArc2 {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 6, 1
		scroll time * -1.5, 0
		red 	parm0 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		green 	parm1 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		blue 	parm2 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		glowStage
	}
}

textures/sfx/beams/hrvCubeArcFlare2 {
	noselfshadow
	noshadows
	translucent
	twosided
	deform sprite
	{
		blend add
		map textures/sfx/flare1
		clamp
		red 	parm0 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		green 	parm1 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		blue 	parm2 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
	}

}

textures/sfx/beams/keeperCinArc1 {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 6, 1
		scroll time * -1.5, 0
		red 	parm0 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		green 	parm1 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		blue 	parm2 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		glowStage
	}
}

textures/sfx/beams/keeperCinArc2 {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 6, 1
		scroll time * -1.5, 0
		red 	parm0 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		green 	parm1 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		blue 	parm2 * beamflash[ time * ( 1 + parm6 ) + parm5 ]
		glowStage
	}
}

textures/sfx/beams/sniperLaser {
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam	// always face the view origin
	{
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_r18
		red 0
		green 1
		blue 0
		scroll -1, 0
		glowStage
	}
}

textures/sfx/beams/rifleSniper {
	noselfshadow
	noshadows
	translucent
	twosided
//	deform beam	// always face the view origin
	{
		blend add
		map models/weapons/rifle/laser1
		scroll .05 * costable[time * 0.03], 0
		rgb flicker2[ time * 0.5 ]
		glowStage
	}
	{
		blend add
		map models/weapons/rifle/laser2
		scroll  .05 * sintable[time * -0.05], 0
		rgb flicker5[ time * 0.7 ]
		glowStage
	}
	{
		blend add
		map textures/sfx/beams/beamlaser
		rgb .2 * beamflicker[time * 0.8]
		clamp
		glowStage
	}
}

textures/sfx/beams/transport_creation_large {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_transport
		centerscale 2, 1
		colored
		scroll time * -1.5, 0
	}
}

textures/sfx/beams/transport_creation_small {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_transport
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * distance]
		green parm1 * beamflash[time * distance]
		blue parm2 * beamflash[time * distance]
	}
}


textures/sfx/beams/hologram_turbine_large {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r18
		centerscale 2, 1
		colored
		scroll time * -1.5, 0
		glowStage
	}
}

textures/sfx/beams/droidzip
{
	noselfshadow
	noshadows
	translucent
	deform beam
	{
		blend gl_one, gl_one_minus_src_color
		map textures/sfx/beams/beam_attack
		scroll time*-9, 0
		centerscale 10, 1
		rgb 1.0 - concaveFade[time]
		glowStage
	}
}

textures/sfx/beams/hologram_turbine_small {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r18
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * distance]
		green parm1 * beamflash[time * distance]
		blue parm2 * beamflash[time * distance]
		glowStage
	}
}

textures/sfx/beams/droid_lightning
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_r28
		centerscale 1, 1
//		scroll time * -1.5, 0
		red parm0 * beamflash[time * 2.8 * distance]
		green parm1 * beamflash[time * 2.8 * distance]
		blue parm2 * beamflash[time * 2.8 * distance]
		glowStage
	}
}

textures/sfx/beams/sboss_mainbeam1
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam

	{
		blend add
		map textures/sfx/beams/sboss_mainbeam1
		centerscale 1, 1 * parm6
		colored
		scroll time * -1.5, 0
	}
}

textures/sfx/beams/sboss_mainbeam2
{
	noselfshadow
	noshadows
	translucent
	twosided
	deform beam

	{
		blend add
		map textures/sfx/beams/sboss_mainbeam2
		centerscale 1.5, 1 * parm6
		colored
		scroll time * -4, 0
		glowstage
		rgb 0.3
		clamp
	}
	{
		blend add
		map textures/sfx/beams/sboss_mainbeam2
		centerscale .6, 2 * parm6
		colored
		scroll time * -3, 0
		//glowstage
		//rgb 0.1
		clamp
	}
}

textures/sfx/beams/sboss_smallbeam1
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/sboss_smallbeam1
		colored
		centerscale 8, 2
		scroll time * -10, 0
		rgb 0.2
		clamp
	}
	{
		blend add
		map textures/sfx/beams/sboss_smallbeam1
		colored
		centerscale 4, 1
		scroll time * -10, 0
		glowStage
		rgb 0.7
		clamp
	}
}

textures/sfx/beams/sboss_smallbeam2
{
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/sboss_smallbeam2
		colored
		centerscale 8, 1
		scroll time * -10, 0
		clamp
	}
	{
		blend add
		map textures/sfx/beams/sboss_smallbeam2
		colored
		centerscale 4, 1
		scroll time * -10, 0
		glowStage
		rgb 0.6
	}
}

textures/sfx/beams/fakebeam_plasma_tube
{
	noselfshadow
	noshadows
	translucent
//	deform beam
	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_plasma_tube
		scroll (time * -1), 0
		centerscale 1, 1
		glowStage
	}
}

textures/sfx/beams/gfx_recharge
{
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_gfx_recharge
		scroll time*12, 0
		centerscale 15, 1
		glowStage
	}
}

textures/sfx/beams/gfx_recharge2
{
	noselfshadow
	noshadows
	translucent

	deform beam	// always face the view origin

	{
		blend gl_one, gl_one_minus_src_color
//		blend add
		map textures/sfx/beams/beam_gfx_recharge2
		scroll time*9, 0
		centerscale 15, 1
//		glowStage
	}
}

textures/sfx/beams/gfx_recharge_damage {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_gfx_recharge_damage
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 1]//distance]
		green parm1 * beamflash[time * 1]//distance]
		blue parm2 * beamflash[time * 1]//distance]
		glowStage
	}
}

textures/sfx/beams/gfx_recharge_damageb {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_gfx_recharge_damage
		centerscale 6, 1
		scroll time * -1.5, 0
		red parm0 * beamflash[time * 2.8]//* distance]
		green parm1 * beamflash[time * 2.8]// * distance]
		blue parm2 * beamflash[time * 2.8]// * distance]
		glowStage
	}
}

textures/sfx/beams/gfx_retract {
	noselfshadow
	noshadows
	translucent
	twosided

	deform beam	// always face the view origin

	{
		blend add
		map textures/sfx/beams/beam_gfx_retract
		centerscale 6, 1
		scroll time * -1.5, 0
		glowStage
	}
}